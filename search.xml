<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux生成密钥</title>
      <link href="/limux_miyao/"/>
      <url>/limux_miyao/</url>
      
        <content type="html"><![CDATA[<p>使用ssh-keygen命令 生成文件路径：~/.ssh/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><ul><li>-t rsa: 指定密钥类型为RSA。</li><li>-b 4096: 指定密钥长度为4096位，以提高安全性。</li><li>-C “<a href="mailto:&#121;&#111;&#117;&#x72;&#95;&#101;&#109;&#x61;&#105;&#x6c;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;">&#121;&#111;&#117;&#x72;&#95;&#101;&#109;&#x61;&#105;&#x6c;&#x40;&#x65;&#x78;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;</a>“: 添加注释，通常用于记录您的电子邮件地址。</li></ul><p>如果需要一个PEM格式的密钥，你可以使用openssl工具来生成。如果你只是想要一个OpenSSH格式的密钥，并且希望私钥文件具有.pem扩展名，你可以使用ssh-keygen工具生成，并手动更改文件扩展名。</p><p>如果你需要生成一个OpenSSH格式的密钥，并希望私钥文件名为id_rsa.pem：<br>使用ssh-keygen命令生成密钥对，并指定私钥文件名为id_rsa.pem：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;your-email@example.com&quot;</span> -f ~/.ssh/id_rsa.pem</span><br></pre></td></tr></table></figure><ul><li>-f ~/.ssh/id_rsa.pem 指定了私钥文件的路径和文件名。<br>运行上述命令后，你将会得到两个文件：<br>~/.ssh/id_rsa.pem：这是私钥文件。<br>~/.ssh/id_rsa.pem.pub：这是对应的公钥文件。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
          <category> 密钥 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 密钥 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Suricata部署安装</title>
      <link href="/suricata_install/"/>
      <url>/suricata_install/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.osgeo.cn/suricata/what-is-suricata.html">中文参考文档</a><a href="https://docs.suricata.io/en/suricata-7.0.6/">英文参考文档</a> <a href="https://suricata.io/download/">官方网站</a></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Suricata 是一个高性能的网络入侵检测和防御系统（IDS/IPS）。它是由OISF开发，完全开源，并且可以免费使用。Suricata是一个开源的IDS，能够实时监控网络流量，检测和防御潜在的威胁。<br>Suricata的设计注重性能和可扩展性，它可以在低至中等规格的硬件上运行，支持多线程，同时处理高吞吐量的网络流量，同时流分析功能更为强大和复杂。<br>Suricata能够检测各种网络威胁，包括但不限于：</p><ul><li>协议解析：支持多种协议，如TCP, UDP, ICMP, HTTP, FTP等。</li><li>签名匹配：使用类似于Snort的规则语言进行签名匹配，以检测已知攻击模式。</li><li>异常检测：可以检测到异常行为，如异常流量或潜在的恶意行为。</li><li>应用层检测：能够检测应用层的攻击和异常行为，例如SQL注入攻击。</li><li>流量分析：可以对网络流量进行深入分析，包括状态跟踪和流量重建。</li><li>实时响应：在检测到攻击时，可以实时阻断或记录攻击流量。</li></ul><p>Suricata的一些主要运行模式：</p><ul><li>Single 模式：在这种模式下，所有的数据处理任务都由单个工作线程完成。</li><li>Workers 模式：这是为了高性能而设计的模式。在Workers模式中，每个工作线程都独立执行从数据包捕获到日志记录的所有任务，以实现负载均衡和提高处理速度。</li><li>Autofp 模式：这种模式适用于处理PCAP文件或在某些IPS设置的情况下。Autofp模式下，有一个或多个数据包捕获线程，它们捕获数据包并进行解码，然后将数据包传递给 flow worker 线程。</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>当前测试环境CentOS8，当前Suricate的最新版本为7 <a href="https://docs.suricata.io/en/suricata-7.0.6/install.html#rpm-packages">安装参考步骤</a></p><h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><p>从源分发文件安装可以最大程度地控制Suricata安装。</p><p>提前安装依赖 gcc pcre2-devel libyaml-devel jansson-devel libpcap-devel</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc pcre2-devel jansson-devel libpcap-devel</span><br><span class="line">wget https://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz</span><br><span class="line">tar xzvf yaml-0.1.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> yaml-0.1.4</span><br><span class="line">./configure --prefix=/usr/local    <span class="comment">#注意此处勿改路径！否则库文件无法写入正确目录</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>安装Suricate</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.openinfosecfoundation.org/download/suricata-7.0.6.tar.gz</span><br><span class="line"></span><br><span class="line">tar xzvf suricata-7.0.6.tar.gz</span><br><span class="line"><span class="built_in">cd</span> suricata-7.0.6</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="yum-安装"><a href="#yum-安装" class="headerlink" title="yum 安装"></a>yum 安装</h2><p>yum安装有可能不成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release yum-plugin-copr</span><br><span class="line">yum -y copr <span class="built_in">enable</span> @oisf/suricata-7.0</span><br><span class="line">yum -y install suricata</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 网络安全 </category>
          
          <category> Suricata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> Suricata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oxidized网络设备自动备份</title>
      <link href="/oxidized_install/"/>
      <url>/oxidized_install/</url>
      
        <content type="html"><![CDATA[<p><a href="https://cloud.tencent.com/developer/article/1654423">文字参考</a> <a href="https://www.cnblogs.com/alanlin/p/11173214.html">Docker部署参考</a><br><a href="https://github.com/ytti/oxidized">项目地址</a><br>随着网络设备的增多，通过人手备份网络设备倍感压力，而且效率低。有编程基础的人可能会通过Python的parimiko 或者netmiko 连接到设备操作 把文件通过ftp 上传到FTP服务器, 在通过定时任务,定期自动备份。这个应该是现阶段主流非人民币网络玩家的最优解决方案。<br>今天我们来看看oxidized这个被称之为“最好用的”网络备份系统，友好的支持不同厂商。</p><h1 id="oxidized简介"><a href="#oxidized简介" class="headerlink" title="oxidized简介"></a>oxidized简介</h1><p>oxidized 是一个网络设备备份系统, 轻量级,可扩展,支持超过90多个操作系统。个人觉得它无与伦比的优势, 同时支持h3c,华为,思科。<br>随着容器化的兴起，部署软件变得的越来越简单，有的已经帮您封装好，你开箱即用就可以了。<br>oxidized组成：</p><ul><li>config 文件：oxidized 配置文件</li><li>Sources 字段：定位 router.db 文件的位置</li><li>Outputs 字段 ：设备备份文件的存储位置</li><li>model 字段：设备厂商所用的系统, 核心功能就是靠这个实现的</li><li>router.db文件：被管网络设备详细信息</li></ul><h1 id="部署安装"><a href="#部署安装" class="headerlink" title="部署安装"></a>部署安装</h1><h2 id="拉取官方镜像"><a href="#拉取官方镜像" class="headerlink" title="拉取官方镜像"></a>拉取官方镜像</h2><p>把官方的 oxidized/oxidized 镜像拉下来，有可能会失败，则自己制作镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@LYGVLTOPOT01 ~]<span class="comment"># docker pull repository-tst.hengrui.com/docker-proxy/oxidized/oxidized:latest</span></span><br><span class="line">latest: Pulling from oxidized/oxidized</span><br><span class="line">toomanyrequests: You have reached your pull rate <span class="built_in">limit</span>. You may increase the <span class="built_in">limit</span> by authenticating and upgrading: https://www.docker.com/increase-rate-limit</span><br></pre></td></tr></table></figure><h2 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h2><p>如果上一步拉取失败，则自己制作镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># clone oxidized文件</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ytti/oxidized</span><br><span class="line"><span class="comment"># build xoidized镜像 -- 可能会有报错</span></span><br><span class="line">docker build -q -t oxidized/oxidized:latest oxidized/</span><br></pre></td></tr></table></figure><h2 id="启动镜像"><a href="#启动镜像" class="headerlink" title="启动镜像"></a>启动镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --name oxidized -it -v /etc/localtime:/etc/localtime:ro -v /data/oxidized:/home/oxidized/.config/oxidized -p 8888:8888/tcp -e CONFIG_RELOAD_INTERVAL=3600 --restart unless-stopped -d oxidized/oxidized </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志 &amp;&amp; 进入oxidized内部</span></span><br><span class="line">docker logs -n 50 oxidized</span><br><span class="line">docker <span class="built_in">exec</span> -it oxidized /bin/bash</span><br></pre></td></tr></table></figure><p>发现首次会启动失败，提示缺少router.db文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@LYGVLTOPOT01 oxidized]<span class="comment"># docker logs -n 50 oxidized </span></span><br><span class="line">*** Running /etc/my_init.d/00_regen_ssh_host_keys.sh...</span><br><span class="line">*** Running /etc/my_init.d/10_syslog-ng.init...</span><br><span class="line">Aug 12 15:27:45 3d76614d6801 syslog-ng[14]: syslog-ng starting up; version=<span class="string">&#x27;3.35.1&#x27;</span></span><br><span class="line">*** Booting runit daemon...</span><br><span class="line">*** Runit started as PID 24</span><br><span class="line">Aug 12 15:27:46 3d76614d6801 cron[30]: (CRON) INFO (pidfile fd = 3)</span><br><span class="line">Aug 12 15:27:46 3d76614d6801 cron[30]: (CRON) INFO (Running @reboot <span class="built_in">jobs</span>)</span><br><span class="line">edit ~/.config/oxidized/config</span><br><span class="line">I, [2024-08-12T15:27:48.453778 <span class="comment">#40]  INFO -- : Oxidized starting, running as pid 40</span></span><br><span class="line">F, [2024-08-12T15:27:48.456570 <span class="comment">#40] FATAL -- : Oxidized crashed, crashfile written in /home/oxidized/.config/oxidized/crash</span></span><br><span class="line">no <span class="built_in">source</span> csv config, edit ~/.config/oxidized/config</span><br><span class="line">I, [2024-08-12T15:27:49.751378 <span class="comment">#42]  INFO -- : Oxidized starting, running as pid 42</span></span><br><span class="line">I, [2024-08-12T15:27:49.760121 <span class="comment">#42]  INFO -- : lib/oxidized/nodes.rb: Loading nodes</span></span><br><span class="line">F, [2024-08-12T15:27:49.955537 <span class="comment">#42] FATAL -- : Oxidized crashed, crashfile written in /home/oxidized/.config/oxidized/crash</span></span><br><span class="line">no output file config, edit ~/.config/oxidized/config</span><br><span class="line">I, [2024-08-12T15:27:51.283274 <span class="comment">#44]  INFO -- : Oxidized starting, running as pid 44</span></span><br><span class="line">I, [2024-08-12T15:27:51.284005 <span class="comment">#44]  INFO -- : lib/oxidized/nodes.rb: Loading nodes</span></span><br><span class="line">I, [2024-08-12T15:27:51.481188 <span class="comment">#44]  INFO -- : lib/oxidized/nodes.rb: Loaded 1 nodes</span></span><br></pre></td></tr></table></figure><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><p>此处的顺序和config中map调用有关系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">[root@LYGVLTOPOT01 ~]<span class="comment"># cat /data/oxidized/router.db </span></span><br><span class="line">YJYHX_255.22:vrp:10.50.255.22:hradmin:Asdf!123</span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通配置</span></span><br><span class="line">[root@LYGVLTOPOT01 ~]<span class="comment"># vi /data/oxidized/config</span></span><br><span class="line">---</span><br><span class="line">username: username</span><br><span class="line">password: password</span><br><span class="line">model: junos</span><br><span class="line">resolve_dns: <span class="literal">true</span></span><br><span class="line">interval: 3600</span><br><span class="line">use_syslog: <span class="literal">false</span></span><br><span class="line"><span class="built_in">log</span>: /home/oxidized/.config/oxidized/logs/oxidized.log</span><br><span class="line">debug: <span class="literal">false</span></span><br><span class="line">run_once: <span class="literal">false</span></span><br><span class="line">threads: 30</span><br><span class="line">use_max_threads: <span class="literal">false</span></span><br><span class="line"><span class="built_in">timeout</span>: 20</span><br><span class="line">retries: 3</span><br><span class="line">prompt: !ruby/regexp /^([\w.@-]+[<span class="comment">#&gt;]\s?)$/</span></span><br><span class="line">rest: 0.0.0.0:8888</span><br><span class="line">next_adds_job: <span class="literal">false</span></span><br><span class="line">vars: &#123;&#125;</span><br><span class="line"><span class="built_in">groups</span>: &#123;&#125;</span><br><span class="line">group_map: &#123;&#125;</span><br><span class="line">models: &#123;&#125;</span><br><span class="line">pid: <span class="string">&quot;/home/oxidized/.config/oxidized/pid&quot;</span></span><br><span class="line">crash:</span><br><span class="line">  directory: <span class="string">&quot;/home/oxidized/.config/oxidized/crashes&quot;</span></span><br><span class="line">  hostnames: <span class="literal">false</span></span><br><span class="line">stats:</span><br><span class="line">  history_size: 10</span><br><span class="line">input:</span><br><span class="line">  default: ssh, telnet</span><br><span class="line">  debug: <span class="literal">false</span></span><br><span class="line">  ssh:</span><br><span class="line">    secure: <span class="literal">false</span></span><br><span class="line">  ftp:</span><br><span class="line">    passive: <span class="literal">true</span></span><br><span class="line">  utf8_encoded: <span class="literal">true</span></span><br><span class="line">output:</span><br><span class="line">  default: file</span><br><span class="line">  file:</span><br><span class="line">    directory: <span class="string">&quot;/home/oxidized/.config/oxidized/configs&quot;</span></span><br><span class="line"><span class="built_in">source</span>:</span><br><span class="line">  default: csv</span><br><span class="line">  csv:</span><br><span class="line">    file: <span class="string">&quot;/home/oxidized/.config/oxidized/router.db&quot;</span></span><br><span class="line">    delimiter: !ruby/regexp /:/</span><br><span class="line">    map:</span><br><span class="line">      name: 0</span><br><span class="line">      model: 1</span><br><span class="line">      ip: 2</span><br><span class="line">      username: 3</span><br><span class="line">      password: 4</span><br><span class="line">    gpg: <span class="literal">false</span></span><br><span class="line">model_map:</span><br><span class="line">  juniper: junos</span><br><span class="line">  cisco: ios</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="RSA密钥配置"><a href="#RSA密钥配置" class="headerlink" title="RSA密钥配置"></a>RSA密钥配置</h3><p>使用密钥rsa验证 首先生成rsa密钥文件 <a href="https://github.com/ytti/oxidized/blob/master/docs/Configuration.md">配置参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成rsa密钥文件</span></span><br><span class="line">ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa.pem</span><br><span class="line"><span class="built_in">cp</span> /root/.ssh/id_rsa.pem /data/oxidized/id_rsa.pem</span><br></pre></td></tr></table></figure><p><strong>通用密钥认证</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config中调用</span></span><br><span class="line">[root@LYGVLTOPOT01 ~]<span class="comment"># vi /data/oxidized/config</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局</span></span><br><span class="line">······</span><br><span class="line">next_adds_job: <span class="literal">false</span></span><br><span class="line">vars:</span><br><span class="line">  ssh_keys: <span class="string">&quot;/home/oxidized/.config/oxidized/.ssh/id_rsa.pem&quot;</span></span><br><span class="line"><span class="built_in">groups</span>: &#123;&#125;</span><br><span class="line">group_map: &#123;&#125;</span><br><span class="line">······</span><br></pre></td></tr></table></figure><p><strong>通用组密钥认证</strong> 输出的配置也会按照分组来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># router.db添加分组(hr_access/hr_dc)，并在config中指定分组   huawei/vrp 都可以，huawei时会去model_map对照为vrp</span></span><br><span class="line">poeSW_96.9_N021_1:huawei:10.50.96.9:hradmin:Asdf!123:hr_access</span><br><span class="line">SuZhou_nmy_Core_255.2:vrp:10.21.255.2:hradmin:Asdf!123:hr_dc</span><br><span class="line"></span><br><span class="line"><span class="comment"># config添加groups对照router.db中分组，并指定分组使用的rsa密钥</span></span><br><span class="line">······</span><br><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">  hr_dc:</span><br><span class="line">    vars:</span><br><span class="line">       ssh_keys: <span class="string">&quot;/home/oxidized/.config/oxidized/.ssh/P3key_rsa.pem&quot;</span></span><br><span class="line">  hr_access:</span><br><span class="line">    vars:</span><br><span class="line">       ssh_keys: <span class="string">&quot;/home/oxidized/.config/oxidized/.ssh/P4key_rsa.pem&quot;</span></span><br><span class="line">······</span><br><span class="line"><span class="built_in">source</span>:</span><br><span class="line">  default: csv</span><br><span class="line">  csv:</span><br><span class="line">    file: <span class="string">&quot;/home/oxidized/.config/oxidized/router.db&quot;</span></span><br><span class="line">    delimiter: !ruby/regexp /:/</span><br><span class="line">    map:</span><br><span class="line">      name: 0</span><br><span class="line">      model: 1</span><br><span class="line">      ip: 2</span><br><span class="line">      username: 3</span><br><span class="line">      password: 4</span><br><span class="line">      group: 5        <span class="comment">#增加分组</span></span><br><span class="line">    gpg: <span class="literal">false</span></span><br><span class="line">model_map:</span><br><span class="line">  juniper: junos</span><br><span class="line">  cisco: ios</span><br><span class="line">  huawei: vrp</span><br></pre></td></tr></table></figure><p><strong>单个节点认证</strong> （不推荐此种方法）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每个节点</span></span><br><span class="line">map:</span><br><span class="line">  name: 0</span><br><span class="line">  model: 1</span><br><span class="line">  ip: 2</span><br><span class="line">  username: 3</span><br><span class="line">  password: 4</span><br><span class="line">vars_map:</span><br><span class="line">  ssh_keys: 5</span><br><span class="line"></span><br><span class="line">YJYHX_255.22:vrp:10.50.255.22:hradmin:Asdf!123:/home/oxidized/.config/oxidized/.ssh/id_rsa.pem</span><br></pre></td></tr></table></figure><h2 id="备份文件自动上传"><a href="#备份文件自动上传" class="headerlink" title="备份文件自动上传"></a>备份文件自动上传</h2><h3 id="脚本上传"><a href="#脚本上传" class="headerlink" title="脚本上传"></a>脚本上传</h3><p>编写脚本，自动上传 安装git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /data/oxidized/configs</span><br><span class="line">git init </span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line">git remote add origin https://codehub.hengrui.com/qiuf9/oxidized.git</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;上传&quot;</span></span><br><span class="line">git push -u origin master </span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传会要求输入密码 开启后会自动存储</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@LYGVLK8SW09 ~]<span class="comment"># crontab -l</span></span><br><span class="line">0 * * * * <span class="built_in">cd</span> /opt;./gitpush.sh &gt; gitpush.log 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /opt/gitpush.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="comment"># FileName:    gitpush.sh </span></span><br><span class="line"><span class="comment"># Describe:    Used for git push</span></span><br><span class="line"><span class="comment"># Revision:    1.0</span></span><br><span class="line"><span class="comment"># Date:        2024/01/18</span></span><br><span class="line"><span class="comment"># Author:      Austines</span></span><br><span class="line"></span><br><span class="line">dt=`<span class="built_in">date</span> +%Y%m%d_%H%M`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Backup Begin Date:&quot;</span> $(<span class="built_in">date</span> +<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /data/oxidized/configs</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;Auto commit - <span class="variable">$dt</span>&quot;</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="oxidized自动上传"><a href="#oxidized自动上传" class="headerlink" title="oxidized自动上传"></a>oxidized自动上传</h3><p>备份文件自动上传至gitlab平台  git产生git基础配置，hooks上传使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">output:</span><br><span class="line">  default: git</span><br><span class="line">  file:</span><br><span class="line">    directory: <span class="string">&quot;/home/oxidized/.config/oxidized/configs&quot;</span></span><br><span class="line">  git:</span><br><span class="line">    single_repo: <span class="literal">true</span></span><br><span class="line">    user: qiuf9</span><br><span class="line">    email: fuqi.qiu.fq9@hengrui.com</span><br><span class="line">    repo: /home/oxidized/.config/oxidized/configs/configs.git</span><br><span class="line">hooks:</span><br><span class="line">  push_to_remote:</span><br><span class="line">    <span class="built_in">type</span>: githubrepo</span><br><span class="line">    events: [post_store]</span><br><span class="line">    remote_repo: <span class="string">&quot;https://qiuf9:glpat-bxBEWW7gWnUKxYFcB9KA@codehub.hengrui.com/qiuf9/oxidized.git&quot;</span></span><br></pre></td></tr></table></figure><h2 id="启动oxidized"><a href="#启动oxidized" class="headerlink" title="启动oxidized"></a>启动oxidized</h2><p>重启对应的docker镜像名称</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart oxidized</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20240813085746.png"></p><h1 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h1><h2 id="页面展示问题"><a href="#页面展示问题" class="headerlink" title="页面展示问题"></a>页面展示问题</h2><p>页面默认不展示某个字段，每次需要点击按钮选中，很麻烦</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入镜像</span></span><br><span class="line">docker <span class="built_in">exec</span> -it oxidized /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入目录下，修改 nodes.haml 文件 （具体路径可能有差别）</span></span><br><span class="line">vi /var/lib/gems/3.0.0/gems/oxidized-web-0.13.1/lib/oxidized/web/views/nodes.haml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在底部找到, 删除targets 即可</span></span><br><span class="line">columnDefs: [&#123; visible: <span class="literal">false</span>, targets: 1&#125;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="时间问题"><a href="#时间问题" class="headerlink" title="时间问题"></a>时间问题</h2><p>docker oxidized时区问题，时间显示不是北京时间 问题原因：ruby语言的时间直接获取的UTC时间，修改完重启镜像</p><h3 id="更改Last-Update时间"><a href="#更改Last-Update时间" class="headerlink" title="更改Last Update时间"></a>更改Last Update时间</h3><ul><li>docker exec -it oxidized /bin/bash</li><li>vi /var/lib/gems/3.0.0/gems/oxidized-0.30.1/lib/oxidized/job.rb</li><li>执行:%s/Time.now.utc/Time.now，把Time.now.utc全部改成Time.now，一共3处</li><li>退出容器</li><li>重启容器</li></ul><p><img src="https://qiufuqi.github.io/img/hexo/20240813113453.png"></p><h3 id="更改Last-Changed时间"><a href="#更改Last-Changed时间" class="headerlink" title="更改Last Changed时间"></a>更改Last Changed时间</h3><ul><li>docker exec -it oxidized /bin/bash</li><li>vi /var/lib/gems/3.0.0/gems/oxidized-0.30.1/lib/oxidized/node/stats.rb</li><li>45行左右，把Time.now.utc全部改成Time.now，一共1处</li><li>退出容器</li><li>重启容器</li></ul><p><img src="https://qiufuqi.github.io/img/hexo/20240814141736.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 网络安全 </category>
          
          <category> oxidized </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> oxidized </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为交换机配置模板</title>
      <link href="/huawei_switch_template/"/>
      <url>/huawei_switch_template/</url>
      
        <content type="html"><![CDATA[<h1 id="堆叠"><a href="#堆叠" class="headerlink" title="堆叠"></a>堆叠</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 二层交换机</span></span><br><span class="line">sys</span><br><span class="line">stack slot 0 priority 200</span><br><span class="line">interface stack-port 0/1</span><br><span class="line"> port interface 100GE0/0/1 <span class="built_in">enable</span></span><br><span class="line"> port interface 100GE0/0/2 <span class="built_in">enable</span></span><br><span class="line">q</span><br><span class="line"></span><br><span class="line">sys</span><br><span class="line">stack slot 0 renumber 1</span><br><span class="line">interface stack-port 1/2</span><br><span class="line"> port interface 100GE1/0/1 <span class="built_in">enable</span></span><br><span class="line"> port interface 100GE1/0/2 <span class="built_in">enable</span></span><br><span class="line">q</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据中心交换机 比如：CE6855-48S6Q-HI</span></span><br><span class="line">https://support.huawei.com/enterprise/zh/doc/EDOC1000150272?idPath=24030814|21782165|21782239|22318540|22460628&amp;section=j004</span><br><span class="line"></span><br><span class="line">sys</span><br><span class="line">stack</span><br><span class="line">stack member 1 priority 150</span><br><span class="line">stack member 1 domain 10</span><br><span class="line">q</span><br><span class="line">interface stack-port 1/1</span><br><span class="line">port member-group interface 100GE 1/0/1 to 1/0/2</span><br><span class="line"></span><br><span class="line">sys</span><br><span class="line">stack</span><br><span class="line">stack member 1 priority 120</span><br><span class="line">stack member 1 domain 10</span><br><span class="line">stack member 1 renumber 2 inherit-config</span><br><span class="line">q</span><br><span class="line">interface stack-port 1/1</span><br><span class="line">port member-group interface 100GE 1/0/1 to 1/0/2</span><br><span class="line"></span><br><span class="line">双主检测</span><br><span class="line">dual-active detect mode direct</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三层汇聚交换机"><a href="#三层汇聚交换机" class="headerlink" title="三层汇聚交换机"></a>三层汇聚交换机</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">clock timezone cst add 08:00:00</span><br><span class="line">sys</span><br><span class="line"></span><br><span class="line">ntp unicast-server 172.31.9.13</span><br><span class="line">ntp unicast-server 172.31.9.14</span><br><span class="line">ntp max-distance  16</span><br><span class="line"></span><br><span class="line">management-plane isolate <span class="built_in">disable</span></span><br><span class="line">undo management-plane isolate <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line">telnet server <span class="built_in">enable</span></span><br><span class="line">lldp en</span><br><span class="line"></span><br><span class="line">sysn DMZ_Prod_3.3</span><br><span class="line">aaa</span><br><span class="line">undo local-user policy security-enhance</span><br><span class="line">local-user admin password irreversible-cipher ******</span><br><span class="line">local-user admin level 3</span><br><span class="line">local-user admin service-type ssh terminal</span><br><span class="line">local-user hradmin password irr  ******</span><br><span class="line">local-user hradmin level 3</span><br><span class="line">local-user hradmin service-type ssh terminal</span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">acl number 2000</span><br><span class="line"> description switchacl</span><br><span class="line"> rule 1 permit <span class="built_in">source</span> 10.50.4.221 0</span><br><span class="line"> rule 2 permit <span class="built_in">source</span> 10.50.4.222 0.0.0.1</span><br><span class="line"> rule 3 permit <span class="built_in">source</span> 10.50.4.224 0</span><br><span class="line"> rule 12 permit <span class="built_in">source</span> 10.50.4.74 0</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line">snmp-agent community <span class="built_in">read</span> cipher ******</span><br><span class="line">snmp-agent protocol source-status all-interface</span><br><span class="line">snmp-agent sys-info version all</span><br><span class="line">snmp-agent target-host inform address udp-domain 10.50.2.23 params securityname cipher ****** v2c</span><br><span class="line">snmp-agent <span class="built_in">trap</span> <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stp instance 0 root primary</span><br><span class="line"></span><br><span class="line">vlan batch 1090 1096 to 1098</span><br><span class="line">undo interface vlanif 1</span><br><span class="line"></span><br><span class="line">dhcp <span class="built_in">enable</span></span><br><span class="line">dhcp snooping <span class="built_in">enable</span></span><br><span class="line">dhcp server detect</span><br><span class="line">dhcp snooping <span class="built_in">enable</span> vlan 110</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dhcp snooping user-bind arp-detect <span class="built_in">enable</span></span><br><span class="line">arp dhcp-snooping-detect <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line">dhcp snooping user-offline remove mac-address</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface vlanif 1097</span><br><span class="line">description Management</span><br><span class="line">ip address 172.16.3.3 24</span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line">interface Vlanif98</span><br><span class="line">description ZJ1C_MES_Client</span><br><span class="line"> ip address 10.15.98.1 255.255.255.0</span><br><span class="line"> dhcp select relay</span><br><span class="line"> dhcp relay binding server ip 172.31.9.19</span><br><span class="line">dhcp relay binding server ip 172.31.9.22</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line">ip route-static 0.0.0.0 0.0.0.0 172.16.3.1</span><br><span class="line"></span><br><span class="line">interface Eth-Trunk1</span><br><span class="line"> description To_DMZ_3.2</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 2 to 4094</span><br><span class="line"> mode lacp-static</span><br><span class="line">q</span><br><span class="line">int eth-t 2</span><br><span class="line">  undo portswitch</span><br><span class="line">  des To_ZJ1C_Core_16.1</span><br><span class="line">  ip add 10.50.255.51 31</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface range 10G1/0/1 to 10G1/0/45</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 2 to 4094</span><br><span class="line">q</span><br><span class="line">interface range 10G2/0/1 to 10G2/0/45</span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk allow-pass vlan 2 to 4094</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line">int 10g1/0/48</span><br><span class="line">eth-t 1</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line">stelnet server <span class="built_in">enable</span></span><br><span class="line">stelnet ipv4 server <span class="built_in">enable</span></span><br><span class="line">stelnet ipv6 server <span class="built_in">enable</span></span><br><span class="line">ssh server-source all-interface</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">rsa peer-public-key P2key encoding-type openssh</span><br><span class="line"> public-key-code begin</span><br><span class="line">  *********</span><br><span class="line"> public-key-code end</span><br><span class="line">peer-public-key end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ssh user admin</span><br><span class="line">ssh user admin authentication-type password</span><br><span class="line">ssh user admin service-type all</span><br><span class="line">ssh user hradmin</span><br><span class="line">ssh user hradmin authentication-type all</span><br><span class="line">ssh user hradmin assign rsa-key P2key</span><br><span class="line">ssh user hradmin service-type all</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user-interface vty 0 4</span><br><span class="line">authentication-mode  aaa</span><br><span class="line">user privilege level 3</span><br><span class="line">protocol  inbound  all</span><br><span class="line">q</span><br><span class="line">user-interface console 0</span><br><span class="line">authentication-mode  aaa</span><br><span class="line">q</span><br><span class="line">q</span><br><span class="line">sa</span><br><span class="line">y</span><br><span class="line">y</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二层接入交换机"><a href="#二层接入交换机" class="headerlink" title="二层接入交换机"></a>二层接入交换机</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">clock timezone cst add 08:00:00</span><br><span class="line">sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间</span></span><br><span class="line">ntp-service unicast-server 172.31.9.13</span><br><span class="line">ntp-service unicast-server 172.31.9.14</span><br><span class="line">ntp-service max-distance  16</span><br><span class="line"></span><br><span class="line">telnet server <span class="built_in">enable</span></span><br><span class="line">lldp en</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> save-configuration</span><br><span class="line">transceiver phony-alarm-disable</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sysn *******</span><br><span class="line">aaa</span><br><span class="line">undo local-aaa-user password policy administrator</span><br><span class="line">local-user admin password irr  ******</span><br><span class="line">local-user admin privilege level 15</span><br><span class="line">local-user admin service-type ssh terminal</span><br><span class="line">local-user hradmin password irr  ******</span><br><span class="line">local-user hradmin privilege level 15</span><br><span class="line">local-user hradmin service-type ssh terminal telnet</span><br><span class="line">undo user-password complexity-check</span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">acl number 2000</span><br><span class="line"> description switchacl</span><br><span class="line"> rule 1 permit <span class="built_in">source</span> 10.50.4.221 0</span><br><span class="line"> rule 2 permit <span class="built_in">source</span> 10.50.4.222 0.0.0.1</span><br><span class="line"> rule 3 permit <span class="built_in">source</span> 10.50.4.224 0</span><br><span class="line"> rule 12 permit <span class="built_in">source</span> 10.50.4.74 0</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">snmp-agent community <span class="built_in">read</span> cipher ******</span><br><span class="line">snmp-agent protocol source-status all-interface</span><br><span class="line">snmp-agent sys-info version all</span><br><span class="line">snmp-agent target-host inform address udp-domain 10.50.2.23 params securityname cipher ****** v2c</span><br><span class="line">snmp-agent <span class="built_in">trap</span> <span class="built_in">enable</span></span><br><span class="line">Y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vlan batch 2 to 4096</span><br><span class="line">undo interface vlanif 1</span><br><span class="line"></span><br><span class="line">interface vlanif 254</span><br><span class="line">ip address 192.168.254.39 23</span><br><span class="line">quit</span><br><span class="line">ip route-static 0.0.0.0 0.0.0.0 192.168.255.254</span><br><span class="line"></span><br><span class="line">dhcp <span class="built_in">enable</span></span><br><span class="line">dhcp snooping <span class="built_in">enable</span></span><br><span class="line">dhcp server detect</span><br><span class="line">dhcp snooping <span class="built_in">enable</span> vlan 110</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dhcp snooping user-bind arp-detect <span class="built_in">enable</span></span><br><span class="line">arp dhcp-snooping-detect <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line">dhcp snooping user-offline remove mac-address</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface Vlanif50</span><br><span class="line"> ip address 10.25.50.1 255.255.254.0</span><br><span class="line"> dhcp select relay</span><br><span class="line"> dhcp relay server-ip 172.31.9.19</span><br><span class="line"> dhcp relay server-ip 172.31.9.22</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface range G0/0/1 to G0/0/24</span><br><span class="line">  port link-type trunk</span><br><span class="line"> port trunk pvid vlan 1012</span><br><span class="line"> port trunk allow-pass vlan 2 to 4094</span><br><span class="line"> stp bpdu-filter <span class="built_in">enable</span></span><br><span class="line"> stp edged-port <span class="built_in">enable</span></span><br><span class="line">q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface range G0/0/1 to G0/0/48</span><br><span class="line">port link-t access</span><br><span class="line">port defa vlan 254</span><br><span class="line">stp edged-port <span class="built_in">enable</span></span><br><span class="line">stp bpdu-filter <span class="built_in">enable</span></span><br><span class="line">q</span><br><span class="line"></span><br><span class="line">interface range xg0/0/1 to xg0/0/4</span><br><span class="line">port link-t <span class="built_in">tr</span></span><br><span class="line">port <span class="built_in">tr</span> al vlan all</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stelnet server <span class="built_in">enable</span></span><br><span class="line">stelnet ipv4 server <span class="built_in">enable</span></span><br><span class="line">stelnet ipv6 server <span class="built_in">enable</span></span><br><span class="line">ssh server-source all-interface</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line">rsa peer-public-key P2key encoding-type openssh</span><br><span class="line"> public-key-code begin</span><br><span class="line">  *********</span><br><span class="line"> public-key-code end</span><br><span class="line">peer-public-key end</span><br><span class="line"></span><br><span class="line">ssh user admin</span><br><span class="line">ssh user admin authentication-type password</span><br><span class="line">ssh user admin service-type all</span><br><span class="line">ssh user hradmin</span><br><span class="line">ssh user hradmin authentication-type all</span><br><span class="line">ssh user hradmin assign rsa-key P2key</span><br><span class="line">ssh user hradmin service-type all</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user-interface vty 0 4</span><br><span class="line">acl 2000 inbound</span><br><span class="line">authentication-mode  aaa</span><br><span class="line">user privilege level 15</span><br><span class="line">protocol  inbound  all</span><br><span class="line">q</span><br><span class="line">user-interface console 0</span><br><span class="line">authentication-mode  aaa</span><br><span class="line">q</span><br><span class="line">q</span><br><span class="line">sa</span><br><span class="line">y</span><br><span class="line">y</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="交换机互联"><a href="#交换机互联" class="headerlink" title="交换机互联"></a>交换机互联</h1><p>推荐使用第一种</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一种互联方式</span></span><br><span class="line">interface Vlanif3001</span><br><span class="line"> description G3/0-Hulian</span><br><span class="line"> ip address 192.168.4.1 255.255.255.0</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface Eth-Trunk12</span><br><span class="line"> description link_to_S12708</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 3001</span><br><span class="line"> mode lacp</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface G0/0/1</span><br><span class="line"> eth-trunk 12</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二种互联方式</span></span><br><span class="line">interface Eth-Trunk11</span><br><span class="line"> undo portswitch</span><br><span class="line"> description link_zj1c</span><br><span class="line"> ip address 192.168.4.2 255.255.255.0</span><br><span class="line"> mode lacp</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"> port link-type trunk</span><br><span class="line"> port trunk pvid vlan 1012</span><br><span class="line"> port trunk allow-pass vlan 2 to 4094</span><br><span class="line"> stp bpdu-filter <span class="built_in">enable</span></span><br><span class="line"> stp edged-port <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface GigabitEthernet1/0/10</span><br><span class="line"> description ap-377</span><br><span class="line"> switchport trunk native vlan 1012</span><br><span class="line"> switchport mode trunk</span><br><span class="line"> spanning-tree portfast</span><br></pre></td></tr></table></figure><h1 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)<span class="comment">#ip dhcp snooping  //打开DHCP Snooping功能</span></span><br><span class="line">Switch(config)<span class="comment">#ip dhcp snooping vlan 10   //设置DHCP Snooping功能将作用于哪些VLAN</span></span><br><span class="line"></span><br><span class="line">Switch(config-if)<span class="comment">#interface range fastEthernet 0/1-24</span></span><br><span class="line">Switch(config-if)<span class="comment">#spanning-tree portfast  // 设置边缘端口</span></span><br><span class="line">Switch(config-if)<span class="comment">#spanning-tree bpdufilter enable //启用BPDU过滤功能，在此端口不接受/发送BPDU报文）</span></span><br><span class="line"></span><br><span class="line">Switch(config-if)<span class="comment">#ip dhcp snooping trust //上行口信任dhcp</span></span><br><span class="line"></span><br><span class="line">interface GigabitEthernet1/0/49</span><br><span class="line"> description to_bangonghuiju</span><br><span class="line"> switchport mode trunk</span><br><span class="line"> ip dhcp snooping trust</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Switch(config)<span class="comment">#hostname LYG_YJYOFF_98.131_yf4f</span></span><br><span class="line">Switch(config)<span class="comment">#enable secret Offsw@98</span></span><br><span class="line">Switch(config)<span class="comment">#service password-encryption    # 密码开启加密</span></span><br><span class="line">Switch(config)<span class="comment">#line vty 0 4</span></span><br><span class="line">Switch(config-line)<span class="comment">#password Offsw@98</span></span><br><span class="line"></span><br><span class="line">line con 0</span><br><span class="line"> password hrswpass</span><br><span class="line"> login</span><br><span class="line">line vty 0 4</span><br><span class="line"> password hrswpass</span><br><span class="line"> login <span class="built_in">local</span></span><br><span class="line">line vty 5 15</span><br><span class="line"> password hrswpass</span><br><span class="line"> login</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Switch(config)<span class="comment">#vtp mode transparent     // VTP 透明模式</span></span><br><span class="line">Switch(config)<span class="comment">#vlan 1098</span></span><br><span class="line">Switch(config)<span class="comment">#interface vlan 1098</span></span><br><span class="line">Switch(config-if)<span class="comment">#ip address 10.50.98.131 255.255.255.0</span></span><br><span class="line">Switch(config)<span class="comment">#ip default-gateway 10.50.98.1</span></span><br><span class="line"></span><br><span class="line">地址池</span><br><span class="line">ip pool vlan1012</span><br><span class="line"> gateway-list 10.50.12.1</span><br><span class="line"> network 10.50.12.0 mask 255.255.255.0</span><br><span class="line"></span><br><span class="line"> option 43 ip-address 10.50.1.254 10.50.1.253</span><br><span class="line"> option 43 sub-option 3 ascii 10.50.1.254 10.50.1.253</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">以下3个配置等价，任选1个即可。</span><br><span class="line">dhcp server option 43 sub-option 1 hex c0a86401</span><br><span class="line">dhcp server option 43 sub-option 2 ip-address 192.168.100.1</span><br><span class="line">dhcp server option 43 sub-option 3 ascii 192.168.100.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">无线配置</span><br><span class="line">system-view</span><br><span class="line">wlan</span><br><span class="line">[ap auth-mode mac-auth]</span><br><span class="line"></span><br><span class="line">ap-id 819 type-id 144 ap-mac 9844-CE7F-2570 ap-sn 2102353VURW0M6002888</span><br><span class="line">ap-name LYG-AP0819</span><br><span class="line">Y</span><br><span class="line">ap-group AP-ZhiJi-1</span><br><span class="line">Y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ap-id 603 type-id 174 ap-mac f09b-b870-3c30 ap-sn 2102353VUR10M7002093</span><br><span class="line">ap-name LYG-AP0603</span><br><span class="line">y</span><br><span class="line">ap-group  YW-ALL</span><br><span class="line">y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dis stp brief</span><br><span class="line">dis stp topology-change 查看stp变化信息-来源</span><br><span class="line">dis stp tc-bpdu statistics 查看stp发送bpdu信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1、 观察现象：网络访问变得很慢，交换机业务口act指示灯狂闪烁，甚至有设备自动重启</span><br><span class="line">2、 设备上确认：</span><br><span class="line">      display interface brif | inc up，查看接口收发流量是否很大；</span><br><span class="line">      Display interface 查看接口是否与大量广播报文拥塞；</span><br><span class="line">      display mac-address flapping record查看设备上地址飘逸记录表</span><br><span class="line">3、 应急措施：针对步骤2将异常接口shutdown，看业务是否恢复</span><br><span class="line">4、 后期排查：业务低峰器问题复现，</span><br><span class="line">    登陆设备用dis stp br查看生成树状态（端口角色和转发状态）；</span><br><span class="line">    用dis stp region等看配置；</span><br><span class="line">    用dis lldp nei brif梳理交换网络物理连接情况；</span><br><span class="line">    诊断视图下dis stp <span class="built_in">history</span>看生成树状态老化信息。</span><br><span class="line"></span><br><span class="line"> Topology change initiator(notified)    :XGigabitEthernet0/0/9</span><br><span class="line">Topology change initiator(detected)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">某个mac地址上下记录</span><br><span class="line">display station offline-record  sta-mac 30f6-ef10-0f77</span><br><span class="line">display station online-fail-record  sta-mac xx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Hr@shnsnmp</span><br><span class="line"></span><br><span class="line">snmp-server community Hr@lygsnmp RO</span><br><span class="line">snmp-server host 10.50.2.23 version 2c Hr@lygsnmp udp-port 161</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hostname ShangDong_router_10.52.0.2</span><br><span class="line"></span><br><span class="line">snmp-server start</span><br><span class="line">snmp-server community Hr@lygsnmp  ro</span><br><span class="line">snmp-server host 10.50.2.23 traps community Hr@lygsnmp version 2 port 161</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface Vlanif3002</span><br><span class="line"> description description link_to_ZJ1C_ProdCore_255.51</span><br><span class="line"> ip add 10.50.255.50 31</span><br><span class="line">q</span><br><span class="line">interface Eth-Trunk11</span><br><span class="line"> description link_to_ZJ1C_ProdCore_255.51</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 3002</span><br><span class="line"> mode lacp</span><br><span class="line">q</span><br><span class="line"></span><br><span class="line">ip route-static 10.15.96.0 255.255.248.0 10.50.255.51</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> Switch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> Switch </tag>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARKIME部署安装</title>
      <link href="/arkime_install/"/>
      <url>/arkime_install/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/lhyzws/article/details/124433680">文章参考1</a> <a href="https://blog.csdn.net/haoyunbin/article/details/131050113">文章参考2</a></p><h1 id="什么是Arkime"><a href="#什么是Arkime" class="headerlink" title="什么是Arkime"></a>什么是Arkime</h1><p>Arkime（以前叫Moloch）是一个大规模的开源索引数据包捕获和搜索系统。<br>Arkime增强了您当前的安全基础设施，以标准PCAP格式存储和索引网络流量，提供快速的索引访问。为PCAP浏览、搜索和导出提供了直观简单的web界面。Arkime公开了API，允许直接下载和使用PCAP数据和JSON格式的会话数据。Arkime以标准PCAP格式存储和导出所有数据包，允许您在分析工作流程中使用最喜欢的PCAP摄取工具，如wireshark。<br>Arkime可以跨多个系统部署，可以扩展到处理每秒数十GB的流量。PCAP保留基于可用的传感器磁盘空间。元数据保留基于Elasticsearch集群规模。两者都可以随时增加，并在您的完全控制下。</p><h1 id="下载和安装"><a href="#下载和安装" class="headerlink" title="下载和安装"></a>下载和安装</h1><p><a href="https://github.com/arkime/arkime/releases/">下载arkime安装包</a><br>根据系统版本下载对应版本，对于Centos 8或RHEL 8使用el8下载，而不是RHEL 9。本次服务器为centos 8，所以使用arkime-main.el8.x86_64.rpm包<br><img src="https://qiufuqi.github.io/img/hexo/20240806153208.png"></p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>arkime安装主要就3个依赖，分别是perl-JSON、perl-libwww-perl和perl-LWP-Protocol-https。使用yumdownloader解析并下载依赖包后安装。<br><img src="https://qiufuqi.github.io/img/hexo/20240806194219.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yumdownloader --resolve perl-JSON perl-LWP-Protocol-https perl-libwww-perl</span><br><span class="line">yum -y install perl-JSON perl-LWP-Protocol-https perl-libwww-perl</span><br></pre></td></tr></table></figure><h2 id="安装arkime"><a href="#安装arkime" class="headerlink" title="安装arkime"></a>安装arkime</h2><p>执行以下命令安装arkime，<strong>rpm -ivh arkime-main.el8.x86_64.rpm</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># rpm -ivh arkime-main.el8.x86_64.rpm </span></span><br><span class="line">Verifying...                          <span class="comment">################################# [100%]</span></span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:arkime-5.4.0_GIT-10201223847     <span class="comment">################################# [100%]</span></span><br><span class="line">Arkime systemd files copied</span><br><span class="line">Installing logrotate /etc/logrotate.d/arkime to delete files after 14 days</span><br><span class="line">READ /opt/arkime/README.txt and RUN /opt/arkime/bin/Configure</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20240806194557.png"></p><h2 id="安装elastic"><a href="#安装elastic" class="headerlink" title="安装elastic"></a>安装elastic</h2><p>如何安装elasticsearch，如何配置arkime，在 <strong>/opt/arkime/bin/Configure</strong> 这个脚本中列得很清楚。<br>打开该脚本，找到如下安装ES的这一行（大约203行），手动下载该rpm并安装，或 根据ES_VERSION手动下载该<a href="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-7.10.2-x86_64.rpm">elasticsearch</a>,并执行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># vi /opt/arkime/bin/Configure</span></span><br><span class="line">·········</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$ARKIME_INSTALLELASTICSEARCH</span>&quot;</span> == <span class="string">&quot;yes&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Arkime - Downloading and installing demo OSS version of Elasticsearch&quot;</span></span><br><span class="line">    ES_VERSION=7.10.2</span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="string">&quot;/etc/redhat-release&quot;</span> ] || [ -f <span class="string">&quot;/etc/system-release&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="comment"># 新增下面一行 wget</span></span><br><span class="line">        wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-<span class="variable">$&#123;ES_VERSION&#125;</span>-<span class="variable">$&#123;ARCHRPM&#125;</span>.rpm</span><br><span class="line">        yum install https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-<span class="variable">$&#123;ES_VERSION&#125;</span>-<span class="variable">$&#123;ARCHRPM&#125;</span>.rpm</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-<span class="variable">$&#123;ES_VERSION&#125;</span>-<span class="variable">$&#123;ARCHDEB&#125;</span>.deb</span><br><span class="line">        dpkg -i elasticsearch-oss-<span class="variable">$&#123;ES_VERSION&#125;</span>-<span class="variable">$ARCHDEB</span>.deb</span><br><span class="line">        /bin/rm -f elasticsearch-oss-<span class="variable">$&#123;ES_VERSION&#125;</span>-<span class="variable">$ARCHDEB</span>.deb</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">·········</span><br></pre></td></tr></table></figure><p>执行安装命令 <strong>rpm -ivh elasticsearch-oss-7.10.2-x86_64.rpm</strong> ,并设置开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># rpm -ivh elasticsearch-oss-7.10.2-x86_64.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装成功后 设置开机自启动</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># systemctl enable elasticsearch.service</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># systemctl start elasticsearch.service</span></span><br></pre></td></tr></table></figure><h2 id="配置arkime"><a href="#配置arkime" class="headerlink" title="配置arkime"></a>配置arkime</h2><p>首先确认好该服务器网卡名称 <strong>ip addr</strong> 比如该服务器为：ens192<br>安装好后执行 <strong>/opt/arkime/bin/Configure</strong> 配置工具进行后续配置，es已经提前安装，所以选择no （如果没有选择yes），geo数据库建议选no。<br>依次输入 ens192 no arkime no </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># /opt/arkime/bin/Configure </span></span><br><span class="line">Found interfaces: ens192;lo</span><br><span class="line">Semicolon <span class="string">&#x27;;&#x27;</span> seperated list of interfaces to monitor [eth1] ens192</span><br><span class="line">Install Elasticsearch server locally <span class="keyword">for</span> demo, must have at least 3G of memory, NOT recommended <span class="keyword">for</span> production use (<span class="built_in">yes</span> or no) [no] no</span><br><span class="line">OpenSearch/Elasticsearch server URL [https://localhost:9200] </span><br><span class="line">OpenSearch/Elasticsearch user [empty is no user] </span><br><span class="line">Password to encrypt S2S and other things, don<span class="string">&#x27;t use spaces [must create one] </span></span><br><span class="line"><span class="string">Password to encrypt S2S and other things, don&#x27;</span>t use spaces [must create one] arkime</span><br><span class="line">Arkime - Creating configuration files</span><br><span class="line">Not overwriting /opt/arkime/etc/config.ini, delete and run again <span class="keyword">if</span> update required (usually not), or edit by hand</span><br><span class="line">Download GEO files? You<span class="string">&#x27;ll need a MaxMind account https://arkime.com/faq#maxmind (yes or no) [yes] no</span></span><br><span class="line"><span class="string">Arkime - NOT downloading GEO files</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Arkime - Configured - Now continue with step 4 in /opt/arkime/README.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> 4) The Configure script can install OpenSearch/Elasticsearch for you or you can install yourself</span></span><br><span class="line"><span class="string"> 5) Initialize/Upgrade OpenSearch/Elasticsearch Arkime configuration</span></span><br><span class="line"><span class="string">  a) If this is the first install, or want to delete all data</span></span><br><span class="line"><span class="string">      /opt/arkime/db/db.pl http://ESHOST:9200 init</span></span><br><span class="line"><span class="string">  b) If this is an update to an Arkime package</span></span><br><span class="line"><span class="string">      /opt/arkime/db/db.pl http://ESHOST:9200 upgrade</span></span><br><span class="line"><span class="string"> 6) Add an admin user if a new install or after an init</span></span><br><span class="line"><span class="string">      /opt/arkime/bin/arkime_add_user.sh admin &quot;Admin User&quot; THEPASSWORD --admin</span></span><br><span class="line"><span class="string"> 7) Start everything</span></span><br><span class="line"><span class="string">      systemctl start arkimecapture.service</span></span><br><span class="line"><span class="string">      systemctl start arkimeviewer.service</span></span><br><span class="line"><span class="string"> 8) Look at log files for errors</span></span><br><span class="line"><span class="string">      /opt/arkime/logs/viewer.log</span></span><br><span class="line"><span class="string">      /opt/arkime/logs/capture.log</span></span><br><span class="line"><span class="string"> 9) Visit http://arkimeHOST:8005 with your favorite browser.</span></span><br><span class="line"><span class="string">      user: admin</span></span><br><span class="line"><span class="string">      password: THEPASSWORD from step #6</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you want IP -&gt; Geo/ASN to work, you need to setup a maxmind account and the geoipupdate program.</span></span><br><span class="line"><span class="string">See https://arkime.com/faq#maxmind</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Any configuration changes can be made to /opt/arkime/etc/config.ini</span></span><br><span class="line"><span class="string">See https://arkime.com/faq#arkime-is-not-working for issues</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Additional information can be found at:</span></span><br><span class="line"><span class="string">  * https://arkime.com/install</span></span><br><span class="line"><span class="string">  * https://arkime.com/faq</span></span><br><span class="line"><span class="string">  * https://arkime.com/settings</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20240806201737.png"><br>参考屏幕上返回的指示完成剩下的4、5、6、7、8、9步</p><p>在启动elasticsearch服务后，需要看看ES是否正常——有时虽然服务是开的，端口是开的，但是执行curl <strong><a href="http://localhost:9200/">http://localhost:9200</a></strong> 时就是看不到如下的结果，那么再继续往下就是没有意义的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化ES</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># /opt/arkime/db/db.pl http://localhost:9200 init</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># curl http://localhost:9200</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span> : <span class="string">&quot;LYGVLTOPO03&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;elasticsearch&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;hCgB6VGiRyO1Zj43h4eslw&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="string">&quot;number&quot;</span> : <span class="string">&quot;7.10.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_flavor&quot;</span> : <span class="string">&quot;oss&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_type&quot;</span> : <span class="string">&quot;rpm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_hash&quot;</span> : <span class="string">&quot;747e1cc71def077253878a59143c1f785afa92b9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_date&quot;</span> : <span class="string">&quot;2021-01-13T00:42:12.435326Z&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_snapshot&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;lucene_version&quot;</span> : <span class="string">&quot;8.7.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;minimum_wire_compatibility_version&quot;</span> : <span class="string">&quot;6.8.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;minimum_index_compatibility_version&quot;</span> : <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;tagline&quot;</span> : <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 增加用户名和密码，用来登录Arkime界面</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># /opt/arkime/bin/arkime_add_user.sh admin &quot;Admin User&quot; arkime --admin</span></span><br><span class="line"><span class="comment"># 这一步可能报错，根据报错信息排查</span></span><br><span class="line">Common issues:</span><br><span class="line">  * Is OpenSearch/Elasticsearch running and NOT RED?</span><br><span class="line">  * Have you run <span class="string">&#x27;db/db.pl &lt;host:port&gt; init&#x27;</span>?</span><br><span class="line">  * Is the <span class="string">&#x27;elasticsearch&#x27;</span> setting (https://localhost:9200) correct <span class="keyword">in</span> config file (/opt/arkime/etc/config.ini) with a username and password <span class="keyword">if</span> needed? (https://arkime.com/settings<span class="comment">#elasticsearch)</span></span><br><span class="line">  * Do you need the --insecure option? (See https://arkime.com/faq<span class="comment">#insecure)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁定第三步 修改</span></span><br><span class="line">elasticsearch=https://localhost:9200</span><br><span class="line">elasticsearchBasicAuth=admin:arkime</span><br><span class="line"></span><br><span class="line">elasticsearch=http://localhost:9200</span><br><span class="line"><span class="comment">#elasticsearchBasicAuth=</span></span><br></pre></td></tr></table></figure><p>启动arkime</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># systemctl start arkimecapture.service</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># systemctl start arkimeviewer.service</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># systemctl enable arkimecapture.service</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># systemctl enable arkimeviewer.service</span></span><br></pre></td></tr></table></figure><p>浏览器访问<a href="http://10.50.2.251:8005/">http://10.50.2.251:8005/</a> 输入账号admin，密码，此时数据是空的<br><img src="https://qiufuqi.github.io/img/hexo/20240806203649.png"></p><h2 id="采集数据"><a href="#采集数据" class="headerlink" title="采集数据"></a>采集数据</h2><p>在Configure脚本，能跟踪到此处是执行 <strong>/opt/arkime/bin/arkime_update_geo.sh</strong>，主要目的就是下载2个文件。<br>执行该脚本或者从arkime_update_geo.sh直接拿出两个地址进行wget 至/opt/arkime/etc目录下，第二个地址下载下来的文件应该改名为oui.txt<br><a href="https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.csv">https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.csv</a><br><a href="https://www.wireshark.org/download/automated/data/manuf">https://www.wireshark.org/download/automated/data/manuf</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@LYGVLTOPO03 bin]<span class="comment"># sh arkime_update_geo.sh </span></span><br><span class="line">2024-08-06 20:40:02 URL:https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.csv [23323/23323] -&gt; <span class="string">&quot;/tmp/tmp.wzDlgTvE31&quot;</span> [1]</span><br><span class="line">2024-08-06 20:40:07 URL:https://www.wireshark.org/download/automated/data/manuf [2802619/2802619] -&gt; <span class="string">&quot;/tmp/tmp.orTlPb8fL6&quot;</span> [1]</span><br><span class="line"></span><br><span class="line">root@LYGVLTOPO03 bin]<span class="comment"># cd ../etc</span></span><br><span class="line">[root@LYGVLTOPO03 etc]<span class="comment"># ls</span></span><br><span class="line">arkimecapture.systemd.service     arkimeviewer.systemd.service  config.ini.sample   ipv4-address-space.csv  parliament.ini.sample</span><br><span class="line">arkimecont3xt.systemd.service     arkimewise.systemd.service    cont3xt.ini.sample  oui.txt                 wise.ini.sample</span><br><span class="line">arkimeparliament.systemd.service  config.ini                    env.example         parliament.env.example</span><br><span class="line">[root@LYGVLTOPO03 etc]<span class="comment"># </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载完成后重启capture服务</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># systemctl restart arkimecapture.service</span></span><br></pre></td></tr></table></figure><p>过一会就会有数据了<br><img src="https://qiufuqi.github.io/img/hexo/20240806204520.png"></p><h1 id="高性能配置"><a href="#高性能配置" class="headerlink" title="高性能配置"></a>高性能配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改arkime配置文件/opt/arkime/etc/config.ini 启用如下参数</span></span><br><span class="line">[root@LYGVLTOPO03 ~]<span class="comment"># vi /opt/arkime/etc/config.ini</span></span><br><span class="line">magicMode=basic</span><br><span class="line">pcapReadMethod=tpacketv3</span><br><span class="line">tpacketv3NumThreads=2</span><br><span class="line">pcapWriteMethod=simple</span><br><span class="line">pcapWriteSize=2560000</span><br><span class="line">packetThreads=5</span><br><span class="line">maxPacketsInQueue=200000</span><br><span class="line"></span><br><span class="line">注：修改配置文件后，要重启arkime服务</span><br><span class="line">systemctl restart arkimecapture</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 网络安全 </category>
          
          <category> arkime </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> arkime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-15-SNMP协议</title>
      <link href="/huawei_snmp/"/>
      <url>/huawei_snmp/</url>
      
        <content type="html"><![CDATA[<p><a href="https://support.huawei.com/enterprise/zh/doc/EDOC1100279010/60bd56a0#ZH-CN_CONCEPT_0000001124849544">文章参考华为官网</a></p><h1 id="SNMP简介"><a href="#SNMP简介" class="headerlink" title="SNMP简介"></a>SNMP简介</h1><p>简单网络管理协议SNMP（Simple Network Management Protocol）是广泛用于UDP网络的网络管理标准协议。SNMP提供了一种通过运行网络管理软件的中心计算机（即网络管理工作站NMS）来管理网元的方法。共有三个版本SNMPv1、SNMPv2c和SNMPv3，用户可以根据情况选择同时配置一个或多个版本。</p><p>网管通过在被管理设备中运行的Agent客户端上执行get和set操作来管理设备上的节点，设备上的节点由MIB（Management Information Base）来唯一标识。</p><p>在大型网络中，设备发生故障时，由于设备无法主动上报故障，导致网络管理员无法及时感知、及时定位和排除故障，从而导致网络的维护效率降低，维护工作量大大增加。为了解决这个问题，设备制造商已经在一些设备中提供了网络管理的功能，这样网管就可以远程查询设备的状态，同样设备能够在特定类型的事件发生时向网络管理工作站发出警告。</p><p>SNMP就是规定网管站和设备之间如何传递管理信息的应用层协议。SNMP定义了网管管理设备的几种操作，以及设备故障时能向网管主动发送告警。</p><h1 id="SNMP三类角色"><a href="#SNMP三类角色" class="headerlink" title="SNMP三类角色"></a>SNMP三类角色</h1><p>在网管通过SNMP协议管理设备过程中，定义了三类角色：</p><ul><li>网管站：向被管理设备发送各种查询报文，以及接收被管理设备发送的告警。</li><li>Agent：被管理设备上的网管进程。Agent有如下功能：<ul><li>接收、解析来自网管站的查询报文。</li><li>根据报文类型对管理变量进行Read或Write操作，并生成响应报文，返回给网管站。</li><li>根据各协议模块对告警触发条件的定义，在达到触发条件后，如进入、退出系统视图或设备重新启动等，相应的模块通过Agent主动向网管站发送告警，报告所发生的事件。</li></ul></li><li>被管理设备：接受网管的管理，产生和主动上报告警。<br><img src="https://qiufuqi.github.io/img/hexo/20240220205311.png"></li></ul><h1 id="SNMP操作"><a href="#SNMP操作" class="headerlink" title="SNMP操作"></a>SNMP操作</h1><table><thead><tr><th align="left">操作</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">GetRequest</td><td align="left">从某变量中取值，获取设备某功能节点状态，是网管向设备发出的请求</td></tr><tr><td align="left">GetNextRequest</td><td align="left">在MIB表项中取下一项值，获取设备某功能的另一节点状态，是网管向设备发出的请求</td></tr><tr><td align="left">GetResponse</td><td align="left">对GetRequest、GetNextRequest、SetRequest的响应操作，是被管理设备向网管的回应，是由代理进程发出的</td></tr><tr><td align="left">GetBulk</td><td align="left">该操作相当于连续执行多次GetNext操作，是网管向设备发出的请求</td></tr><tr><td align="left">SetRequest</td><td align="left">设置具体变量的值，对设备功能节点状态进行调整，是网管向设备发出的指令</td></tr><tr><td align="left">Trap</td><td align="left"><strong>报告事件信息，是设备主动向网管报告事件</strong></td></tr><tr><td align="left">Inform</td><td align="left"><strong>报告事件信息，需要网管进行接收确认，是设备主动向网管报告事件</strong></td></tr></tbody></table><h2 id="Trap操作"><a href="#Trap操作" class="headerlink" title="Trap操作"></a>Trap操作</h2><p><strong>Trap是被管理设备主动向NMS发送的不经请求的信息</strong>，用于报告一些紧急的重要事件（如被管理设备重新启动等）<br>设备端的模块由于达到模块定义的告警触发条件，通过Agent向网管工作站发送Trap消息，告知设备侧的出现的情况，这样便于网络管理人员及时对网络中出现的情况进行处理。<br><strong>网管使用162端口接收Agent发送的Trap报文，报文承载协议为UDP，不需要网管进行接收确认</strong>。</p><h1 id="配置SNMPv3的基本功能"><a href="#配置SNMPv3的基本功能" class="headerlink" title="配置SNMPv3的基本功能"></a>配置SNMPv3的基本功能</h1><p>操作步骤</p><ol><li><p>进入系统视图。<br>system-view</p></li><li><p>（可选）配置SNMP密码的最小长度。<br>snmp-agent password min-length min-length<br>配置了该命令后，用户配置SNMP密码时，密码长度必须大于等于配置的SNMP密码的最小长度。</p></li><li><p>（可选）启动SNMP Agent服务。<br>snmp-agent<br>缺省情况下，没有启动SNMP Agent服务。执行任意snmp-agent的配置命令（无论是否含参数）都可以触发SNMP Agent服务启动，故该步骤可选。</p></li><li><p>（可选）修改SNMP Agent侦听的端口号。<br>snmp-agent udp-port port-number<br>缺省情况下，SNMP Agent侦听的端口号为161。如果不执行此步骤，会使用缺省端口号进行侦听。</p></li><li><p>配置SNMP的协议版本。<br>snmp-agent sys-info version v3<br>缺省情况下，使能SNMPv3。</p></li><li><p>配置SNMP用户组。<br>snmp-agent group v3 group-name { authentication | privacy | noauthentication } [ read-view read-view | write-view write-view | notify-view notify-view ] * [ acl { acl-number | acl-name } ]<br>当网管和设备处在不安全的网络环境中时，比如容易遭受攻击，建议用户配置参数authentication或privacy，使能数据的认证和加密功能。<br>用户可以选择的认证加密模式如下：</p></li></ol><ul><li>不配置authentication和privacy参数或配置noauthentication参数：不认证不加密。适用于网络环境安全，且管理员比较固定的情况下。</li><li>配置authentication参数：只认证不加密。适用于网络环境安全，但管理员个数多，管理员对设备交叉操作比较频繁的情况下。通过认证可以限制拥有权限的管理员才可以访问该设备。</li><li>配置authentication和privacy参数：既认证又加密。适用于网络环境不太安全，管理员交叉操作多的情况下。通过认证和加密既可以限制特定的管理员访问设备，并且使网络数据以加密形式发送，避免网络数据被窃取，造成关键数据泄露。</li></ul><p>希望网管在指定视图下具有只读权限时（比如级别比较低的管理员），使用read-view参数。<br>希望网管在指定视图下具有读写权限时（比如级别比较高的管理员），使用write-view参数。</p><p>当希望过滤不相关告警并配置被管理设备只向网管发送指定MIB节点的告警信息，使用notify-view参数。如果配置了该参数，只有notify-view视图下的MIB节点的告警会发送到网管。</p><ol start="7"><li>（可选）设置本地SNMP实体的引擎ID。<br>snmp-agent local-engineid engineid<br>缺省情况下，系统采用内部算法自动生成一个设备引擎ID，包含公司的“企业号＋设备信息”。其中，系统采用设备的管理网口MAC地址作为引擎ID的“设备信息”。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> SNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> SNMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-12-DHCP协议</title>
      <link href="/huawei_dhcp/"/>
      <url>/huawei_dhcp/</url>
      
        <content type="html"><![CDATA[<p><a href="https://support.huawei.com/enterprise/zh/doc/EDOC1000069491/6946084b">文章参考华为官网</a></p><h1 id="DHCP服务器简介"><a href="#DHCP服务器简介" class="headerlink" title="DHCP服务器简介"></a>DHCP服务器简介</h1><p>动态主机配置协议DHCP（Dynamic Host Configuration Protocol）采用客户端/服务器模式对用户的网络参数进行动态配置和集中管理。其中，DHCP服务器通过地址池为用户分配IP地址等网络参数。地址池分为<strong>接口地址池和全局地址池</strong>两种。</p><h1 id="接口地址池配置"><a href="#接口地址池配置" class="headerlink" title="接口地址池配置"></a>接口地址池配置</h1><p>接口地址池配置方式简单，只能用于用户与DHCP服务器在同一个网段的场景，并且只能给对应接口下的用户分配IP地址等网络参数；适用于设备数量有限、配置以及维护量可控的小型网络。在用户网关设备上配置基于接口地址池的DHCP服务器功能之后，对应接口下的固定主机、移动终端等都可以自动获取IP地址等网络参数，不需要用户手动配置修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使能DHCP服务，缺省未使能</span></span><br><span class="line">[Switch] dhcp <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line">[Switch] interface vlanif 10</span><br><span class="line">[Switch-Vlanif10] ip address 10.1.1.1 24  //企业为固定办公终端的网段</span><br><span class="line"></span><br><span class="line">[Switch-Vlanif10] dhcp select interface  //使能接口采用接口地址池的DHCP服务器功能，缺省未使能</span><br><span class="line">[Switch-Vlanif10] dhcp server lease day 30  //租期的缺省值为1天，修改租期为30天</span><br><span class="line">[Switch-Vlanif10] dhcp server dns-list 8.8.8.8</span><br><span class="line">[Switch-Vlanif10] dhcp server static-bind ip-address 10.1.1.100 mac-address 00e0-fc12-3456  //为Client_1分配固定的IP地址</span><br><span class="line">[Switch-Vlanif10] quit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置DHCP数据保存功能，设备发生故障时，可以在系统重启后，执行命令dhcp server database recover，从存储设备文件恢复DHCP数据。</span></span><br><span class="line">[Switch] dhcp server database <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看vlanif10的IP分配情况</span></span><br><span class="line">[Switch] display ip pool interface vlanif10</span><br></pre></td></tr></table></figure><h1 id="全局地址池配置"><a href="#全局地址池配置" class="headerlink" title="全局地址池配置"></a>全局地址池配置</h1><p>与接口地址池相比，全局地址池可应用于大型网络，推荐在核心层设备上配置基于全局地址池的DHCP服务器功能或在服务器区域搭建一台专门的DHCP服务器统一分配IP地址等网络参数，而用户网关设备上只需要启用简单的DHCP中继功能即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使能DHCP服务，缺省未使能</span></span><br><span class="line">[Switch] dhcp <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建pool地址池</span></span><br><span class="line">[Switch] ip pool pool1</span><br><span class="line">[Switch-ip-pool-pool1] network 10.1.1.0 mask 255.255.255.128</span><br><span class="line">[Switch-ip-pool-pool1] dns-list 10.1.2.3</span><br><span class="line">[Switch-ip-pool-pool1] gateway-list 10.1.1.1</span><br><span class="line">[Switch-ip-pool-pool1] lease day 10</span><br><span class="line">[Switch-ip-pool-pool1] quit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口下使能DHCP</span></span><br><span class="line">[Switch] interface vlanif 10</span><br><span class="line">[Switch-Vlanif10] dhcp select global</span><br><span class="line">[Switch-Vlanif10] quit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看全局地址池pool1的分配情况</span></span><br><span class="line">display ip pool name pool1</span><br></pre></td></tr></table></figure><h1 id="DHCP中继"><a href="#DHCP中继" class="headerlink" title="DHCP中继"></a>DHCP中继</h1><p>DHCP中继用于在DHCP服务器和客户端之间转发DHCP报文。当<strong>DHCP服务器与客户端不在同一个网段时，需要配置DHCP中继</strong>。对于DHCP客户端来说，DHCP中继就是DHCP服务器；对于DHCP服务器来说，DHCP中继就是DHCP客户端。</p><p>DHCP中继适用于用户网关设备众多且分布零散的大型网络。为减少维护工作量，网络管理员不想在每个汇聚层交换机（用户网关）上都配置DHCP服务器功能，而希望在核心层设备上配置DHCP服务器功能或在服务器区域部署一台专门的DHCP服务器。此时，作为用户网关的汇聚层交换机上就需要配置DHCP中继功能，实现DHCP服务器与客户端之间的DHCP报文交互。</p><p>某企业将DHCP服务器部署在核心交换机上，DHCP服务器与企业内的终端不在同一个网段。企业希望使用该DHCP服务器为终端动态分配IP地址。<br><img src="https://qiufuqi.github.io/img/hexo/20240220195119.png"></p><h2 id="配置思路"><a href="#配置思路" class="headerlink" title="配置思路"></a>配置思路</h2><p>设备作为DHCP中继的配置思路如下：</p><ol><li>在汇聚层交换机SwitchA（用户网关）上配置DHCP中继，实现设备作为DHCP中继转发终端与DHCP服务器之间的DHCP报文。</li><li>在核心层交换机SwitchB上，配置基于全局地址池的DHCP服务器，实现DHCP服务器从全局地址池中选择IP地址分配给企业终端。</li></ol><p>在汇聚成交换机上配置DHCP中继</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SwitchA] dhcp <span class="built_in">enable</span>  //使能DHCP服务，缺省未使能</span><br><span class="line">[SwitchA] interface vlanif 100</span><br><span class="line">[SwitchA-Vlanif100] ip address 10.10.20.1 24</span><br><span class="line">[SwitchA-Vlanif100] dhcp select relay   //使能DHCP中继功能，缺省未使能</span><br><span class="line">[SwitchA-Vlanif100] dhcp relay server-ip 192.168.20.2  //配置DHCP中继代理的DHCP服务器的IP地址</span><br><span class="line">[SwitchA-Vlanif100] quit</span><br></pre></td></tr></table></figure><p>在核心交换机上配置全局地址池</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SwitchB] interface vlanif 200 </span><br><span class="line">[SwitchB-Vlanif200] ip address 192.168.20.2 24</span><br><span class="line">[SwitchB-Vlanif200] dhcp select global  //使能接口采用全局地址池的DHCP服务器功能，缺省未使能</span><br><span class="line"></span><br><span class="line">[SwitchB] ip pool pool1</span><br><span class="line">[SwitchB-ip-pool-pool1] network 10.10.20.0 mask 24  //配置全局地址池的网段和掩码</span><br><span class="line">[SwitchB-ip-pool-pool1] gateway-list 10.10.20.1  //配置为终端分配的网关地址</span><br><span class="line">[SwitchB-ip-pool-pool1] quit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> DHCP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> DHCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-13-ARP协议</title>
      <link href="/huawei_arp/"/>
      <url>/huawei_arp/</url>
      
        <content type="html"><![CDATA[<p><a href="https://support.huawei.com/enterprise/zh/doc/EDOC1000069491/67fd8bfb#ZH-CN_TASK_0177091436">文章参考华为官网</a></p><h1 id="ARP介绍"><a href="#ARP介绍" class="headerlink" title="ARP介绍"></a>ARP介绍</h1><p>地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP/IP协议。主机发送信息时将包含目标IP地址的ARP请求广播到局域网络上的所有主机，并接收返回消息，以此确定目标的物理地址；收到返回消息后将该IP地址和物理地址存入本机ARP缓存中并保留一定时间，下次请求时直接查询ARP缓存以节约资源。</p><h1 id="静态ARP"><a href="#静态ARP" class="headerlink" title="静态ARP"></a>静态ARP</h1><p><strong>静态ARP表项是指网络管理员手工建立IP地址和MAC地址之间固定的映射关系</strong><br>正常情况下网络中设备可以通过ARP协议进行ARP表项的动态学习，生成的动态ARP表项可以被老化，可以被更新。但是当网络中存在ARP攻击时，设备中动态ARP表项可能会被更新成错误的ARP表项，或者被老化，造成合法用户通信异常。<strong>静态ARP表项不会被老化，也不会被动态ARP表项覆盖</strong>，可以保证网络通信的安全性。<br>静态ARP表项可以<strong>限制本端设备和指定IP地址的对端设备通信时只使用指定的MAC地址</strong>，此时攻击报文无法修改本端设备的ARP表中IP地址和MAC地址的映射关系，从而保护了本端设备和对端设备间的正常通信。一般在网关设备上配置静态ARP表项。<br>设备上配置的静态ARP表项数目不能大于设备静态ARP表项规格，可以执行命令<strong>display arp statistics all</strong>查看设备上已有的ARP表项数目。</p><p><strong>portswitch</strong>命令用来配置将以太网接口从三层模式切换到二层模式。<br><strong>undo portswitch</strong>命令用来配置将以太网接口从二层模式切换到三层模式。</p><h2 id="实验参考"><a href="#实验参考" class="headerlink" title="实验参考"></a>实验参考</h2><p>企业通过Switch实现各个部门之间的互连，且各个部门加入不同的VLAN。总裁办公室和文件备份服务器采取手工方式分配已经获取到固定IP地址，市场部和研发部主机通过DHCP方式已经获取到动态IP地址。由于市场部拥有访问外网的权利，主机经常会感染ARP病毒，攻击Switch并修改Switch上的动态ARP表项，造成总裁办公室与外界的通信中断以及各个部门不能正常访问文件备份服务器。公司希望在Switch上配置静态ARP表项，以保证总裁办公室与外界的通信安全，并保证各个部门能正常访问文件备份服务器。<br><img src="https://qiufuqi.github.io/img/hexo/20240219223226.png"></p><p>静态ARP的配置思路如下：</p><ol><li>在Switch上为总裁办公室主机配置静态ARP表项，防止总裁办公室主机的ARP表项被ARP攻击报文修改，造成总裁办公室与外界的通信中断。</li><li>在Switch上为文件备份服务器配置静态ARP表项，防止文件备份服务器的ARP表项被ARP攻击报文修改，造成各个部门不能正常访问文件备份服务器。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为指定主机配置静态ARP表项</span></span><br><span class="line">[Switch] arp static 10.10.10.1 00e0-fc01-0001 vid 10 interface gigabitethernet 1/0/1 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 为重要服务器如文件备份服务器配置静态ARP表项</span></span><br><span class="line">[Switch] arp static 10.164.10.1 00e0-fc02-1234 interface gigabitethernet 1/0/2 </span><br><span class="line">[SW]display arp static</span><br><span class="line">IP ADDRESS      MAC ADDRESS     EXPIRE(M) TYPE INTERFACE      VPN-INSTANCE      </span><br><span class="line">                                          VLAN </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">10.10.10.1      00e0-fc01-0001            S--  GE0/0/1</span><br><span class="line">                                          10</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Total:1         Dynamic:0       Static:1     Interface:0</span><br></pre></td></tr></table></figure><p>SW配置如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">sysname Switch</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">vlan batch 10</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface Vlanif10</span><br><span class="line"> ip address 10.164.1.20 255.255.255.0</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface GigabitEthernet1/0/1</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 10</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface GigabitEthernet1/0/2</span><br><span class="line"> undo portswitch</span><br><span class="line"> ip address 10.164.10.10 255.255.255.0</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface GigabitEthernet1/0/3</span><br><span class="line"> undo portswitch</span><br><span class="line"> ip address 10.164.20.1 255.255.255.0</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">arp static 10.164.1.1 00e0-fc01-0001 vid 10 interface GigabitEthernet1/0/1</span><br><span class="line">arp static 10.164.10.1 00e0-fc02-1234 interface GigabitEthernet1/0/2</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">return</span></span><br></pre></td></tr></table></figure><h1 id="路由式Proxy-ARP"><a href="#路由式Proxy-ARP" class="headerlink" title="路由式Proxy ARP"></a>路由式Proxy ARP</h1><p>企业内部进行子网划分时，可能会出现两个子网网络属于同一网段，但是却不属于同一物理网络的情况，两个子网网络间被交换机分隔（比如不同城市的分公司，使用同一个网段，却不属于同一个物理网络，要求实现互相通信）。这时可以通过修改网络内主机的路由信息，使发往其它子网的数据先发送到连接不同子网的网关设备上，再由网关设备转发此数据报文。但是这种解决方案需要配置子网中所有主机的路由，并不便于管理和维护。</p><p>在网关上部署路由式Proxy ARP功能，可以有效解决子网划分带来的管理和维护方面的问题。路由式Proxy ARP可以使IP地址属于同一网段却不属于同一物理网络的主机间能够相互通信，并且主机上不需要配置缺省网关，便于管理和维护。<br>在设备上使能路由式Proxy ARP后，与设备相连的主机上应该减小ARP表项老化超时时间，使无效的ARP表项尽快失效，减少发给交换机而交换机不能转发的报文</p><h2 id="实验参考-1"><a href="#实验参考-1" class="headerlink" title="实验参考"></a>实验参考</h2><p>某企业的子公司A和子公司B位于不同城市，且所使用的IP地址部署为同一个网段（172.16.0.0/16）。连接子公司A的Switch_1与连接子公司B的Switch_2之间路由可达。由于两个子公司之间被设备间隔，属于不同的广播域，因此无法在同一个局域网内实现互通；子公司的主机没有配置默认网关，无法实现跨网段互通。现在公司需要在不改变主机配置的情况下，实现两个子公司之间的通信。<br><img src="https://qiufuqi.github.io/img/hexo/20240219222858.png"></p><p>采用如下的配置思路实现子公司A和子公司B之间互通：</p><ol><li>在Switch_1上将连接子公司A的接口划分到VLAN10，在Switch_2上将连接子公司B的接口划分到VLAN20。</li><li>在Switch_1和Switch_2的VLANIF接口上使能路由式Proxy ARP功能，实现子公司A和子公司B互通。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置路由式Proxy ARP</span></span><br><span class="line">[Switch_1-Vlanif10] arp-proxy <span class="built_in">enable</span></span><br><span class="line">[Switch_2-Vlanif20] arp-proxy <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询IP对应的mac地址情况</span></span><br><span class="line">[Switch_1] display arp interface vlanif 10</span><br><span class="line">IP ADDRESS      MAC ADDRESS     EXPIRE(M) TYPE        INTERFACE   VPN-INSTANCE                                                      </span><br><span class="line">                                          VLAN/CEVLAN                                                                               </span><br><span class="line">------------------------------------------------------------------------------                                                      </span><br><span class="line">172.16.1.1      00e0-fc12-3456            I -         Vlanif10                                                                     </span><br><span class="line">------------------------------------------------------------------------------                                                      </span><br><span class="line">Total:1         Dynamic:0       Static:0     Interface:1 </span><br></pre></td></tr></table></figure><p>SW的配置文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SW1</span></span><br><span class="line">sysname Switch_1</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">vlan batch 10</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface Vlanif10</span><br><span class="line"> ip address 172.16.1.1 255.255.255.0</span><br><span class="line"> arp-proxy <span class="built_in">enable</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface GigabitEthernet1/0/1</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 10</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SW2</span></span><br><span class="line">sysname Switch_2</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">vlan batch 20</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface Vlanif20</span><br><span class="line"> ip address 172.16.2.1 255.255.255.0</span><br><span class="line"> arp-proxy <span class="built_in">enable</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">interface GigabitEthernet1/0/1</span><br><span class="line"> port link-type access</span><br><span class="line"> port default vlan 20</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">return</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> ARP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> ARP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-14-LLDP协议</title>
      <link href="/huawei_lldp/"/>
      <url>/huawei_lldp/</url>
      
        <content type="html"><![CDATA[<p><a href="https://support.huawei.com/enterprise/zh/doc/EDOC1100334405/13bbb5c3?idPath=24030814%7C21782164%7C21782167%7C259602657">文章参考</a></p><h1 id="LLDP简介"><a href="#LLDP简介" class="headerlink" title="LLDP简介"></a>LLDP简介</h1><p>LLDP（Link Layer Discovery Protocol，链路层发现协议）是IEEE 802.1ab中定义的第二层发现（Layer 2 Discovery）协议。LLDP提供了一种标准的链路层发现方式，可以将本端设备的主要能力、管理地址、设备标识、接口标识等信息封装到LLDP报文中传递给邻居节点，邻居节点在收到这些信息后将其以标准MIB（Management Information Base，管理信息库）的形式保存起来，供NMS（Network Management System，网络管理系统）查询及判断链路的通信状况。<br>LLDP提供了一种标准的链路层发现方式。通过LLDP获取的设备二层信息能够快速获取相连设备的拓扑状态；显示出客户端、交换机、路由器、应用服务器以及网络服务器之间的路径；检测设备间的配置冲突、查询网络失败的原因。用户可以通过使用网管系统，对支持运行LLDP协议的设备进行链路状态监控，在网络发生故障的时候快速进行故障定位。</p><h2 id="LLDP基本原理"><a href="#LLDP基本原理" class="headerlink" title="LLDP基本原理"></a>LLDP基本原理</h2><p><strong>LLDP可以将本地设备的信息发送给远端设备，本地设备将收到的远端设备信息以标准MIB的形式保存起来。</strong><br>LLDP协议规定设备的每个接口上都有四个MIB库，其中最主要的两个为LLDP Local System MIB（LLDP本地系统MIB）和LLDP Remote System MIB（LLDP远端系统MIB），分别存储着本端设备和邻居节点的状态信息，包括设备ID、接口ID、系统名称、系统描述、接口描述、设备能力、网络管理地址。<br>LLDP基本实现原理如下：</p><ol><li>LLDP模块通过LLDP代理与设备上物理拓扑MIB、实体MIB、接口MIB以及其他MIB的交互，来更新自己的LLDP本地系统MIB，以及本地设备自定义的LLDP扩展MIB。</li><li>将本地设备信息封装成LLDP帧发送给远端设备。</li><li>接收远端设备发过来的LLDP帧，更新自己的LLDP远端系统MIB，以及远端设备自定义的LLDP扩展MIB。</li></ol><p>通过LLDP代理收发LLDP帧，设备就很清楚地知道远端设备的信息，包括连接的是远端设备的哪个接口、远端设备的MAC地址等信息。<br>LLDP代理主要完成如下工作：</p><ul><li>维护LLDP本地系统MIB信息。</li><li>向邻居节点发送LLDP帧，通告本端设备的状态信息。</li><li>识别并解析收到的邻居节点发送的LLDP帧，维护LLDP远端系统MIB的信息。</li><li>LLDP本地系统MIB或LLDP远端系统MIB的信息发生变化时，向网管发送LLDP告警。</li></ul><p>LLDPDU是封装在LLDP报文中的数据单元，封装了LLDP数据单元LLDPDU（LLDP Data Unit）的以太网报文称为LLDP报文。组成LLDPDU之前，设备先将本地信息封装成TLV（Type-Length-Value）格式，再由若干个TLV组合成一个LLDPDU，封装在LLDP报文的数据部分进行传送。<br>TLV是组成LLDPDU的最小单元，表示一个对象的类型、长度和信息。</p><h2 id="LLDP工作模式"><a href="#LLDP工作模式" class="headerlink" title="LLDP工作模式"></a>LLDP工作模式</h2><p>LLDP有如下四种工作模式：LLDP功能启用后，默认的工作模式为Tx/Rx模式。</p><ul><li>Tx模式：只发送LLDP报文。</li><li>Rx模式：只接收LLDP报文。</li><li>Tx/Rx模式：既发送也接收LLDP报文。</li><li>Disable模式：既不发送也不接收LLDP报文。</li></ul><h3 id="LLDP报文的发送机制"><a href="#LLDP报文的发送机制" class="headerlink" title="LLDP报文的发送机制"></a>LLDP报文的发送机制</h3><p>一般情况下，启用LLDP功能后，<strong>设备会周期性地向邻居节点发送LLDP报文</strong>。如果设备的本地配置发生变化，则立即发送LLDP报文，将本地信息的变化情况尽快通知给邻居节点。为了防止本地信息的频繁变化而引起LLDP报文的大量发送，设备支持配置接口发送LLDP报文的延迟时间，<strong>每发送一个LLDP报文后都延迟一段时间后再继续发送下一个报文</strong>。</p><p>当设备发现一个新邻居（即接收到一个新的LLDP报文且本地没有保存该报文的发送方设备的信息），或者设备的LLDP功能由打开状态变为关闭，或者设备的接口状态由Down变为Up的时候，为了让其他设备尽快发现本设备，<strong>设备支持快速发送机制，即将LLDP报文的发送周期缩短为1秒，并连续发送指定数量的LLDP报文后再恢复为正常的发送周期</strong>。</p><h3 id="LLDP报文的接收机制"><a href="#LLDP报文的接收机制" class="headerlink" title="LLDP报文的接收机制"></a>LLDP报文的接收机制</h3><p>设备收到LLDP报文时，会对报文及其携带的TLV信息进行有效性检查，通过有效性检查后，将邻居信息保存到本地设备，并根据LLDPDU中携带的TTL（Time To Live，生存时间） TLV值，设置邻居信息在本地设备的老化时间，如果接收到的LLDPDU中的TTL值等于零，将立刻老化掉该邻居信息。</p><h2 id="LLDP缺省配置"><a href="#LLDP缺省配置" class="headerlink" title="LLDP缺省配置"></a>LLDP缺省配置</h2><h1 id="启用LLDP"><a href="#启用LLDP" class="headerlink" title="启用LLDP"></a>启用LLDP</h1><p>在启用LLDP之前，需完成以下任务：</p><ul><li>设备与NMS之间路由可达，且SNMP相关参数已经配置完成。</li><li>设备上已经配置用于LLDP管理的IP地址。</li></ul><h2 id="启用LLDP功能"><a href="#启用LLDP功能" class="headerlink" title="启用LLDP功能"></a>启用LLDP功能</h2><p>操作步骤:</p><ol><li>进入系统视图。<br>system-view</li><li>启用全局的LLDP功能<br>lldp enable</li><li>（可选）使能LLDP管理地址的接口模式。<br>lldp management-address interface-mode</li><li>（可选）关闭接口的LLDP功能。<ul><li>进入接口视图。<br>interface interface-type interface-number</li><li>关闭接口的LLDP功能。<br>lldp disable</li></ul></li></ol><p>缺省情况下，如果全局的LLDP功能未启用，接口的LLDP功能也未启用；如果全局的LLDP功能已启用，接口的LLDP功能也启用。<br>LLDP功能有两个开关，一个是全局开关，一个是接口下的开关，两者有如下的关系：</p><ul><li>缺省情况下，启用全局的LLDP功能后，设备上所有接口的LLDP功能都处于打开状态。</li><li>关闭全局的LLDP功能后，设备上所有接口的LLDP功能都处于关闭状态。</li><li>只有全局的LLDP功能和接口下的LLDP功能都处于打开状态时，相应的接口才能够发送和接收LLDP报文。</li><li>全局的LLDP功能处于关闭状态时，打开和关闭接口的LLDP功能的命令都是无效的。</li></ul><p><strong>接口的LLDP功能只能在物理接口上进行配置，逻辑接口不支持配置该功能。</strong><br>5. （可选）配置接口的LLDP工作模式。<br>    - 进入接口视图。<br>    interface interface-type interface-number<br>    - 配置接口的LLDP工作模式。<br>    lldp admin-status { tx | rx | txrx }<br>配置接口工作在指定的工作模式下，可以有效减少网络中LLDP报文的数量，降低系统负担，保证其他业务的正常运行。</p><h2 id="配置管理地址"><a href="#配置管理地址" class="headerlink" title="配置管理地址"></a>配置管理地址</h2><p>（可选）配置LLDP管理IP地址。管理IP地址是指被携带在LLDP报文中的Management Address TLV中，供网管系统标识设备，并进行网络管理的IP地址。管理IP地址可以明确地标识一台设备，从而有利于网络拓扑的绘制，便于网络管理。<br>配置LLDP管理IP地址有如下两种方式，只能选择一种方式配置：</p><ul><li>通过lldp management-address命令为设备手工指定LLDP管理IP地址。</li><li>通过lldp management-address bind命令配置LLDP管理IP地址和指定接口的绑定关系，<strong>设备优选绑定接口的IP地址为管理IP地址</strong>。</li></ul><p>LLDP管理IP地址的选取优先级：</p><ul><li>用户通过lldp management-address命令配置了管理IP地址，但未配置管理IP地址和接口的绑定关系时，配置的管理IP地址的优先级最高，设备优选该IP地址作为管理IP地址。</li><li>用户未通过lldp management-address命令配置管理IP地址，但是配置了管理IP地址和接口的绑定关系时，设备将优选绑定接口的IP地址作为管理IP地址。</li><li>用户既未通过lldp management-address命令配置管理IP地址，又没有配置管理IP地址和接口的绑定关系时，系统将自动从IP地址列表中查找并指定一个IP地址作为LLDP的管理IP地址，如果没有找到缺省的IP地址，则用设备的桥MAC作为管理IP地址</li></ul><p>操作步骤：</p><ol><li>进入系统视图。<br>system-view</li><li>配置LLDP管理IP地址，请根据需要选择如下方式的一种。<ul><li>配置LLDP管理IPv4地址。<br>lldp management-address ip-address</li><li>配置LLDP管理IPv6地址。<br>lldp management-address ipv6 IPv6address</li><li>配置LLDP管理IPv4地址和接口的绑定关系。<br>lldp management-address bind interface interface-type interface-number</li><li>配置LLDP管理IPv6地址和接口的绑定关系。<br>lldp management-address ipv6 bind interface interface-type interface-number</li></ul></li></ol><h2 id="检查配置结果"><a href="#检查配置结果" class="headerlink" title="检查配置结果"></a>检查配置结果</h2><p>已经完成LLDP基本功能的所有配置。</p><p>操作步骤：</p><ul><li>执行命令display lldp local [ interface interface-type interface-number ]查看全局或指定接口的本地LLDP状态信息。</li><li>执行命令display lldp neighbor [ interface interface-type interface-number ]查看全局或指定接口的邻居节点的LLDP状态信息。</li><li>执行命令display lldp neighbor brief查看邻居节点的概要信息。</li><li>执行命令display lldp tlv-config [ interface interface-type interface-number ]查看全局或指定接口下配置的允许发送的可选TLV信息。</li><li>执行命令display lldp mdn local [ interface interface-type interface-number ]查看全部或者指定接口的MDN功能的配置和状态信息。</li><li>执行命令display lldp mdn neighbor [ interface interface-type interface-number ]查看全部或者指定接口的MDN邻居信息。</li></ul><h2 id="LLDP告警功能"><a href="#LLDP告警功能" class="headerlink" title="LLDP告警功能"></a>LLDP告警功能</h2><p>通过配置LLDP告警功能，设备会在邻居节点信息发生变化的时候，向NMS发送告警。</p><p>为了防止因为LLDP告警频繁发送而导致设备上的网络拓扑发生震荡，需要配置设备发送告警的延迟时间。设备发送LLDP告警的延迟时间的取值要适当，用户可以根据网络负载及时调节该参数。</p><ul><li>取值较大时，能够有效避免设备上的网络拓扑发生震荡。但是，如果取值过大会导致NMS不能及时感知到邻居节点的状态变化，影响设备上的网络拓扑的及时更新。</li><li>取值较小时，能够及时更新设备上的网络拓扑。但是，如果取值过小会导致NMS频繁刷新邻居节点的状态信息，不仅会导致设备上的网络拓扑发生震荡，还增加了系统的负担，造成资源的浪费。</li></ul><p>操作步骤：</p><ol><li>进入系统视图。<br>system-view</li><li>启用LLDP告警功能。<br>snmp-agent trap enable feature-name lldp [ trap-name { hwlldpinterfaceremtableschange  | lldpremtableschange } ]<br>启用设备的LLDP告警功能后，当出现以下情况时，设备会向NMS发送告警。</li></ol><ul><li>接口邻居节点的状态信息发生变化，对应的告警为LLDP 1.3.6.1.4.1.2011.5.25.134.2.8 hwLldpInterfaceRemTablesChange。</li><li>LLDP邻居节点的状态信息发生变化，对应的告警为LLDP 1.0.8802.1.1.2.0.0.1 lldpRemTablesChange。</li></ul><p><strong>LLDP告警功能对全局起作用，控制设备上所有接口发送LLDP告警的能力。</strong><br>3. （可选）配置设备发送LLDP邻居信息变化告警的延迟时间。<br>lldp trap-interval interval<br><strong>缺省情况下，设备发送LLDP邻居信息变化告警的延迟时间是5秒。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> LLDP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> LLDP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-11-应用层协议</title>
      <link href="/huawei_network/"/>
      <url>/huawei_network/</url>
      
        <content type="html"><![CDATA[<p>六大常用应用层协议：Telnet协议，FTP，TFTP，DHCP，HTTP和NTP（Network Time Protocol 网络时间协议）</p><h1 id="Telnet协议"><a href="#Telnet协议" class="headerlink" title="Telnet协议"></a>Telnet协议</h1><p>Telnet协议是一种典型的客户端/服务器模型的协议，管理网络基础设施的主机充当Telnet客户端，被管理的网络基础设施充当Telnet服务器。作为应用层协议，<strong>Telnet协议在传输层通常使用TCP，端口号为23</strong>。缺省情况下，运行VRP (Versatile Routing Platform 通用路由平台)系统的设备不可充当Telnet服务器<br>Telnet协议存在严重的安全隐患，它不支持对协议传输的数据进行加密。<br>配置步骤如下：</p><ul><li>启用telnet服务：系统视图命令<br><strong>telnet server enable</strong></li><li>进入VTY用户：系统视图命令<br><strong>user-interface vty first-ui-number last-ui-number</strong></li><li>配置协议：VTY用户管理视图命令，缺省情况下，VTY用户界面支持SSH和Telnet<br><strong>protocol inbound telnet</strong></li><li>配置认证方式：VTY用户管理视图命令，VRP系统不会指定默认的Telnet协议认证方式<br><strong>authentication-mode {aaa|none|password}</strong><ul><li>aaa：使用<a href="/huawei_aaa">AAA认证</a></li><li>none：不做认证</li><li>password：密码认证<br><strong>set authentication password cipher password</strong></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[R2]telnet server <span class="built_in">enable</span> </span><br><span class="line"> Error: TELNET server has been enabled</span><br><span class="line">[R2]user-interface vty 0 4</span><br><span class="line">[R2-ui-vty0-4]protocol inbound telnet </span><br><span class="line">[R2-ui-vty0-4]authentication-mode password</span><br><span class="line">Please configure the login password (maximum length 16):huawei</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[R2-ui-vty0-4]<span class="built_in">set</span> authentication password cipher huawei</span><br><span class="line">[R2-ui-vty0-4]dis this</span><br><span class="line">[V200R003C00]</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">user-interface con 0</span><br><span class="line"> authentication-mode password</span><br><span class="line">user-interface vty 0 4</span><br><span class="line"> authentication-mode password</span><br><span class="line"> <span class="built_in">set</span> authentication password cipher %$%$]p&#123;++FV2E3baww)&gt;=GhD,F(`MBVG4Nj&#123;!&amp;1NvI&gt;S</span><br><span class="line">|q.XF(c,%$%$</span><br><span class="line">user-interface vty 16 20</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line">[R2-ui-vty0-4]</span><br></pre></td></tr></table></figure><h1 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h1><p>FTP是基于客户端/服务器模型的协议，是针对两台及算你就共享文件所定义的协议标准。FTP将TCP作为传输层协议，保障数据传输的可靠性。<strong>TCP 21端口用于建立控制连接，TCP 20端口在FTP主动模式下用于建立FTP数据连接</strong></p><ul><li>FTP主动模式：FTP客户端通过PORT命令主动把用来建立数据连接的信息公布给FTP服务器的模式</li><li>FTP被动模式：FTP客户端和FTP服务器使用数据连接来传输数据</li></ul><p>配置步骤如下：</p><ul><li>启用ftp服务：系统视图命令<br><strong>ftp server enable</strong></li><li>进入aaa视图：为访问这台FTP服务器的用户设置用户名和密码，指定用户级别，用户对这台FTP服务器的访问权限，用户通过FTP可以访问的目录。<strong>设置用户级别大于等于3</strong>。<br><strong>系统视图：aaa</strong><br><strong>aaa视图：local-user user-name password irreversible-cipher password</strong><br><strong>aaa视图：local-user user-name privilege level level-num</strong><br><strong>aaa视图：local-user user-name service-type ftp</strong><br><strong>aaa视图：local-user user-name ftp-directory directory</strong></li></ul><p>登录FTP服务器后可执行命令</p><ul><li>ascii：切换至ASCII模式（缺省模式）</li><li>binary：切换至二进制模式</li><li>ls：查看FTP服务器文件列表</li><li>passive：FTP通过被动模式建立连接</li><li>undo passive：FTP通过主动模式建立连接</li><li>get file-name：将FTP服务器上的某个文件下载到本地</li><li>put file-name：将本地某个文件上传到FTP服务器</li><li>bye：断开FTP连接</li></ul><h2 id="FTP拓扑实验"><a href="#FTP拓扑实验" class="headerlink" title="FTP拓扑实验"></a>FTP拓扑实验</h2><ul><li>dir：用户视图命令，查看存储器中的文件和目录信息<br>dir /all 会展示普通删除后的文件</li><li>mkdir：创建目录</li><li>rmdir：删除目录，当管理员处于该目录时，无法删除</li><li>copy：复制文件</li><li>move：移动文件</li><li>rename：重命名文件</li><li>delete：删除文件，不加unreserved或force表示普通删除<br>delete [/unreserved] [/force] filename：unreserved表示永久删除且无法恢复，会提示进行确认；force不会给出任何提示。</li><li>undelete：恢复文件，针对普通删除的</li><li>reset recycle-bin filename：彻底删除普通删除的文件</li></ul><p><img src="https://qiufuqi.github.io/img/hexo/20240215205107.png"><br>将AR2设置为FTP服务器<br>基础配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip add</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip address 192.168.0.1 24</span><br><span class="line"></span><br><span class="line">[R2]int g0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]ip ad</span><br><span class="line">[R2-GigabitEthernet0/0/0]ip address 192.168.0.2 24</span><br></pre></td></tr></table></figure><p>在AR2上配置FTP服务器，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[R2]ftp server <span class="built_in">enable</span></span><br><span class="line">[R2]aaa</span><br><span class="line">[R2-aaa]local-user ftp-user password cipher huawei@123</span><br><span class="line">Info: Add a new user.</span><br><span class="line">[R2-aaa]local-user ftp-user service-type ftp</span><br><span class="line">[R2-aaa]local-user ftp-user privilege level 3</span><br><span class="line">[R2-aaa]local-user ftp-user ftp-directory flash:</span><br></pre></td></tr></table></figure><p>在AR1上使用ftp命令登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;ftp 192.168.0.2</span><br><span class="line">Trying 192.168.0.2 ...</span><br><span class="line"></span><br><span class="line">Press CTRL+K to abort</span><br><span class="line">Connected to 192.168.0.2.</span><br><span class="line">220 FTP service ready.</span><br><span class="line">User(192.168.0.2:(none)):ftp-user</span><br><span class="line">331 Password required <span class="keyword">for</span> ftp-user.</span><br><span class="line">Enter password:</span><br><span class="line">230 User logged <span class="keyword">in</span>.</span><br><span class="line"></span><br><span class="line">[R1-ftp]<span class="built_in">bye</span></span><br><span class="line">221 Server closing</span><br></pre></td></tr></table></figure><h1 id="TFTP"><a href="#TFTP" class="headerlink" title="TFTP"></a>TFTP</h1><p>TFTP是一种客户端/服务器模型的文件传输协议，具有设计简单，占用非常少的资源。TFTP不会被用于跨越互联网的数据传输，仅被用户可靠网络内部的设备间数据传输。</p><ul><li>TFTP无法在客户端上查看TFTP服务器的文件列表</li><li>TFTP没有提供认证机制，也没有提供加密机制或者补充的加密机制</li></ul><p><strong>tftp TFTP_server_IP_address get filename：从TFTP服务器上下载文件</strong><br><strong>tftp TFTP_server_IP_address put filename：向TFTP服务器上上传文件</strong></p><h1 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h1><h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><p>HTTP是一种典型的客户端/服务器模型协议，<strong>通常使用TCP协议，端口号为80</strong>。</p><h1 id="NTP"><a href="#NTP" class="headerlink" title="NTP"></a>NTP</h1><p>NTP是一项时间同步协议，<strong>使用UDP作为传输层协议，端口号为123</strong>。<br>在时间源系统中，层数的数值越低，时钟的精确度就越高，时钟也会给层数搞得时钟充当服务器，让它们从自己这里同步时间。<br><strong>层数0的时钟是最高精度的计时器，被称为标准参考时钟或权威时钟</strong>。实际网络中，会把从权威时钟处获得时间同步的NTP服务器的层数设置为1，即层数为1的设备以层数为0的设备作为服务器，同时自己又充当层数2的设备的服务器。<strong>层数1的设备也叫做主时间服务器</strong>。<br>NTP支持的协议除了客户端-服务器模式，还支持以下模式</p><ul><li>对等体模式。不区分客户端和服务器，两台NTP设备会互相发送时间。通常用在集群中，避免当NTP服务器发生故障时，整个网络的时间不同步</li><li>广播模式/组播模式。NTP设备分别为NTP客户端和NTP服务器，其中NTP服务器周期性的向广播地址或者管理员配置的组播地址发送时间消息，NTP客户端针对广播地址或管理员配置的组播地址，并通过服务器发送的广播或组播消息来同步时间。这种模式下，NTP客户端无须知道NTP服务器的IP地址，适用于拥有大量NTP客户端的多路访问网络。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> Telnet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> Telnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-9-AAA用户管理</title>
      <link href="/huawei_aaa/"/>
      <url>/huawei_aaa/</url>
      
        <content type="html"><![CDATA[<p>AAA提供了用户管理功能，是认证（Authentication），授权（Authorization）和计费（Accouting）。认证确保用户身份，授权确保用户所能够执行行为，计费记录用执行的行为，如用户的上线下线时间。<br>网络设备可以提供本地认证和授权，较大规模网络中，可以设置单独的AAA服务器来提供集中式安全管理，常用的协议是RADIUS（Remote Authentication Dial In User Service，远程认证拨号用户服务）</p><h1 id="AAA基本概念"><a href="#AAA基本概念" class="headerlink" title="AAA基本概念"></a>AAA基本概念</h1><h2 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h2><p>认证功能可以在用户视图访问网络时，识别用户的身份，判断用户是否为合法用户。在对用户进行授权时，应该仅授权用户执行所需功能使得最小权限，以防止发生恶意或意外的网络行为。支持以下3种认证方式：</p><ul><li>不认证：不对用户的身份进行认证。甚少采用</li><li>本地认证：使用本地认证时，NAS（Network Access Server）充当了AAA服务器角色，在NAS本地存储了执行用户认证所需的用户信息（例如用户名和密码）。优点：响应速度快；缺点：存储的用户信息量收到NAS的硬件限制，不适合大量存储，因此本地认证主要用于用户登录网络设备进行身份认证，比如Telnet，SSH等</li><li>远端认证：使用单独的AAA服务器进行身份认证。NAS作为AAA的客户端，使用RADIUS与RADIUS服务器进行通信，或者使用HWTACACS（Huawei Terminal Access Control Access-control System 华为终端访问控制器访问控制系统）与HWTACACS服务器进行通信。可以存储大量的用户凭据信息。用户凭据可能时：密码，用户名和密码，数字证书</li></ul><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p>授权是指授权合法用户能够执行的行为，即授予用户权限。支持3种授权方式：</p><ul><li>不授权：不对用户进行授权。</li><li>本地授权：使用本地授权时，NAS实际上充当了AAA服务器的角色，在NAS本地存储了执行授权所需的用户权限信息</li><li>远端授权：使用单独的AAA服务器进行授权。NAS作为AAA的客户端，使用RADIUS与RADIUS服务器进行通信，或者使用HWTACACS与HWTACACS服务器进行通信。<ul><li>RADIUS授权：通过向RADIUS服务器认证的用户进行授权；<strong>RADIUS的授权功能与其认证功能绑定，不能单独使用</strong></li><li>HWTACACS授权：可以向所有用户进行授权</li></ul></li></ul><p><strong>用户的权限可以同时来自AAA服务器和NAS服务器，当两者的权限范围冲突时，以AAA服务器下发的授权信息为准</strong></p><h2 id="计费"><a href="#计费" class="headerlink" title="计费"></a>计费</h2><p>计费功能记录用户的行为以及该行为相关的参数，比如时间戳，在线时长，流量等。AAA支持2种计费方式：</p><ul><li>不计费：用户的行为不产生任何活动日志</li><li>远端计费：通过RADIUS服务器或HWTACACS服务器进行远端计费。</li></ul><h1 id="AAA实现方式"><a href="#AAA实现方式" class="headerlink" title="AAA实现方式"></a>AAA实现方式</h1><p>AAA服务器与AAA客户端通过特殊的协议进行通信，最常用的时RADIUS。RADIUS可以提供对用户的认证，授权和计费功能，这项协议定义在RFC 2865和RFC 2866中。RADIUS将认证和授权绑定。<strong>RADIUS使用UDP传输协议，使用UDP端口1812进行认证和授权，使用UDP端口1813进行计费</strong></p><h1 id="AAA基本配置"><a href="#AAA基本配置" class="headerlink" title="AAA基本配置"></a>AAA基本配置</h1><p>华为通信数字设备支持将不同的认证，授权和计费方案组合使用，也可以使其形成备份，例如在AAA服务器无响应时，使用本地认证。</p><h2 id="配置本地用户"><a href="#配置本地用户" class="headerlink" title="配置本地用户"></a>配置本地用户</h2><p>在设备中创建本地用户，并设置密码。还可以配置本地用户的接入方式，用户级别，闲置切断时间，上线时间，最大连接数量等参数，并且支持本地用户自行修改密码。<br>  用户接入类型如下：</p><ul><li>管理类：通过Telnet，SSH，HTTP，API，FTP等协议进行连接的用户，缺省状态下属于default_admin域</li><li>普通类：通过802.1x，PPP和Web进行认证的用户，缺省状态下属于default域</li></ul><p>  配置用户命令如下：</p><ul><li>进入AAA视图：系统视图命令<br><strong>aaa</strong></li><li>创建本地用户：为本地用户设置用户名和密码，用户名可以“用户名@域名”指定用户所属的域<br><strong>local-user user-name password cipher password</strong></li><li>指定接入类型：一个用户可以设置多种接入类型，缺省状态下为none，即关闭所有接入类型<br><strong>local-user user-name service-type { {terminal|telnet|ftp|ssh|snmp|http} | {ppp|none}}</strong></li><li>授权本地用户：授权该用户，定义用户级别，<strong>取值范围0-15，值越大级别越高</strong><br><strong>local-user user-name privilege level level-num</strong></li></ul><h2 id="配置AAA方案"><a href="#配置AAA方案" class="headerlink" title="配置AAA方案"></a>配置AAA方案</h2><p>创建并配置认证方案和授权方案</p><ul><li>创建认证方案并进入方案：AAA视图命令<br><strong>authentication-scheme authentication-scheme-name</strong></li><li>指定认证方式：缺省状态下为本地认证，可以设置多种认证 (多种认证方式并存)，按照认证方式的采用顺序进行配置<br><strong>authentication-mode {hwtacacs|local|radius|none}</strong><ul><li>先本地认证，再远端认证：当用户名只存在远端服务器时，认证方式由本地认证转为远端认证；当本地也保存了用户名时，由于密码错误导致身份认证失败时，不会转为远端认证</li><li>先远端认证，再本地认证：再远端服务器无响应时，转为本地认证；当用户名只保存在本地数据库，但远端认证失败时，不会转为本地认证。</li></ul></li><li>创建授权方案并进入授权方案<br><strong>authorization-scheme authorization-scheme-name</strong></li><li>指定授权方式：缺省状态下为本地授权，可以指定多种授权<br><strong>authorizaition-mode {hwhacacs|local|none}</strong></li></ul><h2 id="应用AAA方案"><a href="#应用AAA方案" class="headerlink" title="应用AAA方案"></a>应用AAA方案</h2><p>针对远程登录进行身份验证时，需要在VTY接口下指定认证方案</p><ul><li>进入VTY接口：VTY的接口范围时0-4<br><strong>user-interface vty first-ui-number [last-ui-number]</strong></li><li>指定本地认证<br><strong>authentication-mode aaa</strong></li></ul><h2 id="验证命令"><a href="#验证命令" class="headerlink" title="验证命令"></a>验证命令</h2><ul><li>查看域中使用的认证，授权和收费方案<br><strong>display domain name default_admin</strong></li><li>查看认证方案配置<br><strong>display authentication-scheme authentication-scheme-name</strong></li><li>查看授权方案配置<br><strong>display authorization-scheme authorization-scheme-name</strong></li><li>查看当前在线用户<br><strong>display users</strong></li><li>查看用户登录信息<br><strong>display aaa offline-record all</strong></li></ul><h1 id="AAA拓扑实验"><a href="#AAA拓扑实验" class="headerlink" title="AAA拓扑实验"></a>AAA拓扑实验</h1><p><img src="https://qiufuqi.github.io/img/hexo/20240215110346.png"><br>基础配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip add 10.10.12.1 24</span><br><span class="line"></span><br><span class="line">[R2]int g0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]ip address 10.10.12.2 24</span><br></pre></td></tr></table></figure><h2 id="查看AAA资源"><a href="#查看AAA资源" class="headerlink" title="查看AAA资源"></a>查看AAA资源</h2><p>使用命令display aaa configuration查看是否有足够的资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R1]display aaa configuration </span><br><span class="line">  Domain Name Delimiter            : @ </span><br><span class="line">  Domainname parse direction       : Left to right</span><br><span class="line">  Domainname location              : After-delimiter</span><br><span class="line">  Administrator user default domain: default_admin</span><br><span class="line">  Normal user default domain       : default</span><br><span class="line">  Domain                           : total: 32      used: 2    </span><br><span class="line">  Authentication-scheme            : total: 32      used: 1   </span><br><span class="line">  Accounting-scheme                : total: 32      used: 1   </span><br><span class="line">  Authorization-scheme             : total: 32      used: 1   </span><br><span class="line">  Service-scheme                   : total: 256     used: 0   </span><br><span class="line">  Recording-scheme                 : total: 32      used: 0   </span><br><span class="line">  Local-user                       : total: 512     used: 1  </span><br></pre></td></tr></table></figure><h2 id="配置AAA方案-1"><a href="#配置AAA方案-1" class="headerlink" title="配置AAA方案"></a>配置AAA方案</h2><p>使用本地方案，配置认证方案和授权方案。配置步骤如下：</p><ul><li>进入AAA视图：系统视图命令下，输入命令：“aaa”</li><li>配置认证方案：AAA视图下，输入命令：<strong>authentication-scheme authentication-scheme-name</strong> 创建认证方案，并进入认证方案，缺省情况下设备中存在一个名为default的认证方案。</li><li>指定认证模式：认证方案视图下，输入命令：<strong>authentication-mode local</strong> 将认证模式指定为本地认证（缺省认证）</li><li>配置授权方案：AAA视图下，输入命令：<strong>authorization-scheme authorization-scheme-name</strong> 创建授权方案并进入授权方案，缺省情况下设备中存在一个名为default的授权方案，无法删除但可以更改</li><li>指定授权模式：授权方案视图下，输入命令：<strong>authorization-mode local</strong>将授权模式指定为本地授权（缺省授权）</li></ul><p>display authentication-scheme [authentication-scheme-name]：查看配置中的AAA认证方案<br>display authorization-scheme [authorization-scheme-name]：查看配置中的AAA授权方案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[R1]aaa</span><br><span class="line">[R1-aaa]authentication-scheme datacom-authentication</span><br><span class="line">Info: Create a new authentication scheme.</span><br><span class="line">[R1-aaa-authen-datacom-authentication]authentication-mode <span class="built_in">local</span></span><br><span class="line">[R1-aaa-authen-datacom-authentication]q</span><br><span class="line">[R1-aaa]authori</span><br><span class="line">[R1-aaa]authorization-scheme data-authorization</span><br><span class="line">Info: Create a new authorization scheme.</span><br><span class="line">[R1-aaa-author-data-authorization]authorization-mode <span class="built_in">local</span></span><br><span class="line"></span><br><span class="line">[R1]display authentication-scheme </span><br><span class="line">  -------------------------------------------------------------------</span><br><span class="line">  Authentication-scheme-name          Authentication-method</span><br><span class="line">  -------------------------------------------------------------------</span><br><span class="line">  default                             Local </span><br><span class="line">  datacom-authentication              Local </span><br><span class="line">  -------------------------------------------------------------------</span><br><span class="line">  Total of authentication scheme: 2</span><br><span class="line">[R1]display authorization-scheme </span><br><span class="line">  -------------------------------------------------------------------</span><br><span class="line">  Authorization-scheme-name          Authorization-method</span><br><span class="line">  -------------------------------------------------------------------</span><br><span class="line">  default                             Local </span><br><span class="line">  data-authorization                  Local </span><br><span class="line">  -------------------------------------------------------------------</span><br><span class="line"> Total of authortication-scheme: 2 </span><br></pre></td></tr></table></figure><h2 id="配置业务方案"><a href="#配置业务方案" class="headerlink" title="配置业务方案"></a>配置业务方案</h2><p>除了AAA方案，还可以设置一些与管理员用户相关的一些参数，比如管理员用户登录后的级别。每条命令都有其各自对应的级别，只有<strong>用户的级别大于等于命令行的优先级，用户才可以执行这条命令</strong>。<br>命令级别分别为：0、1、2、3级</p><ul><li>级别0（参观级）：能够使用ping等网络连通性诊断工具，从本设备向其他设备发出访问命令（比如Telnet），不允许对设备配置进行更改，也无法保存配置为你教案</li><li>级别1（监控级）：在级别0的基础上，允许用户使用部分display命令，不允许用户保存配置文件</li><li>级别2（配置级）：用户可以使用配置命令，比如路由配置等，也可以保存配置文件</li><li>级别3（管理级）：能够使用所有配置命令，还可以使用用于业务故障诊断的debugging命令</li></ul><p>配置步骤如下：</p><ul><li>配置业务方案：AAA视图下，输入命令：<strong>service-scheme service-scheme-name</strong>配置业务方案并进入业务方案视图，默认情况下没有业务方案。</li><li>指定用户级别：业务方案视图下，输入命令：<strong>admin-user privilege level level-num</strong>指定管理员用户登录后的用户级别，level取值范围为：0-15<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[R1]aaa</span><br><span class="line">[R1-aaa]service-scheme datacom-service</span><br><span class="line">Info: Create a new service scheme.</span><br><span class="line">[R1-aaa-service-datacom-service]admin-user privilege level 3</span><br></pre></td></tr></table></figure></li></ul><h2 id="创建自定义管理域"><a href="#创建自定义管理域" class="headerlink" title="创建自定义管理域"></a>创建自定义管理域</h2><p>基于域的配置时为了提供更精细化和差异化的AAA服务，华为数通设备中默认有两个域：</p><ul><li>default_admin：全局默认管理域，管理员用户会被划分到这个域中，比如通过Telnet，SSH，FTP，HTTP等方式登录到设备本地的用户</li><li>default：全局默认普通域，接入用户会被划分到这个域中，比如PPP用户，NAC用户等</li></ul><p>在未配置自定义域时，用户会被匹配到默认域中，并使用默认域中的各种设置。<br>配置步骤如下：</p><ul><li>创建域：AAA视图下，输入命令：<strong>domain domain-name</strong> 创建域并进入域视图</li><li>应用认证方案：域视图下，输入命令：<strong>authentication-scheme authentication-scheme-name</strong> 应用认证方案</li><li>应用授权方案：域视图下，输入命令：<strong>authorization-scheme authorization-scheme-name</strong> 应用授权方案</li><li>应用业务方案：域视图下，输入命令：<strong>service-scheme service-scheme-name</strong> 应用业务方案</li></ul><p><strong>display domain</strong>：查看配置中的域<br><strong>display domain name domain-name</strong>：查看某个域的详细信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[R1]aaa</span><br><span class="line">[R1-aaa]domain datacom</span><br><span class="line">Info: Success to create a new domain.</span><br><span class="line">[R1-aaa-domain-datacom]authentication-scheme datacom-authentication </span><br><span class="line">[R1-aaa-domain-datacom]authorization-scheme data-authorization </span><br><span class="line">[R1-aaa-domain-datacom]service-scheme datacom-service</span><br><span class="line"></span><br><span class="line">[R1]display domain </span><br><span class="line">  -------------------------------------------------------------------------</span><br><span class="line">  index    DomainName </span><br><span class="line">  -------------------------------------------------------------------------</span><br><span class="line">  0        default                                                         </span><br><span class="line">  1        default_admin                                                   </span><br><span class="line">  2        datacom                                                         </span><br><span class="line">  -------------------------------------------------------------------------</span><br><span class="line">  Total: 3</span><br><span class="line">[R1]display domain name datacom </span><br><span class="line"></span><br><span class="line">  Domain-name                     : datacom                         </span><br><span class="line">  Domain-state                    : Active</span><br><span class="line">  Authentication-scheme-name      : datacom-authentication</span><br><span class="line">  Accounting-scheme-name          : default</span><br><span class="line">  Authorization-scheme-name       : data-authorization</span><br><span class="line">  Service-scheme-name             : datacom-service</span><br><span class="line">  RADIUS-server-template          : -</span><br><span class="line">  HWTACACS-server-template        : -</span><br><span class="line">  User-group                      : -</span><br></pre></td></tr></table></figure><h2 id="创建本地用户"><a href="#创建本地用户" class="headerlink" title="创建本地用户"></a>创建本地用户</h2><p>创建本地用户时可以设置多种参数，比如用户级别，密码复杂度，空闲切断时间等。<br>配置本地用户命令如下：</p><ul><li>创建账号密码：AAA视图下，使用命令：<strong>local-user user-name password cipher password</strong> 创建用户，如果有域要求，用户名的完整格式为“用户名@域”。</li><li>指定接入类型：AAA视图下，使用命令：<strong>local-user user-name service-type telnet</strong> 指定用户接入类型为telnet，一个用户可以指定多种接入类型</li></ul><p><strong>display local-user</strong>：查看设备中的本地用户<br><strong>display local-user username user-name</strong>：查看本地用户的详细信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[R1]aaa</span><br><span class="line">[R1-aaa]local-user hcia-admin@datacom password cipher huaweipass</span><br><span class="line">Info: Add a new user.</span><br><span class="line">[R1-aaa]local-user hcia-admin@datacom service-type telnet</span><br><span class="line"></span><br><span class="line">[R1]display local-user </span><br><span class="line">  ----------------------------------------------------------------------------</span><br><span class="line">  User-name                      State  AuthMask  AdminLevel  </span><br><span class="line">  ----------------------------------------------------------------------------</span><br><span class="line">  admin                          A      H         -          </span><br><span class="line">  hcia-admin@datacom             A      T         -          </span><br><span class="line">  ----------------------------------------------------------------------------</span><br><span class="line">  Total 2 user(s)</span><br><span class="line">[R1]display local-user username hcia-admin@datacom</span><br><span class="line">  The contents of <span class="built_in">local</span> user(s):</span><br><span class="line">  Password          : ****************</span><br><span class="line">  State             : active    </span><br><span class="line">  Service-type-mask : T</span><br><span class="line">  Privilege level   : -</span><br><span class="line">  Ftp-directory     : - </span><br><span class="line">  Access-<span class="built_in">limit</span>      : -        </span><br><span class="line">  Accessed-num      : 0   </span><br><span class="line">  Idle-<span class="built_in">timeout</span>      : -</span><br><span class="line">  User-group        : -</span><br></pre></td></tr></table></figure><p>AuthMask指的是本地用户的接入类型：</p><ul><li>T：Telnet用户</li><li>M：终端用户，通常指Console用户</li><li>S：SSH用户</li><li>F：FTP用户</li><li>W：Web用户</li><li>X：802.1x用户</li><li>A：用户可以使用所有的接入类型</li><li>H：HTTP用户</li><li>组合类型：比如TH，表示可以使用Telnet和HTTP方式接入</li></ul><h2 id="配置Telnet功能"><a href="#配置Telnet功能" class="headerlink" title="配置Telnet功能"></a>配置Telnet功能</h2><p>启用路由器的Telnet功能，并且将Telnet访问的用户设置成本地AAA认证和授权。<br>通过VTY登录的用户进行认证，认证有三种方式：</p><ul><li>AAA认证：用户登录时输入账号密码，设备根据本地配置的AAA方案对用户进行认证</li><li>密码认证：用户在登录时输入认证密码，设备根据本地配置的认证密码对用户进行认证</li><li>不认证：不需要输入任何认证信息，直接登录设备</li></ul><p>配置步骤如下：</p><ul><li>启用Telnet功能：系统视图命令<br><strong>telnet server enable</strong><br><strong>display telnet server status</strong>：查看telnet服务器状态<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[R1]telnet server <span class="built_in">enable</span></span><br><span class="line"> Error: TELNET server has been enabled</span><br><span class="line">[R1]display telnet server status</span><br><span class="line"> TELNET IPV4 server                      :Enable</span><br><span class="line"> TELNET IPV6 server                      :Enable</span><br><span class="line"> TELNET server port                      :23</span><br></pre></td></tr></table></figure></li><li>配置AAA认证：<br>user-interface vty first-ui-number last-ui-number：进入VTY用户界面视图<br>authentication-mode aaa：VTY视图命令，指定VTY用户的认证模式为AAA认证<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[R1]user-interface vty 0 4</span><br><span class="line">[R1-ui-vty0-4]authentication-mode aaa</span><br></pre></td></tr></table></figure></li></ul><h2 id="验证配置"><a href="#验证配置" class="headerlink" title="验证配置"></a>验证配置</h2><p>在AR2上使用telnet命令登录AR1<br><strong>telnet IP</strong>：通过telnet登录<br><strong>display users</strong>：查看登录设备的用户<br><strong>display access-user</strong>：查看设备上已存在的用户连接<br><strong>display access-user user-id user-id-num</strong>：查看该用户的详细信息，用户名，所属域，IP地址，AAA认证类型和AAA方案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;R2&gt;telnet 10.10.12.1</span><br><span class="line">  Press CTRL_] to quit telnet mode</span><br><span class="line">  Trying 10.10.12.1 ...</span><br><span class="line">  Connected to 10.10.12.1 ...</span><br><span class="line"></span><br><span class="line">Login authentication</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Username:hcia-admin@datacom</span><br><span class="line">Password:</span><br><span class="line">&lt;R1&gt;</span><br><span class="line">&lt;R1&gt;display <span class="built_in">users</span></span><br><span class="line">  User-Intf    Delay    Type   Network Address     AuthenStatus    AuthorcmdFlag</span><br><span class="line">  0   CON 0   00:02:09                                   pass                   </span><br><span class="line">  Username : Unspecified</span><br><span class="line"></span><br><span class="line">+ 129 VTY 0   00:00:00  TEL    10.10.12.2                pass                   </span><br><span class="line">  Username : hcia-admin@datacom  </span><br><span class="line"></span><br><span class="line">&lt;R1&gt;display access-user</span><br><span class="line"> ------------------------------------------------------------------------------</span><br><span class="line"> UserID Username                       IP address                   MAC  </span><br><span class="line"> ------------------------------------------------------------------------------</span><br><span class="line"> 1      hcia-admin@datacom             2.12.10.10                -              </span><br><span class="line"></span><br><span class="line"> ------------------------------------------------------------------------------</span><br><span class="line"> Total 1,1 printed</span><br><span class="line">&lt;R1&gt;display access-user user-id 1</span><br><span class="line">Basic:</span><br><span class="line">  User <span class="built_in">id</span>                         : 1</span><br><span class="line">  User name                       : hcia-admin@datacom</span><br><span class="line">  Domain-name                     : datacom                         </span><br><span class="line">  User MAC                        : -</span><br><span class="line">  User IP address                 : 2.12.10.10</span><br><span class="line">  User access time                : 2024/02/15 16:46:35</span><br><span class="line">  User accounting session ID      : R1002552550000000000e4ada000001</span><br><span class="line">  User access <span class="built_in">type</span>                : Telnet</span><br><span class="line">  Idle Timeout                    : 4294967236(s)</span><br><span class="line"></span><br><span class="line">AAA:</span><br><span class="line">  User authentication <span class="built_in">type</span>        : Administrator authentication</span><br><span class="line">  Current authentication method   : Local</span><br><span class="line">  Current authorization method    : Local</span><br><span class="line">  Current accounting method       : None</span><br></pre></td></tr></table></figure><p><strong>free user-interface ui-type ui-number</strong>：断开某个用户，先用display users确认用户的登录方式<br><strong>display aaa statistics offline-reason</strong>：查看用户下线的原因统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;R1&gt;dis <span class="built_in">users</span></span><br><span class="line">  User-Intf    Delay    Type   Network Address     AuthenStatus    AuthorcmdFlag</span><br><span class="line">+ 0   CON 0   00:00:00                                   pass                   </span><br><span class="line">  Username : Unspecified</span><br><span class="line"></span><br><span class="line">  129 VTY 0   00:00:21  TEL    10.10.12.2                pass                   </span><br><span class="line">  Username : hcia-admin@datacom  </span><br><span class="line"></span><br><span class="line">&lt;R1&gt;free user-interface vty 0</span><br><span class="line">Warning: User interface vty0 will be freed. Continue? [Y/N]:y</span><br><span class="line"> [OK]</span><br><span class="line">&lt;R1&gt;</span><br><span class="line">Feb 15 2024 16:54:18-08:00 R1 %%01LINE/3/CLR_ONELINE(l)[0]:The user chose Y when</span><br><span class="line"> deciding whether to disconnect the specified user interface. </span><br><span class="line"></span><br><span class="line">&lt;R1&gt;display aaa statistics offline-reason </span><br><span class="line">  19  user request to offline       :2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> AAA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> ACL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-10-NAT地址转换</title>
      <link href="/huawei_nat/"/>
      <url>/huawei_nat/</url>
      
        <content type="html"><![CDATA[<p>NAT就是通过将一个IP地址转换为另一个IP地址。NAT不仅可以节省IP地址空间，而且能够提高网络的安全性（外部网络的主机无法直接与内部主机进行通信）。为了让使用私网IP地址的主机能够访问互联网，需要将私有IP地址转换为公有IP地址，这类设备通常为网络的出口设备，如路由器或防火墙。</p><ul><li>公有IP地址：由专门的机构进行管理和分配，可以直接再互联网上进行通信，需要付费使用</li><li>私有IP地址：任何人可以随意使用，无法直接在互联网进行通信，无须付费</li></ul><table><thead><tr><th align="left">类别</th><th align="left">IP地址段</th><th align="left">IP地址数量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">A类</td><td align="left">10.0.0.0~10.255.255.255</td><td align="left">16777216</td><td align="left">单个A类网络</td></tr><tr><td align="left">B类</td><td align="left">172.16.0.0~172.31.255.255</td><td align="left">1048576</td><td align="left">16个连续的B类网络</td></tr><tr><td align="left">C类</td><td align="left">192.168.0.0~192.168.255.255</td><td align="left">65536</td><td align="left">256个连续的C类网络</td></tr></tbody></table><h1 id="NAT类型"><a href="#NAT类型" class="headerlink" title="NAT类型"></a>NAT类型</h1><p>NAT共有4中类型：</p><ul><li>静态NAT：将一个私有IP地址映射为一个固定公有IP地址；需要管理员通过使用命令来绑定私有IP地址与公有IP地址</li><li>动态NAT：将一个私有IP地址映射为一个非固定公有IP地址；将<strong>私有IP地址与一个地址池中的公有IP地址进行动态关联，</strong>管理员需要在地址池中指定可以使用的公有IP地址范围即可，无须静态配置一对一的映射。<br>公有地址池中的IP数量应不少于需要访问互联网的内部主机数量，否则当公有地址池中的IP地址耗尽后，其他内部主机将无法访问互联网</li><li>NAPT和Easy IP：Network Address Port Translation 将多个私有IP地址映射为一个或者多个公有IP地址，二者工作原理相同。在Easy IP的配置中，NAT设备使用本地连接互联网的接口IP地址作为公有IP地址，为内部主机提供互联网连接；NAPT配置中，可以像配置动态NAT一样设置地址池，地址池中的公有IP数量可以远远小于内部需要访问互联网的主机数量</li><li>NAT Server：与静态NAT相似，将一个私有IP地址映射为一个固定公有IP地址，NAT Server映射还添加了端口号信息，使内部主机能够对外提供服务</li></ul><h2 id="静态NAT"><a href="#静态NAT" class="headerlink" title="静态NAT"></a>静态NAT</h2><p>静态NAT的特点是每个私有IP地址都有一个与之绑定的公有IP地址。在静态NAT中，NAT设备保存着一个NAT映射表，记录着私有IP和公有IP的映射关系，并且映射表会与NAT设备的某个端口相关联。</p><ul><li>正向查找：NAT设备转发数据包时，设备根据数据包的源IP地址查找NAT映射表中的私有IP地址，并将数据包中的源IP地址转换为对应条目中映射的公有IP地址 （内网发向外网）</li><li>反向查找：NAT设备接收数据包时，设备根据数据包中的目的IP地址查找NAT映射表中的公有IP地址，并将数据包中的目的IP地址转换为对应条目中映射的私网IP地址（外网发向内网）</li></ul><p>配置方法有两种，任选一种即可：</p><ul><li>接口视图下配置映射关系<br><strong>nat static global {global-address} inside {host-address}</strong> ：global配置公网地址，inside配置私网地址</li><li>系统视图下配置映射关系，并在接口视图下启用静态NAT<br><strong>系统视图下配置：nat static global {global-address} inside {host-address}</strong><br><strong>接口视图下启用：nat static enable</strong></li></ul><h2 id="动态NAT"><a href="#动态NAT" class="headerlink" title="动态NAT"></a>动态NAT</h2><p>在动态NAT中，NAT设备不仅能对地址池中的公有IP地址的使用状态进行标记，还需要知道公有IP地址的分配信息。</p><ul><li>正向查找：NAT设备转发数据包时，设备根据数据包的源IP地址执行NAT转换，从NAT地址池中选择一个未使用的公有IP地址，在NAT映射表中添加一个条目，并将数据包的源IP地址转换为公有IP地址</li><li>反向查找：NAT设备接收数据包时，设备根据数据包的目的IP地址对NAT映射表进行反向查找，并根据查找结果将数据包的目的IP地址转换为私有的IP地址</li></ul><p>配置步骤：</p><ul><li>指定公有IP地址：使用NAT地址池指定公有IP地址<br><strong>系统视图下配置：nat address-group group-index start-address end-address</strong><br>地址池编号，IP地址范围的起始地址和结束地址</li><li>指定私有IP地址：使用ACL指定需要被转换的私有IP地址。因为只需要指定源IP地址，所以使用基本ACL即可。当ACL用于NAT时，需要<strong>配置permit行为，并且匹配源IP地址</strong>。所有匹配ACL的数据包需要被转换，未匹配ACL规则的数据包按照原始方式进行处理<br><strong>系统视图下配置：acl number</strong> 基本ACL编号：2000-2999，高级ACL编号：3000-3999<br><strong>ACL视图下配置：rule permit source-address source-wildcard</strong> 配置被转换的私有IP地址范围<br><strong>接口视图下配置：nat outbound acl-number address-group group-index [no-pat]</strong> 命令中acl-number指明了私有IP地址，address-group指明了公有IP地址。<strong>no pat 指不进行端口转换，只针对IP转换</strong></li></ul><h2 id="NAPT和Easy-IP"><a href="#NAPT和Easy-IP" class="headerlink" title="NAPT和Easy IP"></a>NAPT和Easy IP</h2><p>在使用NAPT为内部主机提供互联网连接时，可以根据公有IP地址的情况来选择部署方式</p><ul><li>NAPT：当配置了NAT设备连接ISP（Internet Service Provider 互联网服务提供商）的接口IP地址和其他应用后，还有空闲的IP地址，可以选择根据地址池来指定公有IP地址的方式来为内部主机提供可用的公用IP地址</li><li>Easy IP：当配置了NAT设备连接ISP（Internet Service Provider 互联网服务提供商）的接口IP地址和其他应用后，已经没有公有IP地址，可以使用Easy IP的方式，复用NAT设备连接ISP的出口IP地址为内部主机提供互联网连接</li></ul><p>NAPT从地址池中选择公有IP地址进行转换时，同时对端口号进行转换，实现一对多转换，有效提升IP地址的利用率。<br><strong>配置方法和动态NAT相同，不包含no-pat，即启用端口转换</strong><br>Easy IP的工作原理和NAPT相同，结合IP地址和端口号进行转换，Easy IP无须配置地址池，只需要在ACL中指定需要被转换的私网IP地址，并在接口上进行关联即可<br><strong>系统视图下配置：acl number</strong> 基本ACL编号：2000-2999，高级ACL编号：3000-3999<br>  <strong>ACL视图下配置：rule permit source-address source-wildcard</strong> 配置被转换的私有IP地址范围<br>  <strong>接口视图下配置：nat outbound acl-number</strong></p><h2 id="NAT-Server"><a href="#NAT-Server" class="headerlink" title="NAT Server"></a>NAT Server</h2><p>NAT Server既可以让内部服务器能够向外提供服务，也可以限制外部主机可访问端口来保障安全性。NAT Server在静态NAT的基础上添加端口号，将<strong>私有IP地址+端口号和公有IP地址+端口号</strong>映射在一起。<br>配置方法：<br><strong>接口视图下启用：nat server protocol {tcp|udp} global global-address global-port inside host-address host-port</strong> 通过tcp或udp来确定传输协议，在global部分设置公网IP+端口，在inside部分设置私网IP+端口</p><h1 id="NAT拓扑实验"><a href="#NAT拓扑实验" class="headerlink" title="NAT拓扑实验"></a>NAT拓扑实验</h1><p>模拟情况：AR1是企业网关路由器，G0/0/1连接内网服务器，g0/0/0连接外网，AR2为外网，环路IP地址（8.8.8.8/32）假定为互联网<br><img src="https://qiufuqi.github.io/img/hexo/20240214204310.png"><br>基础配置：无须在AR2中配置任何路由信息，一般情况下ISP无须了解客户内网IP规划。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]ip add 102.10.200.5 29</span><br><span class="line">[R1-GigabitEthernet0/0/0]quit</span><br><span class="line">[R1]int g0/0/1</span><br><span class="line">[R1-GigabitEthernet0/0/1]ip add 192.168.0.1 24</span><br><span class="line">[R1-GigabitEthernet0/0/1]quit</span><br><span class="line">[R1]ip route-static 0.0.0.0 0.0.0.0 102.10.200.6</span><br><span class="line"></span><br><span class="line">[R2]int g0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]ip add 102.10.200.6 29</span><br><span class="line">[R2-GigabitEthernet0/0/0]quit</span><br><span class="line">[R2]int LoopBack 0</span><br><span class="line">[R2-LoopBack0]ip add 8.8.8.8 32</span><br></pre></td></tr></table></figure><h2 id="静态NAT配置"><a href="#静态NAT配置" class="headerlink" title="静态NAT配置"></a>静态NAT配置</h2><p>配置静态NAT时，需要保证global-address和host-address是唯一没有重复的，要避免使用设备接口地址。102.10.200.5和102.10.200.6用于AR1和AR2的直连链路，因此内网可以使用102.10.200.1-102.10.200.4之间4个IP地址访问Internet（8.8.8.8）<br>静态NAT配置有两个缺点：1.无法实现公有IP的复用，一个公有IP地址只能支持一台内网PC访问Internet；2.将内部主机暴露在公网中<br><strong>nat static global global-address inside host-address</strong><br><strong>display nat static</strong> 查看静态NAT配置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在AR1的g0/0/0接口上为PC1配置静态NAT，此时只有PC1能够访问外网（8.8.8.8）</span></span><br><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]nat static global 102.10.200.1 inside 192.168.0.10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者系统视图下配置转换，接口视图下启用</span></span><br><span class="line">[R1]nat static global 102.10.200.1 inside 192.168.0.10</span><br><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]nat static <span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同理将PC的内网地址也做映射，即可实验两台PC都能够访问互联网</span></span><br><span class="line">nat static global 102.10.200.2 inside 192.168.0.20</span><br><span class="line"></span><br><span class="line">[R1]display nat static</span><br><span class="line">  Static Nat Information:</span><br><span class="line">  Global Nat Static </span><br><span class="line">    Global IP/Port     : 102.10.200.2/---- </span><br><span class="line">    Inside IP/Port     : 192.168.0.20/----</span><br><span class="line">    Protocol : ----     </span><br><span class="line">    VPN instance-name  : ----                            </span><br><span class="line">    Acl number         : ----</span><br><span class="line">    Netmask  : 255.255.255.255 </span><br><span class="line">    Description : ----</span><br><span class="line"></span><br><span class="line">  Global Nat Static </span><br><span class="line">    Global IP/Port     : 102.10.200.1/---- </span><br><span class="line">    Inside IP/Port     : 192.168.0.10/----</span><br><span class="line">    Protocol : ----     </span><br><span class="line">    VPN instance-name  : ----                            </span><br><span class="line">    Acl number         : ----</span><br><span class="line">    Netmask  : 255.255.255.255 </span><br><span class="line">    Description : ----</span><br><span class="line"></span><br><span class="line">  Total :    2</span><br></pre></td></tr></table></figure><h2 id="动态NAPT配置"><a href="#动态NAPT配置" class="headerlink" title="动态NAPT配置"></a>动态NAPT配置</h2><p>使用NAPT（Network Access Port Translation 网络地址端口转换）来实现多对一的地址转换。NAPT使用“IP地址+端口号”的形式实现转换，使多个内网主机能够共用一个公有IP访问Internet。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先清理静态NAT转换</span></span><br><span class="line">[R1]undo nat static global 102.10.200.2 inside 192.168.0.20 netmask 255.255.255.255</span><br><span class="line">[R1]undo nat static global 102.10.200.1 inside 192.168.0.10 netmask 255.255.255.255</span><br><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]undo nat static <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>配置步骤按照以下顺序进行：</p><ul><li>配置ACL匹配私有IP地址：根据需要使用基本ACL（2000-2999）或高级ACL（3000-3999），当ACL的规则为permit时，表示设备需要对匹配的源IP地址执行转换操作，未匹配的不执行任何操作</li><li>配置动态NAT使用地址池：转换后的公有IP地址范围<br><strong>nat address-group group-index start-address end-address</strong></li><li>进入接口NAT视图配置NAT：将ACL和动态IP地址池进行关联，其中ACL定义了需要转换的内网IP地址，动态IP地址池定义了转换后的公有IP地址<br><strong>nat outbound acl-number address-group group-index [no pat]</strong><br><strong>动态NAT转换：no pat指不进行端口转换，只针对IP转换</strong></li></ul><p><strong>display nat address-group</strong> 查看设备NAT地址池信息<br><strong>display nat outbound</strong> 查看NAT转换表<br><strong>display nat session all</strong> 查看NAT转发表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[R1]acl 2000</span><br><span class="line">[R1-acl-basic-2000]rule permit <span class="built_in">source</span> 192.168.0.0 0.0.0.255</span><br><span class="line">[R1-acl-basic-2000]quit</span><br><span class="line">[R1]nat address-group 1 102.10.200.1 102.10.200.4</span><br><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]nat outbound 2000 address-group 1</span><br><span class="line"></span><br><span class="line">[R1]display nat address-group </span><br><span class="line"> NAT Address-Group Information:</span><br><span class="line"> --------------------------------------</span><br><span class="line"> Index   Start-address      End-address</span><br><span class="line"> --------------------------------------</span><br><span class="line"> 1        102.10.200.1     102.10.200.4</span><br><span class="line"> --------------------------------------</span><br><span class="line">  Total : 1</span><br><span class="line">[R1]display nat outbound </span><br><span class="line"> NAT Outbound Information:</span><br><span class="line"> --------------------------------------------------------------------------</span><br><span class="line"> Interface                     Acl     Address-group/IP/Interface      Type</span><br><span class="line"> --------------------------------------------------------------------------</span><br><span class="line"> GigabitEthernet0/0/0         2000                              1       pat</span><br><span class="line"> --------------------------------------------------------------------------</span><br><span class="line">  Total : 1</span><br><span class="line"></span><br><span class="line">[R1]display nat session all</span><br><span class="line">  NAT Session Table Information:</span><br><span class="line"></span><br><span class="line">     Protocol          : ICMP(1)</span><br><span class="line">     SrcAddr   Vpn     : 192.168.0.20                                   </span><br><span class="line">     DestAddr  Vpn     : 8.8.8.8                                        </span><br><span class="line">     Type Code IcmpId  : 0   8   45822</span><br><span class="line">     NAT-Info</span><br><span class="line">       New SrcAddr     : 102.10.200.4   </span><br><span class="line">       New DestAddr    : ----</span><br><span class="line">       New IcmpId      : ----</span><br><span class="line"></span><br><span class="line">     Protocol          : ICMP(1)</span><br><span class="line">     SrcAddr   Vpn     : 192.168.0.10                                   </span><br><span class="line">     DestAddr  Vpn     : 8.8.8.8                                        </span><br><span class="line">     Type Code IcmpId  : 0   8   45822</span><br><span class="line">     NAT-Info</span><br><span class="line">       New SrcAddr     : 102.10.200.3   </span><br><span class="line">       New DestAddr    : ----</span><br><span class="line">       New IcmpId      : ----</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Easy-IP配置"><a href="#Easy-IP配置" class="headerlink" title="Easy IP配置"></a>Easy IP配置</h2><p>使用一个公有的IP地址来连接ISP，以支持内网主机方位Internet。配置和动态NAT比较类似，<strong>无须配置公有IP地址池</strong>，使用出接口的IP地址作为转换后的IP地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除多余配置</span></span><br><span class="line">[R1]undo acl 2000</span><br><span class="line">[R1]undo nat address-group 1</span><br><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]undo nat outbound 2000 address-group 1</span><br></pre></td></tr></table></figure><p>配置步骤按照以下顺序进行：</p><ul><li>配置ACL匹配私有IP地址：根据需要使用基本ACL（2000-2999）或高级ACL（3000-3999），当ACL的规则为permit时，表示设备需要对匹配的源IP地址执行转换操作，未匹配的不执行任何操作</li><li>进入接口NAT视图配置NAT：通过ACL来指定哪些私有IP地址需要转换<br><strong>nat outbound acl-number</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[R1]acl 2000</span><br><span class="line">[R1-acl-basic-2000]rule permit <span class="built_in">source</span> 192.168.0.0 0.0.0.255</span><br><span class="line">[R1]int g0/0/0</span><br><span class="line">[R1-GigabitEthernet0/0/0]nat outbound 2000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前g0/0/0的公有IP地址为：102.10.200.5，类型展示为easyip</span></span><br><span class="line">[R1]display nat outbound </span><br><span class="line"> NAT Outbound Information:</span><br><span class="line"> --------------------------------------------------------------------------</span><br><span class="line"> Interface                     Acl     Address-group/IP/Interface      Type</span><br><span class="line"> --------------------------------------------------------------------------</span><br><span class="line"> GigabitEthernet0/0/0         2000                   102.10.200.5    easyip  </span><br><span class="line"> --------------------------------------------------------------------------</span><br><span class="line">  Total : 1</span><br></pre></td></tr></table></figure><h2 id="NAT-Server配置"><a href="#NAT-Server配置" class="headerlink" title="NAT Server配置"></a>NAT Server配置</h2><p>假定内网服务器需要提供对外http服务，配置和静态NAT相似，增加了端口号。<br>在接口视图模式下配置命令如下：<br><strong>nat server protocol {tcp|udp} global glo-address glo-port inside host-address host-port</strong><br>在IP地址映射的情况下增加了端口映射。<br><strong>display nat server</strong>：查看生成的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参考实例  接口视图下  www代表80端口</span></span><br><span class="line">nat server protocol tcp global 102.10.200.4 www inside 192.168.0.10 www</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> NAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> NAT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-8-ACL访问控制</title>
      <link href="/huawei_acl/"/>
      <url>/huawei_acl/</url>
      
        <content type="html"><![CDATA[<p>ACL是通过对网络的访问进行控制，通过一些参数匹配特定的流量，并且指明需要对流量进行的操作。</p><h1 id="ACL组成"><a href="#ACL组成" class="headerlink" title="ACL组成"></a>ACL组成</h1><p>ACl由一组具有特定顺序的语句组成，设备在查询ACL时，会根据编号从小到大按顺序查找匹配项，一旦发现匹配项就会立即执行与该匹配项关联的动作，停止查找并退出ACL匹配逻辑，每条语句由如下信息构成</p><ul><li>匹配项：需要匹配的流量。</li><li>动作：允许或拒绝。</li><li>编号：决定该语句在ACL中的位置。编号范围：0-4294967294。</li></ul><p><strong>每个ACL末尾还有一条隐含语句，这条隐含语句可以匹配任意的数据包</strong>。</p><h1 id="ACL分类和标识"><a href="#ACL分类和标识" class="headerlink" title="ACL分类和标识"></a>ACL分类和标识</h1><p>ACL可以从两个角度进行分类：规则定义方式和标识方法。</p><h2 id="规则定义方式"><a href="#规则定义方式" class="headerlink" title="规则定义方式"></a>规则定义方式</h2><p>华为设备会根据网络管理员设置的ACL编号判断ACL的类型</p><ul><li>基本ACl：2000-2999，基于数据包的源IP地址对流量进行匹配</li><li>高级ACL：3000-3999，基于数据包的源和目的IP地址，IP协议类型，ICMP类型，TCP/UDP源和目的端口号等第三层和第四层信息对流量进行匹配</li><li>二层ACL：4000-4999，基于数据帧的源和目的MAC地址，二层协议类型等第二层信息对流量进行匹配</li><li>用户自定义ACL：5000-5999，基于报文头，便宜位置，字符串掩码等对流量进行匹配</li></ul><h2 id="标识方法"><a href="#标识方法" class="headerlink" title="标识方法"></a>标识方法</h2><ul><li>数字型ACL：</li><li>命名型ACL：管理员可以在命名的同时指定该ACl的编号，设备默认该ACL为高级ACL，从3999开始自动分配一个空闲编号</li></ul><h1 id="ACL匹配机制"><a href="#ACL匹配机制" class="headerlink" title="ACL匹配机制"></a>ACL匹配机制</h1><p>按照规则的编号顺序从小到大进行匹配，一旦发现匹配项，立即按照该规则定义的动作进行操作，并终止匹配，退出ACl匹配逻辑。<strong>ACL匹配原则不是最长匹配，而是顺序匹配</strong>。<strong>将更为精确的匹配规则放到较为模糊的匹配规则前。</strong></p><ul><li>规则编号按照从小到大的顺序进行匹配</li><li>一旦匹配成功，立即执行该条规则所定义的动作，终止匹配并退出ACL匹配逻辑</li><li>编写ACL规则时，需要将更精确的匹配规则放在模糊规则前面<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 例如规则15永远不会获得匹配，所以实际应用中应该将更为精确的匹配规则放在较为模糊的匹配规则之前</span></span><br><span class="line">rule 10 deny <span class="built_in">source</span> 10.0.0.0 0.0.0.255  <span class="comment"># 规则10：拒绝源IP地址----10.0.0.0/24</span></span><br><span class="line">rule 15 permit <span class="built_in">source</span> 10.0.0.1 0.0.0.0  <span class="comment"># 规则15：放行源IP地址----10.0.0.1/24</span></span><br><span class="line">rule 30 permit <span class="built_in">source</span> any               <span class="comment"># 规则30：放行源IP地址----任意</span></span><br></pre></td></tr></table></figure>ACL匹配机制有3中匹配结果：</li><li>拒绝：deny</li><li>允许：permit</li><li>未匹配：路由器会如常处理所有数据包<ul><li>引用的ACL不存在：在路由器上引用ACL，却发现未在路由器配置中创建ACL</li><li>ACL中不存在规则：在路由器上引用ACL，但ACL中却没有任何自定义规则</li><li>ACL中无匹配规则：在路由器上引用ACL，却在ACL中没有匹配上任何规则</li></ul></li></ul><h1 id="ACL方向"><a href="#ACL方向" class="headerlink" title="ACL方向"></a>ACL方向</h1><p>一个路由器的每个接口可以同时设置一个入方向ACL，一个出方向ACL，但一个方向上只能设置一个ACL。</p><h1 id="基本ACL配置"><a href="#基本ACL配置" class="headerlink" title="基本ACL配置"></a>基本ACL配置</h1><p><strong>基本ACl需要根据源IP地址信息进行匹配</strong>，编号范围2000-2999。<strong>尽可能靠近目的地的位置应用基本ACL</strong></p><h2 id="创建基本ACL："><a href="#创建基本ACL：" class="headerlink" title="创建基本ACL："></a>创建基本ACL：</h2><ul><li>数字型基本ACL：在系统视图中输入命令 acl 2000，即在系统中成功创建了ACL2000，同时进入ACL2000视图<br>  <strong>acl {number} acl-number [match-order {auto|config}]</strong><ul><li>number：可选关键词，创建数字型基本ACL时，可省略次关键词，直接输入ACL编号</li><li>acl-number：ACL的编号，编号范围2000-2999</li><li>match-order {auto|config}：指定ACL中规则的匹配顺序，<strong>默认是config</strong>。可选参数<ul><li>auto：自动排序，根据深度优先匹配原则，将ACL中配置的多个规则按照精确度从高到底进行排序，并以此顺序对数据包进行匹配。深度优先匹配原则如下：<ul><li>比较源IP地址范围，源IP地址范围小的规则优先。IP地址通配符掩码中0的位数多的，IP地址范围小</li><li>源IP地址相同条件下，规则编号小的优先</li></ul></li><li>config：配置顺序，按照管理员指定的规则编号从小到大进行排序</li></ul></li></ul></li><li>命名型基本ACL：<br>  <strong>acl name acl-name {basic | acl-number } [match-order {auto|config}]</strong><ul><li>name：必选关键词，创建命名型ACL是必须使用name关键词</li><li>acl-name：必选参数，设置命名型基本ACL的名称</li><li>basic|acl-number：必选参数，任选其一进行配置<ul><li>basic：按照从大到小的顺序选择可用的基本ACL编号进行自动分配，即从2999开始</li><li>acl-number：系统会根据编号所属的范围来判断ACL的类型</li></ul></li><li>match-order {auto|config}：与数字型基本ACL对应字段相同</li></ul></li></ul><h2 id="配置基本ACL规则："><a href="#配置基本ACL规则：" class="headerlink" title="配置基本ACL规则："></a>配置基本ACL规则：</h2><p>  基本ACL中可以配置的参数为：源IP地址，是否分段，执行过滤时间<br>  <strong>rule [rule-id] {deny|permit} [source {source-address source-vildcard | any} | time-range time-name]</strong></p><ul><li>rule [rule-id]：设置规则编号，规则编号是一个可选参数，缺省情况下根据默认步长自动进行编号设置，<strong>默认步长是5</strong>。选取第1个编号为步长值5</li><li>deny|permit：设置规则动作，deny表示拒绝，permit表示允许</li><li>source {source-address source-vildcard | any}：设置匹配项。必选项。使用源IP地址+通配符掩码方式指定一台主机或者多台主机，any指定任意主机相当于IP地址：0.0.0.0 通配符掩码：255.255.255.255。通配符掩码0表示匹配，1表示不匹配，所以255.255.255.255表示所有位都无须匹配，任意都行。</li><li>time-range time-name：可选参数，设置ACL规则生效的时间段。time-name是系统中配置的时间段名称。</li></ul><h2 id="应用基本ACL"><a href="#应用基本ACL" class="headerlink" title="应用基本ACL"></a>应用基本ACL</h2><p>  在流量过滤功能中应用基本ACL需要进入接口视图。<br>  <strong>traffic-filter {inbound|outbound} acl {bas-acl| adv-acl| name acl-name}</strong></p><ul><li>inbound|outbound：指明基本ACL的应用方向，inbound表示这是一个入方向的基本ACL，过滤从接口接口收到的流量；outbound表示这是一个出方向的基本ACL，过滤从接口转发的流量</li><li>acl {bas-acl| adv-acl| name acl-name}：将具体的ACL应用在接口上</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动设置了步长</span></span><br><span class="line">[Huawei]acl 2000</span><br><span class="line">[Huawei-acl-basic-2000]rule deny <span class="built_in">source</span> 192.168.1.0 0.0.0.255</span><br><span class="line">[Huawei-acl-basic-2000]rule permit <span class="built_in">source</span> any</span><br><span class="line">[Huawei-acl-basic-2000]q</span><br><span class="line">[Huawei]int g0/0/1</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]traffic-filter outbound acl 2000</span><br><span class="line"></span><br><span class="line">[Huawei]dis acl 2000</span><br><span class="line">Basic ACL 2000, 2 rules</span><br><span class="line">Acl<span class="string">&#x27;s step is 5</span></span><br><span class="line"><span class="string"> rule 5 deny source 192.168.1.0 0.0.0.255 </span></span><br><span class="line"><span class="string"> rule 10 permit </span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h1 id="高级ACL配置"><a href="#高级ACL配置" class="headerlink" title="高级ACL配置"></a>高级ACL配置</h1><p>基本ACL只能根据数据包的源IP地址进行过滤，存在局限性，所以需要用到高级ACL配置。编号范围3000-3999</p><h2 id="创建高级ACL"><a href="#创建高级ACL" class="headerlink" title="创建高级ACL"></a>创建高级ACL</h2><p>创建高级ACL可分为创建数字型的高级ACL和命名型的高级ACL</p><ul><li>数字型高级ACL：在系统视图中输入命令 acl 3000，即在系统中成功创建了ACL3000，同时进入ACL3000视图<br><strong>acl [number] acl-number [match-order {auto | config}]</strong><ul><li>number：可选关键词，创建数字型高级ACL时，可省略此关键词</li><li>acl-number：ACL的编号，高级ACL的编号范围3000-3999</li><li>match-order {auto | config}：指定ACL中的匹配规则，默认匹配顺序是config<ul><li>auto：自动排序。根据深度优先的匹配原则，按照精确度从高到底进行排序。深度优先的匹配原则如下：<ul><li>比较协议范围，指定IP承载的协议规则优先</li><li>协议范围相同，比较源IP地址范围，源IP地址范围小的规则优先，源IP地址通配符掩码中0的位数多的，IP地址范围小（<strong>0表示该位需要匹配，1表示不需要匹配</strong>）</li><li>协议范围相同，源IP地址范围相同，比较目的IP地址范围，目的IP地址范围小的优先，目的IP地址通配符掩码中0的位数多的，IP地址范围小（<strong>0表示该位需要匹配，1表示不需要匹配</strong>）</li><li>协议范围相同，源IP地址范围相同，目的IP地址范围相同，比较第4层端口号（TCP/UDP）范围，端口号范围晓得规则优先</li><li>上述条件都相同的话，规则编号小的优先</li></ul></li><li>config：按照管理员指定的规则编号从小到大进行排序，没有顺序按照步长。</li></ul></li></ul></li><li>命名型高级ACL：<br><strong>acl name acl-name { advance |acl-number} [match-order {auto|config}]</strong><ul><li>name：关键词，创建命名型高级ACL时必须使用name关键词</li><li>acl-name：必选参数，命名型高级ACL名称</li><li>advance |acl-number：必选参数，任选其一进行配置<ul><li>advance：系统按照从大到小的顺序选择可用的高级ACL编号进行自动分配，即从3999开始分配</li><li>acl-number：系统会根据编号所属范围来判断ACL的类型</li></ul></li><li>match-order {auto|config}：与数字型的高级ACL对应字段相同</li></ul></li></ul><h2 id="配置高级ACL规则"><a href="#配置高级ACL规则" class="headerlink" title="配置高级ACL规则"></a>配置高级ACL规则</h2><h3 id="IP协议规则"><a href="#IP协议规则" class="headerlink" title="IP协议规则"></a>IP协议规则</h3><p>根据IP承载的协议类型，配置高级ACL规则<br><strong>rule [rule-id] {deny|permit} ip [destination {des-address des-wildcard | any} | source {sou-address sou-wildcard | any} |time-range time-name]</strong></p><ul><li>rule [rule-id]：设置规则编号，可选参数</li><li>deny|permit：规则动作</li><li>ip：设置匹配项为任意IP协议</li><li>destination {des-address des-wildcard | any}：可选项，根据目的IP地址进行匹配，any相当于任意主机</li><li>source {sou-address sou-wildcard | any}：可选项，根据源IP地址进行匹配，any相当于任意主机</li><li>time-range time-name：设置规则生效时间<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许源10.10.10.0/24的流量方位192.168.10.0/24</span></span><br><span class="line">rule 5 permit destination 192.168.10.0 0.0.0.255 <span class="built_in">source</span> 10.10.10.0 0.0.0.255</span><br></pre></td></tr></table></figure></li></ul><h3 id="TCP协议类型"><a href="#TCP协议类型" class="headerlink" title="TCP协议类型"></a>TCP协议类型</h3><p>协议类型为TCP，配置高级ACL规则<br><strong>rule [rule-id] {deny|permit} {protocol-number|tcp} [destination {des-address des-wildcard| any} | destination-port {eq port|gt port|lt port|range port-start port-end} | source {sou-address sou-wildcard|any} source-port {eq port|gt port|lt port|range port-start port-end} |tcp-flag {ack|fin|sys} | time-range time-name]</strong></p><ul><li>rule [rule-id]：设置规则编号，可选参数</li><li>deny|permit：规则动作</li><li>protocol-number|tcp：指定协议类型为TCP，可以使用<strong>协议号6</strong>来指定，也可以使用关键词tcp指定</li><li>destination {des-address des-wildcard| any}：可选项，根据目的IP地址进行匹配，any相当于任意主机</li><li>destination-port {eq port|gt port|lt port|range port-start port-end}：指定需要匹配的TCP目的端口号或端口号范围，如果不指定表示匹配任意目的端口，eq等于，gt大于，lt小于，range端口号范围</li><li>source-port {eq port|gt port|lt port|range port-start port-end}：指定需要匹配的TCP源端口号或端口号范围，如果不指定表示匹配任意源端口，eq等于，gt大于，lt小于，range端口号范围</li><li>tcp-flag {ack|fin|sys}：指定TCP报文头部中的标记</li><li>time-range time-name：设置规则生效时间</li></ul><h3 id="UDP协议类型"><a href="#UDP协议类型" class="headerlink" title="UDP协议类型"></a>UDP协议类型</h3><p>协议类型为UDP时，配置高级ACL规则<br><strong>rule [rule-id] {deny|permit} {protocol-number|udp} [destination {des-address des-wildcard| any} | destination-port {eq port|gt port|lt port|range port-start port-end} | source {sou-address sou-wildcard|any} source-port {eq port|gt port|lt port|range port-start port-end} | time-range time-name]</strong></p><ul><li>rule [rule-id]：设置规则编号，可选参数</li><li>deny|permit：规则动作</li><li>protocol-number|tcp：指定协议类型为TCP，可以使用<strong>协议号17</strong>来指定，也可以使用关键词udp指定</li><li>destination {des-address des-wildcard| any}：可选项，根据目的IP地址进行匹配，any相当于任意主机</li><li>destination-port {eq port|gt port|lt port|range port-start port-end}：指定需要匹配的TCP目的端口号或端口号范围，如果不指定表示匹配任意目的端口，eq等于，gt大于，lt小于，range端口号范围</li><li>source-port {eq port|gt port|lt port|range port-start port-end}：指定需要匹配的TCP源端口号或端口号范围，如果不指定表示匹配任意源端口，eq等于，gt大于，lt小于，range端口号范围</li><li>time-range time-name：设置规则生效时间</li></ul><h2 id="应用高级ACL"><a href="#应用高级ACL" class="headerlink" title="应用高级ACL"></a>应用高级ACL</h2><p>在流量过滤功能中应用高级ACL需要进入到接口视图<br><strong>traffic-filter {inbound|outbound} acl {bas-acl|adv-acl|name acl-name}</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]acl 3000</span><br><span class="line">[Huawei-acl-adv-3000]rule permit ip <span class="built_in">source</span> 192.168.10.0 0.0.0.255 destination 10</span><br><span class="line">.0.10.0 0.0.0.255</span><br><span class="line">[Huawei-acl-adv-3000]rule permit ip <span class="built_in">source</span> 192.168.20.0 0.0.0.255 destination 10</span><br><span class="line">.0.10.0 0.0.0.255</span><br><span class="line">[Huawei-acl-adv-3000]rule deny ip</span><br><span class="line">[Huawei-acl-adv-3000]quit</span><br><span class="line">[Huawei]int g0/0/0</span><br><span class="line">[Huawei-GigabitEthernet0/0/0]traffic-filter inbound acl 3000</span><br><span class="line"></span><br><span class="line">[Huawei]display acl 3000</span><br><span class="line">Advanced ACL 3000, 3 rules</span><br><span class="line">Acl<span class="string">&#x27;s step is 5</span></span><br><span class="line"><span class="string"> rule 5 permit ip source 192.168.10.0 0.0.0.255 destination 10.0.10.0 0.0.0.255 </span></span><br><span class="line"><span class="string"> rule 10 permit ip source 192.168.20.0 0.0.0.255 destination 10.0.10.0 0.0.0.255</span></span><br><span class="line"><span class="string"> rule 15 deny ip </span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h1 id="拓扑实验"><a href="#拓扑实验" class="headerlink" title="拓扑实验"></a>拓扑实验</h1><p>通过动态路由OSPF协议实现全网互通<br><img src="https://qiufuqi.github.io/img/hexo/20240213155035.png"></p><ul><li><strong>display ip routing-table</strong>：查看IP路由表</li><li><strong>display acl all</strong>：查看配置中所有ACL</li></ul><h2 id="基本ACL部署"><a href="#基本ACL部署" class="headerlink" title="基本ACL部署"></a>基本ACL部署</h2><p>要求：使用基本ACL，禁止PC1访问PC3所属网段设备</p><ul><li>选择基本ACL部署最佳位置，<strong>尽可能靠近目的地位置应用基本AC</strong>L，避免无意间扩大阻塞范围<br>以PC1为源，最佳位置为AR2接口g2/0/0的出口方向，以PC3为源，最佳位置为AR1的g0/0/1的出口方向</li><li>创建并应用基本ACL<br>在AR2的g2/0/0出口方向创建基本ACL<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AR2的g2/0/0的出口上</span></span><br><span class="line">[R2]acl 2000</span><br><span class="line">[R2-acl-basic-2000]rule deny <span class="built_in">source</span> 10.10.10.0 0.0.0.255</span><br><span class="line">[R2-acl-basic-2000]rule permit <span class="built_in">source</span> any </span><br><span class="line">[R2-acl-basic-2000]q</span><br><span class="line">[R2]int g2/0/0</span><br><span class="line">[R2-GigabitEthernet2/0/0]traffic-filter outbound acl 2000</span><br><span class="line"></span><br><span class="line">[R2]dis acl all</span><br><span class="line"> Total quantity of nonempty ACL number is 1 </span><br><span class="line">Basic ACL 2000, 2 rules</span><br><span class="line">Acl<span class="string">&#x27;s step is 5</span></span><br><span class="line"><span class="string"> rule 5 deny source 10.10.10.0 0.0.0.255 (3 matches)</span></span><br><span class="line"><span class="string"> rule 10 permit (6 matches)</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="高级ACl部署"><a href="#高级ACl部署" class="headerlink" title="高级ACl部署"></a>高级ACl部署</h2><p>要求：使用高级ACL，禁止PC2访问PC3所属网段设备</p><ul><li>选择高级ACL部署最佳位置：高级ACL可以同时匹配源和目的IP地址，无论在哪个接口上应用ACL，都不会扩大阻塞范围。但是为了节省网络带宽资源和网络设备处理资源，在应用高级ACl时，遵循<strong>尽可能靠近源的位置应用高级ACL</strong><br>应用高级ACL的最佳位置是AR1的接口g2/0/0的入口方向</li><li>创建并应用高级ACL<br>在AR1的g2/0/0入口方向创建高级ACL：以PC2为源，PC3为目的<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AR1的g2/0/0的入口上</span></span><br><span class="line">[R1]acl 3000</span><br><span class="line">[R1-acl-adv-3000]rule deny ip destination 10.10.30.0 0.0.0.255 <span class="built_in">source</span> 10.10.20.0  0.0.0.255</span><br><span class="line">[R1-acl-adv-3000]quit</span><br><span class="line">[R1]int g2/0/0</span><br><span class="line">[R1-GigabitEthernet2/0/0]traffic-filter inbound acl 3000</span><br><span class="line"></span><br><span class="line">[R1]display acl 3000</span><br><span class="line">Advanced ACL 3000, 1 rule</span><br><span class="line">Acl<span class="string">&#x27;s step is 5</span></span><br><span class="line"><span class="string"> rule 5 deny ip source 10.10.20.0 0.0.0.255 destination 10.10.30.0 0.0.0.255 (2 </span></span><br><span class="line"><span class="string">matches)</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="ACL规则顺序"><a href="#ACL规则顺序" class="headerlink" title="ACL规则顺序"></a>ACL规则顺序</h2><p>ACL默认是按照顺序来处理每个规则的，一旦发现与数据包相匹配的规则，设备就会执行规则中指定的行为并退出ACL匹配进程。<br>要求：通过高级ACL禁止AR1的g0/0/0接口ping通AR3的环回接口，但是AR1能够Telnet到AR3的环回接口，同时禁止其他设备Telnet到AR3的环回接口。</p><ul><li>设计ACL：涉及到两种协议：ICMP和Telnet<ul><li>ICMP：将协议定义为ICMP（或协议号1）<br>源IP地址为：10.10.12.1（AR1的g0/0/0接口ip），目的IP地址为：3.3.3.3，AR1发来的ICMP数据包的类型是ICMP请求（Echo-request），因此可以将ICMP指定为echo（echo代表ICMP请求）通配符掩码0.0.0.0可简写为0<br><strong>rule deny icmp source 10.10.12.1 0 destination 3.3.3.3 0 icmp-type echo</strong></li><li>Telnet：将协议定义为TCP<br>AR1能够Telnet到AR3的环回接口，同时禁止其他设备Telnet到AR3的环回接口，因此需要两条命令。Telnet使用TCP（端口23）<br><strong>rule permit tcp source 10.10.12.1 0 destination 3.3.3.3 0 destination-port eq 23</strong><br><strong>rule deny tcp source any destination 3.3.3.3 0 destination-port eq 23</strong></li></ul></li><li>创建应用ACL：display查看高级ACL时，发现23已经变为telnet，所以配置时也可以使用关键字telnet，规则15中source any 表示不对源做限制，因此设备将命令写入配置前，通过对命令的解析，省略了这部分<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[R3]acl 3000</span><br><span class="line">[R3-acl-adv-3000]rule deny icmp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 icmp-type <span class="built_in">echo</span></span><br><span class="line">[R3-acl-adv-3000]rule permit tcp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 destination-port eq 23</span><br><span class="line">[R3-acl-adv-3000]rule deny tcp <span class="built_in">source</span> any destination 3.3.3.3 0 destination-port eq 23</span><br><span class="line">[R3]int g0/0/1</span><br><span class="line">[R3-GigabitEthernet0/0/1]traffic-filter inbound acl 3000</span><br><span class="line"></span><br><span class="line">[R3]display acl 3000</span><br><span class="line">Advanced ACL 3000, 3 rules</span><br><span class="line">Acl<span class="string">&#x27;s step is 5</span></span><br><span class="line"><span class="string"> rule 5 deny icmp source 10.10.12.1 0 destination 3.3.3.3 0 icmp-type echo </span></span><br><span class="line"><span class="string"> rule 10 permit tcp source 10.10.12.1 0 destination 3.3.3.3 0 destination-port eq telnet </span></span><br><span class="line"><span class="string"> rule 15 deny tcp destination 3.3.3.3 0 destination-port eq telnet</span></span><br></pre></td></tr></table></figure></li><li>在AR3上启用Telnet：需要现在AR3上启用telnet功能<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[R3]user-interface vty 0 4</span><br><span class="line">[R3-ui-vty0-4]authentication-mode password </span><br><span class="line">Please configure the login password (maximum length 16):huawei</span><br></pre></td></tr></table></figure></li><li>验证配置结果：AR1和AR2分别向AR3的环回接口ping和telnet测试：AR1无法ping通，但是能够telnet通，AR2能ping通，但是无法telnet通<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AR1无法ping通，但是能够telnet通</span></span><br><span class="line">&lt;R1&gt;ping 3.3.3.3</span><br><span class="line">  PING 3.3.3.3: 56  data bytes, press CTRL_C to <span class="built_in">break</span></span><br><span class="line">    Request time out</span><br><span class="line">    Request time out</span><br><span class="line"></span><br><span class="line">&lt;R1&gt;telnet 3.3.3.3</span><br><span class="line">  Press CTRL_] to quit telnet mode</span><br><span class="line">  Trying 3.3.3.3 ...</span><br><span class="line">  Connected to 3.3.3.3 ...</span><br><span class="line"></span><br><span class="line">Login authentication</span><br><span class="line">Password:</span><br><span class="line">&lt;R3&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># AR2能ping通，但是无法telnet通</span></span><br><span class="line">&lt;R2&gt;ping 3.3.3.3</span><br><span class="line">  PING 3.3.3.3: 56  data bytes, press CTRL_C to <span class="built_in">break</span></span><br><span class="line">    Reply from 3.3.3.3: bytes=56 Sequence=1 ttl=255 time=30 ms</span><br><span class="line">    Reply from 3.3.3.3: bytes=56 Sequence=2 ttl=255 time=20 ms</span><br><span class="line">&lt;R2&gt;telnet 3.3.3.3</span><br><span class="line">  Press CTRL_] to quit telnet mode</span><br><span class="line">  Trying 3.3.3.3 ...</span><br><span class="line">  Error: Can<span class="string">&#x27;t connect to the remote host</span></span><br></pre></td></tr></table></figure></li><li>使用自动排序<br>华为设备提供了ACL自动排序功能，设备会根据规则之间的重叠和冲突，自动为规则进行排序。设备默认按照管理员配置进行排序，如果需要让设备自行判断规则的顺序，就要<strong>在创建ACL的时候进行指定</strong>，否则当ACL中存在规则时，通过<strong>match-order auto</strong>更改排序时会产生错误。<br>在AR3的acl 3000规则中，规则10和规则15的顺序不能颠倒，否则AR1无法对3.3.3.3发起telnet命令，因为数据包会先和deny规则匹配，规则5的顺序与两个规则无关，可以配置在两个规则之后。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[R3]dis acl 3000</span><br><span class="line">Advanced ACL 3000, 3 rules</span><br><span class="line">Acls step is 5</span><br><span class="line"> rule 5 deny icmp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 icmp-type <span class="built_in">echo</span> (5 matches)</span><br><span class="line"> rule 10 permit tcp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 destination-port eq telnet (24 matches)</span><br><span class="line"> rule 15 deny tcp destination 3.3.3.3 0 destination-port eq telnet (2 matches)</span><br><span class="line"></span><br><span class="line">[R3]acl 3000 match-order auto</span><br><span class="line">Error: Cannot execute match order <span class="built_in">command</span> because this ACL is not empty.</span><br></pre></td></tr></table></figure>创建规则时指定自动排序，将上面的规则10和规则15颠倒添加<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[R3]acl 3000 match-order auto</span><br><span class="line">[R3-acl-adv-3000]rule deny icmp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 icmp-type <span class="built_in">echo</span></span><br><span class="line">[R3-acl-adv-3000]display this</span><br><span class="line">[V200R003C00]</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">acl number 3000  match-order auto</span><br><span class="line"> rule 5 deny icmp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 icmp-type <span class="built_in">echo</span> </span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">return</span></span><br></pre></td></tr></table></figure>先添加规则拒绝所有的telnet，发现它的规则编号为10<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[R3-acl-adv-3000]rule deny tcp destination 3.3.3.3 0 destination-port eq telnet</span><br><span class="line">[R3-acl-adv-3000]display this</span><br><span class="line">[V200R003C00]</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">acl number 3000  match-order auto</span><br><span class="line"> rule 5 deny icmp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 icmp-type <span class="built_in">echo</span> </span><br><span class="line"> rule 10 deny tcp destination 3.3.3.3 0 destination-port eq telnet </span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">return</span></span><br></pre></td></tr></table></figure>再添加规则允许AR1进行telnet，此时规则与现有的规则10存在重叠和冲突；当添加了与deny规则存在重叠且匹配的IP地址范围更小的permit规则后，ACL自动将匹配范围更精确的permit规则放在了deny前面。此时规则10变成了permit，而deny的规则变为了15。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[R3-acl-adv-3000]rule  permit tcp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 destination-port eq telnet </span><br><span class="line">[R3-acl-adv-3000]dis this</span><br><span class="line">[V200R003C00]</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">acl number 3000  match-order auto</span><br><span class="line"> rule 5 deny icmp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 icmp-type <span class="built_in">echo</span> </span><br><span class="line"> rule 10 permit tcp <span class="built_in">source</span> 10.10.12.1 0 destination 3.3.3.3 0 destination-port e</span><br><span class="line">q telnet </span><br><span class="line"> rule 15 deny tcp destination 3.3.3.3 0 destination-port eq telnet </span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> ACL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> ACL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-7-Vlan间通信</title>
      <link href="/huawei_vlan_c/"/>
      <url>/huawei_vlan_c/</url>
      
        <content type="html"><![CDATA[<p>实现两个VLAN之间的通信，需要三层路由功能的介入，有两种方式可以实现这个目标。一个是在网络中添加路由器，路由器作为三层设备为VLAN之间的流量执行路由，第二种是在交换机上启用VLANIF接口，使用这个虚拟接口执行三层路由功能（部分交换机才支持）。</p><h1 id="添加路由器"><a href="#添加路由器" class="headerlink" title="添加路由器"></a>添加路由器</h1><p>添加路由器，为VLAN之间的执行路由。<br>交换机上的每个VLAN都要与路由器上的三层接口对应，实际应用中，我们使用一个路由器的接口就可以实现多个VLAN之间的路由转发：通过<strong>Dot1q终结子端口</strong>以实现不同VLAN之间的通信。此时交换机和路由器之间只有一条链路。<br>每个子接口都是相应VLAN的终结，即子接口作为VLAN中终端设备的默认网关。交换机与路由器相连端口需要传输两个VLAN的流量，因此将其配置为trunk，并放行相应的VLAN流量。<br>对于路由器接口，需要进行如下配置:</p><ul><li>创建子端口</li><li>配置相应的VLAN的Dot1q终结</li><li>配置IP地址，作为终端设备的默认网关</li></ul><p>实验拓扑图如下：<br><img src="https://qiufuqi.github.io/img/hexo/20240212155102.png"></p><h2 id="配置交换机"><a href="#配置交换机" class="headerlink" title="配置交换机"></a>配置交换机</h2><p>配置交换机SW1，和终端设备相连端口设置为access，并加入相应的vlan，和路由器R1相连的端口设置为trunk口并放行相应的vlan。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[SW1]vlan batch 10 20</span><br><span class="line">[SW1]int e0/0/1</span><br><span class="line">[SW1-Ethernet0/0/1]port link-type access </span><br><span class="line">[SW1-Ethernet0/0/1]port default vlan 10</span><br><span class="line">[SW1]int e0/0/2</span><br><span class="line">[SW1-Ethernet0/0/2]port link-type access </span><br><span class="line">[SW1-Ethernet0/0/2]port default vlan 20</span><br><span class="line"></span><br><span class="line">[SW1]int g0/0/1</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port link-type trunk </span><br><span class="line">[SW1-GigabitEthernet0/0/1]port trunk allow-pass vlan 10 20</span><br></pre></td></tr></table></figure><h2 id="配置子接口"><a href="#配置子接口" class="headerlink" title="配置子接口"></a>配置子接口</h2><p>在路由器上配置Dot1q终结子接口</p><ul><li><strong>interface interface-type interface-number.subinterface-number</strong>：系统视图命令，创建子接口并进入子接口配置视图</li><li><strong>ip address ip-address mask-length</strong>：子接口视图命令，配置子接口IP地址，并将<strong>子接口的IP地址作为相应VLAN的默认网关</strong>。</li><li>dot1q termination vid low-pe-vid：子接口视图命令，指定该子接口终结的VLAN；<ul><li>每个子接口只能关联并终结一个VLAN；</li><li>同一个主接口下的不同子接口不能关联相同的VLAN；</li><li>不同主接口下的子接口可以关联相同的VLAN</li></ul></li><li>arp broadcast enable：子接口视图命令，在该子接口上启用ARP广播功能。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[R1]int g0/0/1.10</span><br><span class="line">[R1-GigabitEthernet0/0/1.10]ip address 172.16.10.1 24</span><br><span class="line">[R1-GigabitEthernet0/0/1.10]dot1q termination vid 10</span><br><span class="line">[R1-GigabitEthernet0/0/1.10]arp broadcast <span class="built_in">enable</span></span><br><span class="line">[R1]int g0/0/1.20</span><br><span class="line">[R1-GigabitEthernet0/0/1.20]ip address 172.16.20.1 24</span><br><span class="line">[R1-GigabitEthernet0/0/1.20]dot1q termination vid 20</span><br><span class="line">[R1-GigabitEthernet0/0/1.20]arp broadcast <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>子端口的IP地址作为相应vlan的网关，此时PC1和PC2能够进行互通。<br>使用<strong>display arp查看路由器上</strong>MAC地址与VLAN的关系<br>使用<strong>display mac-address查看交换机上</strong>MAC地址与VLAN的关系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[R1]dis arp</span><br><span class="line">IP ADDRESS      MAC ADDRESS     EXPIRE(M) TYPE        INTERFACE   VPN-INSTANCE </span><br><span class="line">                                          VLAN/CEVLAN PVC                      </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">172.16.10.1     00e0-fc8e-402b            I -         GE0/0/1.10</span><br><span class="line">172.16.10.10    5489-9804-0690  19        D-0         GE0/0/1.10</span><br><span class="line">                                            10/-</span><br><span class="line">172.16.20.1     00e0-fc8e-402b            I -         GE0/0/1.20</span><br><span class="line">172.16.20.20    5489-98f9-72fb  19        D-0         GE0/0/1.20</span><br><span class="line">                                            20/-</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Total:4         Dynamic:2       Static:0     Interface:2    </span><br></pre></td></tr></table></figure><h1 id="配置VLANIF接口"><a href="#配置VLANIF接口" class="headerlink" title="配置VLANIF接口"></a>配置VLANIF接口</h1><p>在实际应用中，每个VLAN中的终端设备数量庞大，启用子接口的arp广播功能可能会因大量arp广播请求而造成链路资源浪费，影响网关设备的运行。在使用VLANIF接口实现VLAN间通信中，如果连接终端的设备具有三层路由功能，则无须额外的路由器。<br>配置vlanif命令如下：</p><ul><li><strong>interface vlanif vlan-id</strong>：系统视图命令，创建vlanif接口并进入vlanif接口视图</li><li><strong>ip address ip-address mask-length</strong>：接口视图命令，配置vlanif接口的ip地址，即vlan中终端设备的网关</li></ul><p>实验拓扑图如下：<br><img src="https://qiufuqi.github.io/img/hexo/20240212160308.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface Vlanif 10</span><br><span class="line">[SW1-Vlanif10]ip address 172.16.10.1 24</span><br><span class="line">[SW1]interface Vlanif 20</span><br><span class="line">[SW1-Vlanif20]ip address 172.16.20.1 24</span><br></pre></td></tr></table></figure><p>vlanif接口时逻辑接口，因此创建后它的状态就是UP，配置了IP后，它的线路协议也会进入UP，此时PC1和PC2能够进行互通。<br>交换机启用了三层功能，使用<strong>display arp查看交换机上</strong>学习到的MAC地址。<br>使用<strong>display interface vlanif vlan-id</strong>查看vlanif接口的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[SW1]dis arp</span><br><span class="line">IP ADDRESS      MAC ADDRESS     EXPIRE(M) TYPE INTERFACE      VPN-INSTANCE      </span><br><span class="line">                                          VLAN </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">172.16.10.1     4c1f-cc97-753e            I -  Vlanif10</span><br><span class="line">172.16.10.10    5489-9804-0690  18        D-0  Eth0/0/1</span><br><span class="line">                                          10</span><br><span class="line">172.16.20.1     4c1f-cc97-753e            I -  Vlanif20</span><br><span class="line">172.16.20.20    5489-98f9-72fb  18        D-0  Eth0/0/2</span><br><span class="line">                                          20</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">Total:4         Dynamic:2       Static:0     Interface:2  </span><br><span class="line"></span><br><span class="line">[SW1]display interface Vlanif 10</span><br><span class="line">Vlanif10 current state : UP</span><br><span class="line">Line protocol current state : UP</span><br><span class="line">Last line protocol up time : 2024-02-12 15:56:00 UTC-08:00</span><br><span class="line">Description:</span><br><span class="line">Route Port,The Maximum Transmit Unit is 1500</span><br><span class="line">Internet Address is 172.16.10.1/24</span><br><span class="line">IP Sending Frames<span class="string">&#x27; Format is PKTFMT_ETHNT_2, Hardware address is 4c1f-cc97-753e</span></span><br><span class="line"><span class="string">Current system time: 2024-02-12 16:01:21-08:00</span></span><br><span class="line"><span class="string">    Input bandwidth utilization  : --</span></span><br><span class="line"><span class="string">    Output bandwidth utilization : --</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> VLAN间通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> VLAN </tag>
            
            <tag> 通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-6-链路聚合堆叠</title>
      <link href="/huawei_eth_trunk/"/>
      <url>/huawei_eth_trunk/</url>
      
        <content type="html"><![CDATA[<p>当两台交换机使用多条链路连接时，一方面可以避免唯一一条线路故障导致链路中断，另一方面也可以提升两台交换机之间的带宽。为了避免环路的产生，交换机通常会只保留一条链路，其他链路阻塞，这样就造成了带宽浪费。这就要使用到链路聚合。</p><h1 id="链路聚合常识"><a href="#链路聚合常识" class="headerlink" title="链路聚合常识"></a>链路聚合常识</h1><p>链路聚合带来以下好处：</p><ul><li>增加带宽：链路聚合接口的最大带宽是其成员接口带宽之和</li><li>提高可用性：当一条活跃的链路出现故障时，相关流量会自动切换到其他可用的成员链路上</li><li>负载分担：一个虚拟链路组合中的多条活跃的物理链路可以实现负载分担</li></ul><p>链路聚合相关概念：</p><ul><li>链路聚合组（LAG Link Aggregation Group）：多条以太网链路捆绑在一起形成的逻辑链路</li><li>链路聚合接口(Eth-trunk接口)：一个链路聚合组对应一个链路聚合接口，它是由多个物理接口所连接的链路捆绑在一起形成的逻辑接口</li><li>成员接口和成员链路：Eth-trunk接口的每个物理接口成为成员接口，成员接口所连接的链路成为成员链路</li><li>活动接口和非活动接口：活动接口负责转发数据，非活动接口不转发数据；活动接口对应的链路被称为活动链路，非活动接口对应的链路被称为非活动链路</li><li>活动接口上限阈值：一个链路聚合组中的活动接口的数量由管理员根据实际情况设置；当3G带宽的链路聚合组中捆绑了5个1G的物理接口时，管理员可将活动接口上限设置为3，此时有3条链路进入活跃状态，另外两条链路进入非活跃状态并提供备份。手动配置不支持该设置。</li><li>活动接口下限阈值：为保障最小带宽，管理员可以设置活动接口下线阈值，当活动接口链路数量小于该值时，Eth-trunk接口会进入Down状态</li><li>链路聚合工作模式：手动模式和LACP（Link Aggregation Control Protocol 链路聚合控制协议）模式</li></ul><h1 id="链路聚合模式"><a href="#链路聚合模式" class="headerlink" title="链路聚合模式"></a>链路聚合模式</h1><p>将两台交换机的g0/0/10,g0/0/11,g0/0/12接口分别对应连接，此时可以看到3条链路中只有一条链路能够转发数据，其他两条进入阻塞状态。链路聚合配置可以将这3个物理接口捆绑为一个逻辑接口，从而避免STP将物理端口阻塞掉。<br><img src="https://qiufuqi.github.io/img/hexo/20240212101217.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[SW1]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/10       DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/11       DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/12       DESI  FORWARDING      NONE</span><br><span class="line">[SW2]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/10       ROOT  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/11       ALTE  DISCARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/12       ALTE  DISCARDING      NON</span><br></pre></td></tr></table></figure><h2 id="手动模式"><a href="#手动模式" class="headerlink" title="手动模式"></a>手动模式</h2><p>以太网链路聚合手动配置需要以下两个步骤：</p><ul><li><strong>interface eth-trunk trunk-id</strong>：系统视图命令，创建Eth-Trunk接口并进入接口视图</li><li><strong>mode manual load-balance（可选）</strong>：接口视图命令，设置链路聚合模式为手工模式</li><li>接口加入Eth-Trunk:使用两种方式之一添加接口成员<ul><li><strong>trunkport interface-type {interface-number} [to interface-number]</strong> 添加接口成员，在添加多个接口时，如果某个接口添加失败，则它后面的接口也不会被加入Eth-Trunk</li><li><strong>eth-trunk trunk-id</strong> 进入某个接口，将当前接口加入到Eth-Trunk中</li></ul></li><li><strong>mixed-rate link enable</strong>：接口视图命令，把不同速率的端口添加到同一个Eth-Trunk端口中。</li></ul><p>交换机端口加入Eth-Trunk时，注意：</p><ul><li>每个Eth-Trunk接口最多包含8个成员接口</li><li>Eth-Trunk接口的成员接口不能是其他Eth-Trunk接口</li><li>一个以太网端口只能加入一个Eth-Trunk接口，如果要加入其他的Eth-Trunk接口，需要先退出当前接口</li><li>当一个以太网端口被配置为Eth-Trunk接口成员后，与其直连的对端以太网端口也必须配置为Eth-Trunk端口，以便两端能正常通信</li><li>Eth-Trunk链路两端的参数必须保持一致，包括物理端口数量，速率，双工方式等</li></ul><p>可以使用<strong>display eth-trunk trunk-id</strong>来查看配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface Eth-Trunk 1</span><br><span class="line">[SW1-Eth-Trunk1]trunkport GigabitEthernet 0/0/10 to 0/0/12</span><br><span class="line"></span><br><span class="line">[SW2]interface Eth-Trunk 1</span><br><span class="line">[SW2-Eth-Trunk1]q</span><br><span class="line">[SW2]interface g0/0/10</span><br><span class="line">[SW2-GigabitEthernet0/0/10]eth-trunk 1</span><br><span class="line">[SW2-GigabitEthernet0/0/10]int g0/0/11</span><br><span class="line">[SW2-GigabitEthernet0/0/11]eth-trunk 1</span><br><span class="line">[SW2-GigabitEthernet0/0/11]int g0/0/12</span><br><span class="line">[SW2-GigabitEthernet0/0/12]eth-trunk 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># WorkingMode: NORMAL 表明是手工配置</span></span><br><span class="line">[SW1]dis eth-trunk 1</span><br><span class="line">Eth-Trunk1<span class="string">&#x27;s state information is:</span></span><br><span class="line"><span class="string">WorkingMode: NORMAL         Hash arithmetic: According to SIP-XOR-DIP         </span></span><br><span class="line"><span class="string">Least Active-linknumber: 1  Max Bandwidth-affected-linknumber: 8              </span></span><br><span class="line"><span class="string">Operate status: up          Number Of Up Port In Trunk: 3                     </span></span><br><span class="line"><span class="string">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">PortName                      Status      Weight </span></span><br><span class="line"><span class="string">GigabitEthernet0/0/10         Up          1      </span></span><br><span class="line"><span class="string">GigabitEthernet0/0/11         Up          1      </span></span><br><span class="line"><span class="string">GigabitEthernet0/0/12         Up          1      </span></span><br><span class="line"><span class="string">  </span></span><br></pre></td></tr></table></figure><p>此时查看STP状态，发现STP不在基于每个物理端口进行计算，而是基于Eth-Trunk进行计算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[SW1]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    Eth-Trunk1                  DESI  FORWARDING      NONE</span><br></pre></td></tr></table></figure><h2 id="LACP模式"><a href="#LACP模式" class="headerlink" title="LACP模式"></a>LACP模式</h2><p>当两台交换机通过LACP模式搭建Eth-Trunk链路时，它们之间需要先交互LACPDU（LACP Data Unit，LACP数据单元）进行协商，确保对端成员确实属于同一个Eth-Trunk接口。<br><strong>在更改Eth-Trunk接口的工作模式时，我们需要先删除其中的成员接口</strong>（部分交换机不需要，根据配置手册来）。手动模式时，只要Eth-Trunk接口中加入了UP状态的成员接口，Eth-Trunk接口就会进入到UP状态；在LACP模式时，只有当链路两端的配置都完成，并且两端接口参数相同，LACP才会将Eth-Trunk接口进入UP状态。</p><ul><li>mode lacp-static：Eth-Trunk接口视图命令，将本接口配置为LACP模式（默认的工作模式为手动模式 manual）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先删除端口，再更改模式</span></span><br><span class="line">[SW1]int Eth-Trunk 1</span><br><span class="line">[SW1-Eth-Trunk1]undo trunkport GigabitEthernet 0/0/10 to 0/0/12</span><br><span class="line">[SW1-Eth-Trunk1]mode lacp-static </span><br><span class="line">[SW1-Eth-Trunk1]trunkport GigabitEthernet 0/0/10 to 0/0/12</span><br><span class="line"></span><br><span class="line">[SW2]int Eth-Trunk 1</span><br><span class="line">[SW2-Eth-Trunk1]undo trunkport GigabitEthernet 0/0/10 to 0/0/12</span><br><span class="line">[SW2-Eth-Trunk1]mode lacp-static</span><br><span class="line">[SW2-Eth-Trunk1]trunkport GigabitEthernet 0/0/10 to 0/0/12</span><br><span class="line"></span><br><span class="line"><span class="comment"># WorkingMode: STATIC标明是LACP模式</span></span><br><span class="line">[SW1]dis eth-trunk 1</span><br><span class="line">Eth-Trunk1<span class="string">&#x27;s state information is:</span></span><br><span class="line"><span class="string">Local:</span></span><br><span class="line"><span class="string">LAG ID: 1                   WorkingMode: STATIC                               </span></span><br><span class="line"><span class="string">Preempt Delay: Disabled     Hash arithmetic: According to SIP-XOR-DIP         </span></span><br><span class="line"><span class="string">System Priority: 32768      System ID: 4c1f-ccd5-7970                         </span></span><br><span class="line"><span class="string">Least Active-linknumber: 1  Max Active-linknumber: 8                          </span></span><br><span class="line"><span class="string">Operate status: up          Number Of Up Port In Trunk: 3                     </span></span><br><span class="line"><span class="string">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">ActorPortName          Status   PortType PortPri PortNo PortKey PortState Weight</span></span><br><span class="line"><span class="string">GigabitEthernet0/0/10  Selected 1GE      32768   11     305     10111100  1     </span></span><br><span class="line"><span class="string">GigabitEthernet0/0/11  Selected 1GE      32768   12     305     10111100  1     </span></span><br><span class="line"><span class="string">GigabitEthernet0/0/12  Selected 1GE      32768   13     305     10111100  1     </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Partner:</span></span><br><span class="line"><span class="string">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">ActorPortName          SysPri   SystemID        PortPri PortNo PortKey PortState</span></span><br><span class="line"><span class="string">GigabitEthernet0/0/10  32768    4c1f-cce9-3ef5  32768   11     305     10111100</span></span><br><span class="line"><span class="string">GigabitEthernet0/0/11  32768    4c1f-cce9-3ef5  32768   12     305     10111100</span></span><br><span class="line"><span class="string">GigabitEthernet0/0/12  32768    4c1f-cce9-3ef5  32768   13     305     10111100</span></span><br></pre></td></tr></table></figure><h3 id="最小和最大活动链路数量"><a href="#最小和最大活动链路数量" class="headerlink" title="最小和最大活动链路数量"></a>最小和最大活动链路数量</h3><ul><li><strong>least active-linknumber link-number</strong>：Eth-Trunk接口视图命令，设置链路聚合活动接口数量的下限阈值，默认情况是1，<strong>当链路两端下限阈值不一致时，以较大的为准</strong>。</li><li><strong>max active-linknumber link-number</strong>：Eth-Trunk接口视图命令，设置链路聚合活动接口数量的上限阈值，默认情况时8，<strong>当链路两端上限不一致时，以较小的为准</strong>。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int Eth-Trunk 1</span><br><span class="line">[SW1-Eth-Trunk1]least active-linknumber 2</span><br><span class="line">[SW1-Eth-Trunk1]max active-linknumber 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># g0/0/12端口进入unselect状态， 尽管SW2的参数未发生改变，SW2的g0/0/12端口也会进入unselect状态，但是配置尽量保持一致</span></span><br><span class="line">[SW1]dis eth-trunk 1</span><br><span class="line">Eth-Trunk1s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID: 1                   WorkingMode: STATIC                               </span><br><span class="line">Preempt Delay: Disabled     Hash arithmetic: According to SIP-XOR-DIP         </span><br><span class="line">System Priority: 32768      System ID: 4c1f-ccd5-7970                         </span><br><span class="line">Least Active-linknumber: 2  Max Active-linknumber: 2                          </span><br><span class="line">Operate status: up          Number Of Up Port In Trunk: 2                     </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          Status   PortType PortPri PortNo PortKey PortState Weight</span><br><span class="line">GigabitEthernet0/0/10  Selected 1GE      32768   11     305     10111100  1     </span><br><span class="line">GigabitEthernet0/0/11  Selected 1GE      32768   12     305     10111100  1     </span><br><span class="line">GigabitEthernet0/0/12  Unselect 1GE      32768   13     305     10100000  1     </span><br><span class="line"></span><br><span class="line">Partner:</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          SysPri   SystemID        PortPri PortNo PortKey PortState</span><br><span class="line">GigabitEthernet0/0/10  32768    4c1f-cce9-3ef5  32768   11     305     10111100</span><br><span class="line">GigabitEthernet0/0/11  32768    4c1f-cce9-3ef5  32768   12     305     10111100</span><br><span class="line">GigabitEthernet0/0/12  32768    4c1f-cce9-3ef5  32768   13     305     10110000</span><br><span class="line"></span><br><span class="line">[SW2]int Eth-Trunk 1</span><br><span class="line">[SW2-Eth-Trunk1]least active-linknumber 2</span><br><span class="line">[SW2-Eth-Trunk1]max active-linknumber 2</span><br></pre></td></tr></table></figure></li></ul><h3 id="LACP系统优先级"><a href="#LACP系统优先级" class="headerlink" title="LACP系统优先级"></a>LACP系统优先级</h3><p>在LACP模式中，链路两端的设备会根据管理员的配置或者默认规则，选择Eth-Trunk中的活动接口，只有当两端选择的活动接口一致时，才能正常工作。LACP系统优先级的作用时设置链路哪端的设备为主动端，并由它来决定活动接口的选择。</p><ul><li><strong>lacp priority priority</strong>:系统视图命令，设置当前设备的LACP系统优先级，默认值：32768，值越低，优先级越高。如果优先级相同，则MAC地址较小的一端会成为主动端。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[SW1]lacp priority 30000</span><br><span class="line"></span><br><span class="line"><span class="comment"># System Priority: 30000  显示更改的值</span></span><br><span class="line">[SW1]dis eth-trunk 1</span><br><span class="line">Eth-Trunk1<span class="string">&#x27;s state information is:</span></span><br><span class="line"><span class="string">Local:</span></span><br><span class="line"><span class="string">LAG ID: 1                   WorkingMode: STATIC                               </span></span><br><span class="line"><span class="string">Preempt Delay: Disabled     Hash arithmetic: According to SIP-XOR-DIP         </span></span><br><span class="line"><span class="string">System Priority: 30000      System ID: 4c1f-ccd5-7970                         </span></span><br><span class="line"><span class="string">Least Active-linknumber: 2  Max Active-linknumber: 2                          </span></span><br><span class="line"><span class="string">Operate status: up          Number Of Up Port In Trunk: 2     </span></span><br></pre></td></tr></table></figure></li></ul><h3 id="LACP接口优先级"><a href="#LACP接口优先级" class="headerlink" title="LACP接口优先级"></a>LACP接口优先级</h3><p>LACP接口优先级是选择活动接口的标准</p><ul><li><strong>lacp priority priority</strong>：接口视图命令，设置当前接口的LACP优先级，默认值：32768，值越低，优先级越高。如果优先级相同，接口ID较小的优先级较高。</li><li>**lacp selected {priority|speed}**：接口视图命令，建议具有相同速率的接口捆绑为聚合链路；如果接口速率不同，可能会选择速率较低的接口成为活动接口。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int g0/0/10</span><br><span class="line">[SW1-GigabitEthernet0/0/10]lacp priority 40000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发现g0/0/10没有成为非活动接口，此时需要开启LACP抢占功能</span></span><br><span class="line">[SW1]dis eth-trunk 1</span><br><span class="line">Eth-Trunk1s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID: 1                   WorkingMode: STATIC                               </span><br><span class="line">Preempt Delay: Disabled     Hash arithmetic: According to SIP-XOR-DIP         </span><br><span class="line">System Priority: 30000      System ID: 4c1f-ccd5-7970                         </span><br><span class="line">Least Active-linknumber: 2  Max Active-linknumber: 2                          </span><br><span class="line">Operate status: up          Number Of Up Port In Trunk: 2                     </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          Status   PortType PortPri PortNo PortKey PortState Weight</span><br><span class="line">GigabitEthernet0/0/10  Selected 1GE      40000   11     305     10111100  1     </span><br><span class="line">GigabitEthernet0/0/11  Selected 1GE      32768   12     305     10111100  1     </span><br><span class="line">GigabitEthernet0/0/12  Unselect 1GE      32768   13     305     10100000  1     </span><br><span class="line"></span><br><span class="line">Partner:</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          SysPri   SystemID        PortPri PortNo PortKey PortState</span><br><span class="line">GigabitEthernet0/0/10  32768    4c1f-cce9-3ef5  32768   11     305     10111100</span><br><span class="line">GigabitEthernet0/0/11  32768    4c1f-cce9-3ef5  32768   12     305     10111100</span><br><span class="line">GigabitEthernet0/0/12  32768    4c1f-cce9-3ef5  32768   13     305     1010000</span><br></pre></td></tr></table></figure></li></ul><h3 id="LACP抢占功能"><a href="#LACP抢占功能" class="headerlink" title="LACP抢占功能"></a>LACP抢占功能</h3><p>LACP抢占功能可以使优先级较高的接口总是能够成为活动接口。当高优先级接口由于故障切换到非活动状态再次恢复时，抢占功能可以使高优先级接口抢占低优先级接口，成为活动接口。<br>配置抢占功能的同时，为其配置一个时延，也就是非活动接口切换为活动接口之前需要等待的时间，避免链路切换导致Eth-Trunk中的数据传输不稳定</p><ul><li><strong>lacp preempt enable</strong>：Eth-Trunk接口视图命令，为当前Eth-trunk接口启用LACP的抢占功能</li><li><strong>lacp preempt delay delay-time</strong>：Eth-Trunk接口视图命令，为当前Eth-trunk配置LACP抢占时延，默认时延是30s</li></ul><p>链路两端都进行相同的配置时，才会触发抢占功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface Eth-Trunk 1</span><br><span class="line">[SW1-Eth-Trunk1]lacp preempt <span class="built_in">enable</span> </span><br><span class="line">[SW1-Eth-Trunk1]lacp preempt delay 10</span><br><span class="line"></span><br><span class="line">[SW2]int g0/0/10</span><br><span class="line">[SW2-GigabitEthernet0/0/10]lacp priority 40000</span><br><span class="line">[SW2]int Eth-Trunk 1</span><br><span class="line">[SW2-Eth-Trunk1]lacp preempt <span class="built_in">enable</span> </span><br><span class="line">[SW2-Eth-Trunk1]lacp preempt delay 10</span><br><span class="line"></span><br><span class="line">[SW1]dis eth-trunk 1</span><br><span class="line">Eth-Trunk1s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID: 1                   WorkingMode: STATIC                               </span><br><span class="line">Preempt Delay Time: 10      Hash arithmetic: According to SIP-XOR-DIP         </span><br><span class="line">System Priority: 30000      System ID: 4c1f-ccd5-7970                         </span><br><span class="line">Least Active-linknumber: 2  Max Active-linknumber: 2                          </span><br><span class="line">Operate status: up          Number Of Up Port In Trunk: 2                     </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          Status   PortType PortPri PortNo PortKey PortState Weight</span><br><span class="line">GigabitEthernet0/0/10  Unselect 1GE      40000   11     305     10100000  1     </span><br><span class="line">GigabitEthernet0/0/11  Selected 1GE      32768   12     305     10111100  1     </span><br><span class="line">GigabitEthernet0/0/12  Selected 1GE      32768   13     305     10111100  1     </span><br><span class="line"></span><br><span class="line">Partner:</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          SysPri   SystemID        PortPri PortNo PortKey PortState</span><br><span class="line">GigabitEthernet0/0/10  32768    4c1f-cce9-3ef5  40000   11     305     10100000</span><br><span class="line">GigabitEthernet0/0/11  32768    4c1f-cce9-3ef5  32768   12     305     10111100</span><br><span class="line">GigabitEthernet0/0/12  32768    4c1f-cce9-3ef5  32768   13     305     10111100</span><br></pre></td></tr></table></figure><h3 id="测试LACP备用接口"><a href="#测试LACP备用接口" class="headerlink" title="测试LACP备用接口"></a>测试LACP备用接口</h3><p>通过模拟SW1的g0/0/11接口故障，观察Eth-Trunk中活动的接口的切换。当SW1的g0/0/11故障(关闭)时，Eth-Trunk状态迅速完成了切换，g0/0/10从非活跃状态切换为活跃状态，无须等待10s，只要当g0/0/11恢复后，由于g0/0/11的优先级高于g0/0/10而要抢占活动接口，LACP抢占才会时延10s。即：<strong>发生故障立即切换不等待，故障恢复抢占需等待时间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int g0/0/11</span><br><span class="line">[SW1-GigabitEthernet0/0/11]shutdown</span><br><span class="line">[SW1]dis eth-trunk 1</span><br><span class="line">Eth-Trunk1s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID: 1                   WorkingMode: STATIC                               </span><br><span class="line">Preempt Delay Time: 10      Hash arithmetic: According to SIP-XOR-DIP         </span><br><span class="line">System Priority: 30000      System ID: 4c1f-ccd5-7970                         </span><br><span class="line">Least Active-linknumber: 2  Max Active-linknumber: 2                          </span><br><span class="line">Operate status: up          Number Of Up Port In Trunk: 2                     </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          Status   PortType PortPri PortNo PortKey PortState Weight</span><br><span class="line">GigabitEthernet0/0/10  Selected 1GE      40000   11     305     10111100  1     </span><br><span class="line">GigabitEthernet0/0/11  Unselect 1GE      32768   12     305     10100010  1     </span><br><span class="line">GigabitEthernet0/0/12  Selected 1GE      32768   13     305     10111100  1     </span><br><span class="line"></span><br><span class="line">Partner:</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          SysPri   SystemID        PortPri PortNo PortKey PortState</span><br><span class="line">GigabitEthernet0/0/10  32768    4c1f-cce9-3ef5  40000   11     305     10111100</span><br><span class="line">GigabitEthernet0/0/11  0        0000-0000-0000  0       0      0       10100011</span><br><span class="line">GigabitEthernet0/0/12  32768    4c1f-cce9-3ef5  32768   13     305     10111100</span><br><span class="line"></span><br><span class="line">[SW1-GigabitEthernet0/0/11]undo shutdown</span><br><span class="line">[SW1]dis eth-trunk 1</span><br><span class="line">Eth-Trunk1s state information is:</span><br><span class="line">Local:</span><br><span class="line">LAG ID: 1                   WorkingMode: STATIC                               </span><br><span class="line">Preempt Delay Time: 10      Hash arithmetic: According to SIP-XOR-DIP         </span><br><span class="line">System Priority: 30000      System ID: 4c1f-ccd5-7970                         </span><br><span class="line">Least Active-linknumber: 2  Max Active-linknumber: 2                          </span><br><span class="line">Operate status: up          Number Of Up Port In Trunk: 2                     </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          Status   PortType PortPri PortNo PortKey PortState Weight</span><br><span class="line">GigabitEthernet0/0/10  Unselect 1GE      40000   11     305     10100000  1     </span><br><span class="line">GigabitEthernet0/0/11  Selected 1GE      32768   12     305     10111100  1     </span><br><span class="line">GigabitEthernet0/0/12  Selected 1GE      32768   13     305     10111100  1     </span><br><span class="line"></span><br><span class="line">Partner:</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ActorPortName          SysPri   SystemID        PortPri PortNo PortKey PortState</span><br><span class="line">GigabitEthernet0/0/10  32768    4c1f-cce9-3ef5  40000   11     305     10100000</span><br><span class="line">GigabitEthernet0/0/11  32768    4c1f-cce9-3ef5  32768   12     305     10111100</span><br><span class="line">GigabitEthernet0/0/12  32768    4c1f-cce9-3ef5  32768   13     305     10111100</span><br></pre></td></tr></table></figure><h3 id="测试活动链路阈值"><a href="#测试活动链路阈值" class="headerlink" title="测试活动链路阈值"></a>测试活动链路阈值</h3><p>前面设定Eth-Trunk 1 的活动链路下限阈值是2，如果当前配置关闭两个端口g0/0/11和g0/0/12，只留下一个端口g0/0/10，会导致Eth-Trunk 1变为down状态。</p><ul><li><strong>display trunkmembership eth-trunk 1</strong>：查看Eth-Trunk接口的状态以及成员接口的状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int g0/0/11</span><br><span class="line">[SW1-GigabitEthernet0/0/11]shutdown</span><br><span class="line">[SW1]int g0/0/12</span><br><span class="line">[SW1-GigabitEthernet0/0/12]shutdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有接口都是非活动状态 Operate status: down </span></span><br><span class="line">[SW1]display trunkmembership eth-trunk 1</span><br><span class="line">Trunk ID: 1 </span><br><span class="line">Used status: VALID </span><br><span class="line">TYPE: ethernet </span><br><span class="line">Working Mode : Static </span><br><span class="line">Number Of Ports <span class="keyword">in</span> Trunk = 3</span><br><span class="line">Number Of Up Ports <span class="keyword">in</span> Trunk = 0</span><br><span class="line">Operate status: down </span><br><span class="line">Interface GigabitEthernet0/0/10, valid, operate down, weight=1</span><br><span class="line">Interface GigabitEthernet0/0/11, valid, operate down, weight=1</span><br><span class="line">Interface GigabitEthernet0/0/12, valid, operate down, weight=1</span><br><span class="line"></span><br><span class="line">[SW1]int g0/0/11</span><br><span class="line">[SW1-GigabitEthernet0/0/11]undo shutdown</span><br><span class="line">[SW1]int g0/0/12</span><br><span class="line">[SW1-GigabitEthernet0/0/12]undo shutdown</span><br></pre></td></tr></table></figure><p>再次开启g0/0/11和g0/0/12，Eth-trunk 1恢复正常。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[SW1-GigabitEthernet0/0/11]q</span><br><span class="line">[SW1]dis trunkmembership eth-trunk 1</span><br><span class="line">Trunk ID: 1 </span><br><span class="line">Used status: VALID </span><br><span class="line">TYPE: ethernet </span><br><span class="line">Working Mode : Static </span><br><span class="line">Number Of Ports <span class="keyword">in</span> Trunk = 3</span><br><span class="line">Number Of Up Ports <span class="keyword">in</span> Trunk = 2</span><br><span class="line">Operate status: up </span><br><span class="line">Interface GigabitEthernet0/0/10, valid, operate down, weight=1</span><br><span class="line">Interface GigabitEthernet0/0/11, valid, operate up, weight=1</span><br><span class="line">Interface GigabitEthernet0/0/12, valid, operate up, weight=1</span><br></pre></td></tr></table></figure><h3 id="LACP负载分担方式"><a href="#LACP负载分担方式" class="headerlink" title="LACP负载分担方式"></a>LACP负载分担方式</h3><p>可以通过配置LACP负载分担方式，将不同的数据流分布在不同的活动链路上，为了避免发生数据包乱序情况，应设置通过同一条活动链路发送同一个数据流。使用散列算法生成数据流的散列值，交换机根据散列值在Eth-Trunk中选择对应的出接口，每条数据流计算出的散列值不同，这样既保证了通过同一条链路发送同一个数据流的数据帧，也能够让多条活动链路负载分担不同的数据流。<br>散列值计算因素：</p><ul><li>目的IP地址</li><li>目的MAC地址</li><li>源IP地址</li><li>源MAC地址</li><li>源IP地址异或目的IP地址</li><li>源MAC地址异或目的MAC地址</li></ul><p>Eth-Trunk链路两端设备上的负载分担方式可以不一致，因为<strong>负载分担只对本地设备出方向的流量有效果</strong>，所以两端配置互相不影响。</p><ul><li>load-balance {dst-ip | dst-mac |src-ip|src-mac|src-dst-ip|src-dst-mac}：Eth-Trunk接口视图命令，配置Eth-Trunk的负载分担方式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[SW1]interface Eth-Trunk 1</span><br><span class="line">[SW1-Eth-Trunk1]load-balance src-mac</span><br><span class="line"></span><br><span class="line"><span class="comment"># Hash arithmetic: According to SA   基于源MAC地址（SA）</span></span><br><span class="line">[SW1]display eth-trunk 1</span><br><span class="line">Eth-Trunk1<span class="string">&#x27;s state information is:</span></span><br><span class="line"><span class="string">Local:</span></span><br><span class="line"><span class="string">LAG ID: 1                   WorkingMode: STATIC                               </span></span><br><span class="line"><span class="string">Preempt Delay Time: 10      Hash arithmetic: According to SA                  </span></span><br><span class="line"><span class="string">System Priority: 30000      System ID: 4c1f-ccd5-7970                         </span></span><br><span class="line"><span class="string">Least Active-linknumber: 2  Max Active-linknumber: 2                          </span></span><br><span class="line"><span class="string">Operate status: up          Number Of Up Port In Trunk: 2 </span></span><br></pre></td></tr></table></figure><h1 id="堆叠模式"><a href="#堆叠模式" class="headerlink" title="堆叠模式"></a>堆叠模式</h1><p>多条物理链路可以捆绑为一条虚拟的逻辑链路，多台物理交换机也可以捆绑为一台逻辑上的交换机，以此提升冗余性，这就是堆叠技术。使用堆叠技术的几台交换机可以根据交换机的启动状态，优先级和MAC地址选举一台主交换机，这台主交换机负责管理逻辑交换机，并从其他交换机收集网络拓扑信息，同时选举一台备用交换机，在主交换机故障时接替主交换机。在完成选举后，其他交换机都会同步并运行主交换机的配置文件。管理员只需要对主交换机发起管理就可以管理整个堆叠。</p><ul><li>集群：使用华为S12700系列的框式交换机完成堆叠，称为CSS（Cluster Switch System）集群交换机系统，只支持两台交换机</li><li>智能堆叠：使用华为S5700系列的盒式交换机，称为iStack（intelligent Stack）智能堆叠，支持多台交换机</li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> 链路聚合堆叠 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> 链路聚合 </tag>
            
            <tag> 堆叠 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-2-VLAN介绍</title>
      <link href="/huawei_vlan/"/>
      <url>/huawei_vlan/</url>
      
        <content type="html"><![CDATA[<p><strong>VLAN 虚拟局域网</strong><br>虚拟局域网vlan主要用于隔离广播域，不受地域限制，同一个vlan的设备才能进行二层通信。<a href="https://blog.csdn.net/weixin_55807049/article/details/122673738">文章参考</a></p><h1 id="VLAN标签"><a href="#VLAN标签" class="headerlink" title="VLAN标签"></a>VLAN标签</h1><p>vlan tag 在报文中添加标识vlan的字段 IEEE 802.1Q协议规定，在以太网的数据帧中添加4字节的vlan标签，简称tag<br>缩小广播域，隔离广播域 </p><ul><li>VLANID由12bit组成，所以就有2^12=4096个VLANID</li><li>VLANID的取值范围为0-4095，一共4096个；其中0和4095保留不用，可使用的VLANID范围为：1-4094<br>（温馨提示：VLANID 1尽量别用，因为不同厂商对VLANid 1的默认配置不同，在使用过程中，很可能导致其他协议无法正常使用！！慎重！！）</li></ul><h1 id="VLAN划分"><a href="#VLAN划分" class="headerlink" title="VLAN划分"></a>VLAN划分</h1><p>基于接口划分，基于mac地址划分，基于IP子网划分，基于协议划分，基于策略划分</p><h2 id="基于接口划分"><a href="#基于接口划分" class="headerlink" title="基于接口划分"></a>基于接口划分</h2><p>网路管理员给每个接口划分不同的PVID，将该接口划入对应的VLAN；如果一个数据帧进入是没有带vlan标签（无标记帧），该数据帧就会被打上接口指定PVID对应的tag；<strong>取值范围1-4094</strong></p><h2 id="接口类型"><a href="#接口类型" class="headerlink" title="接口类型"></a>接口类型</h2><p>华为交换机端口类型有三种：</p><ul><li>Access：交换机上常用来连接用户PC，服务器等终端设备的接口。Access接口所连接的这些设备的网卡往往只能收发无标记帧,Access口只能加入一个VLAN；</li><li>Trunk：Trunk接口允许多个VLAN的数据帧通过，这些数据帧通过802.1Q Tag实现区分。Trunk通常用于交换机之间的互联，也用户连接路由器防火墙等设备的子接口；</li><li>Hybrid：Hybrid接口与Trunk接口类似，也允许多个VLAn的数据帧通过，这些数据帧通过802.1Q Tag实现区分，用户可以灵活指定Hybrid接口在发送某个或某些VLAn数据帧时是否携带Tag</li></ul><h3 id="access端口"><a href="#access端口" class="headerlink" title="access端口"></a>access端口</h3><p><img src="https://qiufuqi.github.io/img/hexo/20240210113546.png"></p><ul><li>收不带标签：当access接收不带标签的数据帧时，则打上自己接口的PVID，接口PVID是多少，该数据帧就属于哪个VLAN</li><li>收带标签：当access接收带标签的数据帧时，则查看该数据帧的VLAN ID和接口的PVID是否一致，一致则接收该数据帧，不一致则丢弃</li><li>发不带标签：access只能发送不带标签的数据帧，当<strong>数据帧中带有的VLAN ID和接口的PVID一致时，剥离标签发送</strong>，不一致则丢弃<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[SW1]vlan batch 10</span><br><span class="line">Info: This operation may take a few seconds. Please <span class="built_in">wait</span> <span class="keyword">for</span> a moment...done.</span><br><span class="line">[SW1]int g0/0/1</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port link-type access</span><br><span class="line">[SW1-GigabitEthernet0/0/1]port default vlan 10</span><br></pre></td></tr></table></figure></li></ul><h3 id="trunk接口"><a href="#trunk接口" class="headerlink" title="trunk接口"></a>trunk接口</h3><p>允许通行列表，决定是否能放行。PVID不影响通行，只影响是否剥离标签或直接带着原有的标签发送。干道链路，用于交换机之间互联，在一条链路上可以传输多个VLAN的数据帧，trunk接口在于允许同性列表，只要允许通行必定能被接收/发送<br><img src="https://qiufuqi.github.io/img/hexo/20240210114354.png"></p><ul><li>收不带标签：当trunk接收不带标签的数据帧时，首先打上该接口的PVID，然后看是否允许通行，如果允许则从该接口接入，否则丢弃</li><li>收带标签：当trunk接收带标签的数据帧时，只看该VLAN ID是否允许通行，如果允许则接收</li><li>发数据帧：当trunk接口发送数据帧时，先看是否允许通行，如果允许则发送，不允许则丢弃<br>在允许的前提下，如果数据帧的VLAN ID和接口的PVID一致，则<strong>剥离标签发出</strong>，如果不一致则直接发<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int g0/0/2</span><br><span class="line">[SW1-GigabitEthernet0/0/2]port link-type trunk </span><br><span class="line">[SW1-GigabitEthernet0/0/2]port trunk pvid vlan 10      <span class="comment"># 将接口PVID标识更改为vlan 10 （发送vlan10的数据时，会剥离标签，成不带标签帧）</span></span><br><span class="line">[SW1-GigabitEthernet0/0/2]port trunk allow-pass vlan 10 20 </span><br></pre></td></tr></table></figure></li></ul><h3 id="hybrid接口"><a href="#hybrid接口" class="headerlink" title="hybrid接口"></a>hybrid接口</h3><p><img src="https://qiufuqi.github.io/img/hexo/20240210115753.png"><br>hybrid接受帧的处理方式与trunk一致；发送帧的处理方式，管理员来自己设置。hybrid接口是华为默认接口，没配置之前，<strong>所有端口默认都是hybrid接口</strong>。<br>hybrid接口的untagged和tagged：接收帧时不影响； 只影响发送帧 即只有发送数据帧时才会考虑是否tagged或untagged</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[SW1]int g0/0/2</span><br><span class="line">[SW1-GigabitEthernet0/0/2]port link-type hybrid </span><br><span class="line"><span class="comment"># 将接口PVID标识更改为vlan 10</span></span><br><span class="line">[SW1-GigabitEthernet0/0/2]port hybrid pvid vlan 10    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许放行vlan10 20 并且发送数据时保留标签发送；允许放行vlan 30 40 并且发送数据时剥离标签发送</span></span><br><span class="line">[SW1-GigabitEthernet0/0/2]port hybrid tagged vlan 10 20</span><br><span class="line">[SW1-GigabitEthernet0/0/2]port hybrid untagged vlan 30 40</span><br></pre></td></tr></table></figure><h3 id="端口收发总结"><a href="#端口收发总结" class="headerlink" title="端口收发总结"></a>端口收发总结</h3><p><img src="https://qiufuqi.github.io/img/hexo/20240210120254.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> VLAN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 端口 </tag>
            
            <tag> 华为 </tag>
            
            <tag> VLAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为-5-生成树STP</title>
      <link href="/huawei_rstp/"/>
      <url>/huawei_rstp/</url>
      
        <content type="html"><![CDATA[<p><strong>生成树协议主要为了防止环路产生</strong><br>交换机环路会导致广播风暴，MAC地址震荡（从不同端口学习到MAC地址，不停更新）等后果。交换机在缺省状态下已启用了STP（Spanning Tree Protocol）、RSTP（Rapid Spanning Tree Protocol 快速生成树协议）、MSTP（Multiple Spanning Tree Protocol多生成树协议），无须担心环路产生，但是生产环境中需要对此进行一定的优化，比如确定根桥的位置等等</p><h1 id="STP工作机制："><a href="#STP工作机制：" class="headerlink" title="STP工作机制："></a>STP工作机制：</h1><p>首先，局域网中的交换机互相交换BPDU（Bridge Protocol Data Unit 桥协议数据单元）消息，选举一台根交换机(Root)，根交换机的所有端口自动成为DP（Designated Port 指定端口）,非根交换机会自动选择距离<strong>根交换机</strong>最近的端口作为RP（Root Port 根端口），然后每条链路会选举一个距离<strong>根交换机</strong>最近的端口作为DP，最后既不是RP也不是DP的端口会被阻塞，形成一个无环路的数据链路网络。<br>建立STP树后，只有根交换机周期性的发送配置BPDU，非根交换机在收到配置BPDU后通过指定端口把配置BPDU发送出去，实现配置BPDU从根交换机到非根交换机的传输</p><h2 id="BPDU封装字段："><a href="#BPDU封装字段：" class="headerlink" title="BPDU封装字段："></a>BPDU封装字段：</h2><p>| PID | PVI | BPDU类型 | 标识 | 根ID | RPC | 桥ID | 端口ID | 消息寿命 | 最大寿命 | Hello时间 |  转发时延 |</p><ul><li>PID：Protocol ID 协议ID，取值为0</li><li>PVI：Protocol Version ID 协议版本ID，取值为0</li><li>BPDU类型：BPDU类型为两种 0x00开头为配置BPDU 配置BPDU从根交换机到各个交换机的传输；0x80的为TCN BPDU<br>非根交换机在检测到拓扑变化后，通过根端口生成，并且向根交换机发送</li><li>标识：标明BPDU的类型</li><li>根ID：ROOT ID，标识根交换机的桥ID，一台交换机在启动后会把自己的桥ID设置为根ID，向其他交换机发送封装好的BPDU，在收到其他交换机的BPDU后会比较<strong>根ID</strong>，选取最小的最为网络中的根交换机</li><li>RPC：Root Path Cost 根路径开销，标识交换机端口到根交换机的开销。因此在交换机端口选举中，RPC较小的端口会赢得选举。一个启用STP端口的开销值默认与端口的带宽成反比。也可以<strong>手动设置端口的开销值</strong>，一个端口的RPC等于<strong>BPDU从根交换机到这台设备的路径中，经历的所有入站接口的开销之和</strong></li><li>桥ID：Bridge ID 由高16为的桥优先级和低48位的mac地址组成。桥优先级有16为，范围0-65536（2的16次方），可以<strong>手动设置桥优先级</strong>，<strong>值必须是4096的整数倍</strong>，默认值是32768，交换机交换BPDU时，桥ID最小的为根路由。</li><li>端口ID：Port ID，在特定情况下选举端口。端口由高4位的端口优先级和低12位的端口号组成，可以<strong>手动设置端口优先级</strong>，默认值时128，取值范围0-240，<strong>端口优先级必须是16的整数倍</strong></li><li>消息寿命：标识配置BPDU从根交换机发出后经历过几台交换机的转发</li><li>最大寿命：标识交换机经过多长时间没收到BPDU后认为该链路发生了故障，默认值是20s</li><li>Hello时间：根交换机周期性的发送配置BPDU的时间间隔，默认时间是2s</li><li>转发时延：交换机在侦听(Listening)到学习(learning)状态下停留时间，默认时间是15s</li></ul><h1 id="STP选举流程"><a href="#STP选举流程" class="headerlink" title="STP选举流程"></a>STP选举流程</h1><ul><li>选举<strong>根交换机</strong>：首先各个交换机将自己的桥ID设置为根ID封装进BPDU中，并且互相交换BPDU，并将收到的BPDU中的根ID和自己的桥ID做比较，选择最小的最为根交换机</li><li>选择<strong>根端口</strong>：确定根交换机后，非根交换机选择距离根交换机最近的端口最为根端口RP；每台非根交换机会比较所有端口的RPC，如果两个及以上端口的RPC相同，那么非根交换机会选择<strong>对端</strong>桥ID最低的端口，如果多个对端桥ID相同，那么非根交换机选择对端端口ID最低的端口，如果对端端口ID相同，非根交换机比较自己本地端口的端口ID，选择对地端口。<strong>RPC &gt; 对端桥ID（连了不止一根线） &gt; 对端桥端口ID &gt; 本地端口ID</strong></li><li>选择<strong>指定端口</strong>：选举规则如下：首先<strong>根交换机的所有端口为指定端口</strong>，其次按照以下顺序排序<ul><li>RPC最低的端口</li><li>如果多个端口的RPC相同，那么桥ID最低的端口</li><li>如果多个端口的桥ID相同，端口ID最低的被选举为指定端口</li></ul></li><li><strong>预备端口</strong>：一旦根交换机，根端口，指定端口选举完成，其余的端口就会被阻塞，也叫做预备端口</li><li><h1 id="端口类型："><a href="#端口类型：" class="headerlink" title="端口类型："></a>端口类型：</h1>此处数据链路指交换机相互连接的物理链路和交换机端口</li><li>根端口（RP）：在非根交换机上选举出的一个端口，<strong>距离根交换机最近</strong>的端口<br>选举原则：（从上到下依次匹配，直到确定）<ul><li>RPC开销最小原则<br>如下图所示，交换机2的两个端口RPC分别是g0/0/1=199,g0/0/3=199+200,所以g0/0/1为RP端口，同理交换机3也是<br><img src="https://qiufuqi.github.io/img/hexo/20240210085641.png"></li><li>对端桥ID优先级高<br>如下图所示，交换机4的两个端口的RPC相同，都是199+200，此时比较对端桥ID的优先级即交换机2和交换机3的优先级，此时假定交换机2的优先级更高，则交换机4和交换机2相连的端口g0/0/2为RP<br><img src="https://qiufuqi.github.io/img/hexo/20240210090936.png"></li><li>对端端口ID最小<br>如下图所示，交换机2的三个端口，g0/0/3最先被排除(RPC开销最大)，g0/0/1和g0/0/5开销相同，对端桥ID相同（都是根桥），此时需要比较对端端口ID的大小来确定RP，交换机1连接交换机2的两个端口g0/0/2小一点，所以对应交换机2的g0/0/1端口设置为根端口RP<br><img src="https://qiufuqi.github.io/img/hexo/20240210090406.png"></li><li>本地端口<br>如果对端端口ID也相同，就比较本地交换机的端口，选取最小的为根端口RP</li></ul></li><li>指定端口（DP）：<strong>每个数据链路网段中只能有一个指定端口</strong>(一条数据链路上只能有一个指定端口，另一个端口要么为根端口RP，要么为预备端口AP)，根交换机的所有端口为指定端口DP<br>选举原则：（从上到下依次匹配，直到确定）<ul><li>RPC开销最小原则</li><li>桥ID（交换机优先级）最高<br>如下图所示，交换机2的端口g0/0/3=199+200和交换机3的端口g0/0/2=199+200,RPC开销相同，比较桥优先级，此处假定交换机2的优先级更高，则交换机2的端口g0/0/3为指定端口DP，相对应的交换机3的端口g0/0/2设置为预备端口即阻塞端口RP，防止回路产生<br><img src="https://qiufuqi.github.io/img/hexo/20240210085641.png"></li><li>端口ID优先级最高<br>如下图所示，交换机2的端口g0/0/1和g0/0/5端口的RPC相同，桥ID相同(同一个)，g0/0/5端口优先级低一点，所以g0/0/5设定为RP端口<br><img src="https://qiufuqi.github.io/img/hexo/20240210090406.png"></li></ul></li><li>预备端口（AP）：非根端口且非指定端口，会侦听网段中传输的BPDU（网桥协议数据单元），但不会转发数据</li></ul><table><thead><tr><th align="left">端口角色</th><th align="left">发送BPDU</th><th align="left">接收BPDU</th><th align="left">发送数据</th><th align="left">接收数据</th></tr></thead><tbody><tr><td align="left">根端口RP</td><td align="left">是</td><td align="left">是</td><td align="left">是</td><td align="left">是</td></tr><tr><td align="left">指定端口DP</td><td align="left">是</td><td align="left">是</td><td align="left">是</td><td align="left">是</td></tr><tr><td align="left">预备端口AP</td><td align="left">否</td><td align="left">是</td><td align="left">否</td><td align="left">否</td></tr></tbody></table><p>根交换机的角色是可以抢占的，如果一个以太网已经选举出根交换机，此时一个根ID值比根交换机更小的交换机接入到网络，那么就会抢占根交换机的角色。一般如果希望某台交换机一直作为根交换机的角色，就将次交换机的桥优先级设置为0。</p><h1 id="STP接口状态"><a href="#STP接口状态" class="headerlink" title="STP接口状态"></a>STP接口状态</h1><p>阻塞状态（Blocking），侦听状态（Listening），学习状态（Learning），转发状态（Forwarding）</p><ul><li>阻塞状态：当一个端口既不是RP，也不是DP，会被阻塞，避免出现环路；接收处理BPDU，不学习MAC地址，不转发BPDU，也不会转发数据帧</li><li>侦听状态：端口已经是RP或者DP，是一种过度状态，不学习MAC地址，转发BPDU，不转发数据帧，默认情况下该状态持续15s</li><li>学习状态：侦听结束后的下一个状态，学习MAC地址，转发BPDU，不转发数据，默认情况下该状态持续15s</li><li>转发状态：转发状态是一个端口履行其正常交换功能的装填，学习MAC地址，转发BPDU，转发数据帧<table><thead><tr><th align="left">状态</th><th align="left">接收处理BPDU</th><th align="left">对外发送BPDU</th><th align="left">学习MAC地址</th><th align="left">转发数据帧</th></tr></thead><tbody><tr><td align="left">阻塞状态</td><td align="left">是</td><td align="left">否</td><td align="left">否</td><td align="left">否</td></tr><tr><td align="left">侦听状态</td><td align="left">是</td><td align="left">是</td><td align="left">否</td><td align="left">否</td></tr><tr><td align="left">学习状态</td><td align="left">是</td><td align="left">是</td><td align="left">是</td><td align="left">否</td></tr><tr><td align="left">转发状态</td><td align="left">是</td><td align="left">是</td><td align="left">是</td><td align="left">是</td></tr></tbody></table></li></ul><h1 id="STP基本实验"><a href="#STP基本实验" class="headerlink" title="STP基本实验"></a>STP基本实验</h1><p>实验拓扑图如下<br><img src="https://qiufuqi.github.io/img/hexo/20240209213130.png"></p><h2 id="查看端口角色"><a href="#查看端口角色" class="headerlink" title="查看端口角色"></a>查看端口角色</h2><p>dis stp brief</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看交换机上STP端口角色</span></span><br><span class="line">dis stp brief</span><br><span class="line">以下示例可看出交换机3为根交换机（Role都是DESI，指定端口），交换机2的G0/0/1端口为阻塞状态（Role是ALTE，状态不是转发状态）</span><br><span class="line">[SW1]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/2        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        ROOT  FORWARDING      NONE</span><br><span class="line">[SW2]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        ALTE  DISCARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        ROOT  FORWARDING      NONE</span><br><span class="line">[SW3]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/2        DESI  FORWARDING      NONE</span><br></pre></td></tr></table></figure><h2 id="设置根交换机"><a href="#设置根交换机" class="headerlink" title="设置根交换机"></a>设置根交换机</h2><p>stp root primary</p><ul><li>stp enable ：全局启用STP命令，可以在接口状态下启用或关闭undo stp enable</li><li>stp mode stp：改变stp模式，stp，rstp和mstp，默认为mstp</li><li>stp root primary: 将交换机设置为根交换机，它的效果是将设备的优先级更改为0，默认是32768</li><li>stp root secondary: 将交换机设置为备用根交换机，设备优先级更改为4096</li><li>stp priority 数字：设置交换机的设备优先级，数字需要为4096的整数倍<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置交换机为根交换机 连接的交换机stp模式需要一样</span></span><br><span class="line">stp root primary</span><br><span class="line">设置SW1为根交换机</span><br><span class="line">[SW1]stp <span class="built_in">enable</span></span><br><span class="line">[SW1]stp mode stp</span><br><span class="line">Info: This operation may take a few seconds. Please <span class="built_in">wait</span> <span class="keyword">for</span> a moment...done.</span><br><span class="line">[SW1]stp root primary</span><br><span class="line"></span><br><span class="line">[SW2]stp mode stp</span><br><span class="line">Info: This operation may take a few seconds. Please <span class="built_in">wait</span> <span class="keyword">for</span> a moment...done.</span><br><span class="line"></span><br><span class="line">[SW3]stp mode stp</span><br><span class="line">Info: This operation may take a few seconds. Please <span class="built_in">wait</span> <span class="keyword">for</span> a moment...done.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看端口stp状态"><a href="#查看端口stp状态" class="headerlink" title="查看端口stp状态"></a>查看端口stp状态</h2>dis stp interface 端口号<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SW2]dis stp interface g0/0/3</span><br></pre></td></tr></table></figure><h2 id="更改端口开销"><a href="#更改端口开销" class="headerlink" title="更改端口开销"></a>更改端口开销</h2>端口模式下：stp cost ***<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[SW2]int g0/0/3</span><br><span class="line">[SW2-GigabitEthernet0/0/3]stp cost 10000</span><br></pre></td></tr></table></figure><h2 id="端口根保护"><a href="#端口根保护" class="headerlink" title="端口根保护"></a>端口根保护</h2>端口模式下：stp <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启用端口根保护，Protection会显示</span></span><br><span class="line">[SW2]int g0/0/3</span><br><span class="line">[SW2-GigabitEthernet0/0/3]stp root-protection</span><br><span class="line">[SW2]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        ROOT  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        ALTE  DISCARDING      ROOT</span><br></pre></td></tr></table></figure><h2 id="端口环路保护"><a href="#端口环路保护" class="headerlink" title="端口环路保护"></a>端口环路保护</h2>端口模式下：stp loop-protection <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[SW3]int g0/0/2</span><br><span class="line">[SW3-GigabitEthernet0/0/2]stp loop-protection </span><br><span class="line">[SW3]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        ROOT  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/2        DESI  FORWARDING      LOOP</span><br></pre></td></tr></table></figure></li></ul><h2 id="BPDU保护和边缘端口"><a href="#BPDU保护和边缘端口" class="headerlink" title="BPDU保护和边缘端口"></a>BPDU保护和边缘端口</h2><p>各种各样的终端设备可能连接到网络，这些设备不会发送BPDU以及参与STP运行，通过BPDU保护和设置边缘端口。</p><ul><li>stp bpdu-protection：系统视图下，在交换机上启用BPDU保护</li><li>stp edged-port enable：接口配置，可将端口配置为边缘端口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[SW3]stp bpdu-protection</span><br><span class="line">[SW3]int g0/0/1</span><br><span class="line">[SW3-GigabitEthernet0/0/1]stp edged-port <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>启用了BPDU保护的边缘端口在收到BPDU后（不小心连接）进入到ERROR DOWN状态，设置30秒后自动恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[SW3]error-down auto-recovery cause bpdu-protection interval 30</span><br></pre></td></tr></table></figure><h1 id="MSTP基本实验"><a href="#MSTP基本实验" class="headerlink" title="MSTP基本实验"></a>MSTP基本实验</h1><p>MSTP可以根据vlan来构建无环路路径树，MSTP不仅可以提供备份路径，还可以实现负载分担。<br>实验拓扑图如下<br><img src="https://qiufuqi.github.io/img/hexo/20240210102156.png"><br>首先实现基本配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SW1，SW2，SW3同理，链接端口都设置为trunk，放行所有vlan</span></span><br><span class="line">[SW1]vlan batch 2 3</span><br><span class="line">Info: This operation may take a few seconds. Please <span class="built_in">wait</span> <span class="keyword">for</span> a moment...done.</span><br><span class="line">[SW1]int g0/0/2</span><br><span class="line">[SW1-GigabitEthernet0/0/2]port link-type trunk</span><br><span class="line">[SW1-GigabitEthernet0/0/2]port trunk allow-pass vlan all</span><br><span class="line">[SW1]int g0/0/3</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port link-type trunk</span><br><span class="line">[SW1-GigabitEthernet0/0/3]port trunk allow-pass vlan all</span><br></pre></td></tr></table></figure><h2 id="更改STP运行模式"><a href="#更改STP运行模式" class="headerlink" title="更改STP运行模式"></a>更改STP运行模式</h2><p>华为交换机默认的STP运行模式就是MSTP，以下两条命令可以更改为MSTP</p><ul><li>stp mode mstp：将STP模式更改为MSTP</li><li>undo stp mode：将STP模式恢复为默认的MSTP</li></ul><h2 id="MSTP域配置"><a href="#MSTP域配置" class="headerlink" title="MSTP域配置"></a>MSTP域配置</h2><p>MSTP加入了域的概念，要想使多个交换机属于同一个MST域，则需要有一些相同的配置</p><ul><li>MST域的域名：默认情况下，MST域名是设备管理口的MAC地址</li><li>MST实例与VLAN的映射关系：默认情况下，MST域内的所有VLAN都映射到MST0</li><li>MST域的修订级别：默认情况下，MST域的修订级别为0，可选配置，若MST域中的所有设备修订级别都是0，则无须修改</li></ul><p>配置MST域的步骤如下</p><ul><li>使用系统视图命令 <strong>stp region-configuration</strong> 进入到MST域视图</li><li>使用MST域视图命令 <strong>region-name name</strong> 设置MST域的域名，所有设备保持一致</li><li>使用MST域视图命令 <strong>instance (instnce-id) vlan (vlan id [to vlan id2])</strong> 配置MST实例与VLAN的映射关系，所有设备保持一致</li><li>(可选)使用MST域视图命令 <strong>revision-level (level)</strong> 配置MST域的修订级别，所有设备保持一致</li><li>使用MST域视图命令 <strong>active region-configuration</strong> 激活MST域的配置，使上述配置全部生效</li></ul><p>在三台交换机上分别执行MSTP配置，MSTP域名为HCIA，实例2与vlan2映射，实例3与vlan3映射，更改修订级别为1<br>配置完成后可以通过 </p><ul><li><strong>display stp brief</strong>：查看端口状态</li><li><strong>display stp region-configuration</strong>：查看MSTP参数</li><li><strong>display stp instance instance-id brief</strong>：查看具体实例的STP状态</li><li><strong>display stp vlan vlan-id</strong>：查看某个vlan的STP状态</li><li><strong>display stp interface GigabitEthernet 0/0/1</strong>：查看某个端口的STP状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[SW1]stp region-configuration </span><br><span class="line">[SW1-mst-region]region-name HCIA</span><br><span class="line">[SW1-mst-region]instance 2 vlan 2</span><br><span class="line">[SW1-mst-region]instance 3 vlan 3</span><br><span class="line">[SW1-mst-region]revision-level 1</span><br><span class="line">[SW1-mst-region]active region-configuration </span><br><span class="line">[SW1]dis stp region-configuration </span><br><span class="line"> Oper configuration</span><br><span class="line">   Format selector    :0             </span><br><span class="line">   Region name        :HCIA             </span><br><span class="line">   Revision level     :1</span><br><span class="line"></span><br><span class="line">   Instance   VLANs Mapped</span><br><span class="line">      0       1, 4 to 4094</span><br><span class="line">      2       2</span><br><span class="line">      3       3</span><br></pre></td></tr></table></figure><p>通过<strong>dis stp brief</strong>确定，在所有实例中，根交换机都是SW2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[SW1]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/2        ROOT  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/2        ROOT  FORWARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/2        ROOT  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">[SW2-mst-region]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">[SW3]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        ALTE  DISCARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/2        ROOT  FORWARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/1        ALTE  DISCARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/2        ROOT  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/1        ALTE  DISCARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/2        ROOT  FORWARDING      NONE</span><br></pre></td></tr></table></figure><h2 id="手动配置根交换机"><a href="#手动配置根交换机" class="headerlink" title="手动配置根交换机"></a>手动配置根交换机</h2><p>手动配置根交换机，备用根交换机。</p><ul><li><strong>stp [instance instancd-id] root primary</strong>：系统视图命令，将当前设备设置为根交换机，如果不指定instance，则会将设备配置为实例0的根交换机</li><li><strong>stp [instance instance-id] root secondary</strong>：系统视图命令，将当前设备设置为备用根交换机，如果不指定instance，则会将设备配置为实例0的备用根交换机</li></ul><p>比如将SW1设置为总根交换机，SW2设置为实例2的根交换机，SW3设置为实例3的根交换机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[SW1]stp root primary</span><br><span class="line">[SW2]stp instance 2 root primary</span><br><span class="line">[SW3]stp instance 3 root primary </span><br><span class="line"></span><br><span class="line">[SW1]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/2        DESI  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/2        ROOT  FORWARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/2        ALTE  DISCARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/3        ROOT  FORWARDING      NONE</span><br><span class="line">[SW2]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        ROOT  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/3        DESI  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/3        ROOT  FORWARDING      NONE</span><br><span class="line">[SW3]dis stp brief</span><br><span class="line"> MSTID  Port                        Role  STP State     Protection</span><br><span class="line">   0    GigabitEthernet0/0/1        ROOT  FORWARDING      NONE</span><br><span class="line">   0    GigabitEthernet0/0/2        ALTE  DISCARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/1        ALTE  DISCARDING      NONE</span><br><span class="line">   2    GigabitEthernet0/0/2        ROOT  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/1        DESI  FORWARDING      NONE</span><br><span class="line">   3    GigabitEthernet0/0/2        DESI  FORWARDING      NONE</span><br></pre></td></tr></table></figure><p>总根交换机各个端口：<br><img src="https://qiufuqi.github.io/img/hexo/20240210102415.png"><br>实例2根交换机各个端口：<br><img src="https://qiufuqi.github.io/img/hexo/20240210102604.png"><br>实例3根交换机各个端口：<br><img src="https://qiufuqi.github.io/img/hexo/20240210102724.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> STP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> STP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux升级GLIBC问题.md</title>
      <link href="/centos_GLIBC/"/>
      <url>/centos_GLIBC/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/FengZeng666/p/15989106.html">GLIBC升级参考</a></p><h2 id="升级GLIBC"><a href="#升级GLIBC" class="headerlink" title="升级GLIBC"></a>升级GLIBC</h2><p>当编译时遇到报错，安装升级GLIBC</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./nginx-vtx-exporter: /lib64/libc.so.6: version `GLIBC_2.32<span class="string">&#x27; not found (required by ./nginx-vtx-exporter)</span></span><br><span class="line"><span class="string">./nginx-vtx-exporter: /lib64/libc.so.6: version `GLIBC_2.34&#x27;</span> not found (required by ./nginx-vtx-exporter)</span><br></pre></td></tr></table></figure><p>升级GLIBC到2.34版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wget  https://mirror.bjtu.edu.cn/gnu/libc/glibc-2.34.tar.xz</span><br><span class="line">wget http://ftp.gnu.org/gnu/glibc/glibc-2.32.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xf glibc-2.34.tar.xz -C /usr/local/</span><br><span class="line"><span class="built_in">cd</span> /usr/local/glibc-2.34/</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build/</span><br><span class="line"><span class="comment">## 这一步会出现较多报错，逐个解决</span></span><br><span class="line">../configure  --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin</span><br><span class="line"><span class="comment"># 时间会比较久，耐心等待 或者使用 # -j 8是用8个线程编译，跑的更快</span></span><br><span class="line">make -j 8 或者 make</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>通过 strings /lib64/libc.so.6 | grep -E “^GLIBC” | sort -V -r | uniq 查询是否存储在对应版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings /lib64/libc.so.6 | grep -E <span class="string">&quot;^GLIBC&quot;</span> | <span class="built_in">sort</span> -V -r | <span class="built_in">uniq</span></span><br></pre></td></tr></table></figure><h2 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h2><p>运行到../configure –prefix=/usr/local/glibc-2.34时报错<br>报错1：<br>configure: error: in `/root/test/glibc-2.34/build’:<br>configure: error: no acceptable C compiler found in $PATH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc -y</span><br></pre></td></tr></table></figure><p>报错2：<br>*** These critical programs are missing or too old: make bison python<br>*** Check the INSTALL file for required versions.<br>解决方案： make bison python太过老旧。 一次升级解决</p><h3 id="升级GCC编译器"><a href="#升级GCC编译器" class="headerlink" title="升级GCC编译器"></a>升级GCC编译器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install centos-release-scl</span><br><span class="line">yum -y install devtoolset-8-gcc devtoolset-8-gcc-c++ devtoolset-8-binutils</span><br><span class="line">scl <span class="built_in">enable</span> devtoolset-8 bash</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source /opt/rh/devtoolset-8/enable&quot;</span> &gt;&gt;/etc/profile</span><br></pre></td></tr></table></figure><h3 id="升级make"><a href="#升级make" class="headerlink" title="升级make"></a>升级make</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget http://ftp.gnu.org/gnu/make/make-4.2.tar.gz</span><br><span class="line">tar -xzvf make-4.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> make-4.2</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">rm</span> -rf /usr/bin/make</span><br><span class="line"><span class="built_in">cp</span> ./make /usr/bin/</span><br><span class="line">make -v</span><br></pre></td></tr></table></figure><h3 id="升级bison"><a href="#升级bison" class="headerlink" title="升级bison"></a>升级bison</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y bison</span><br></pre></td></tr></table></figure><h3 id="升级python"><a href="#升级python" class="headerlink" title="升级python"></a>升级python</h3><p>系统默认python是2.7版本，需要升级<a href="/python_upgrate">python升级参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> GLIBC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> GLIBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus监控之vmware_exporter</title>
      <link href="/prometheus_vmware/"/>
      <url>/prometheus_vmware/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/hanzheng260561728/article/details/128128498">部署参考</a></p><h2 id="部署docker"><a href="#部署docker" class="headerlink" title="部署docker"></a>部署docker</h2><p>提前安装<a href="/docker_install">部署docker环境</a></p><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p>放行9272端口或者关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=9272/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h2><p>docker 运行vmware_exporter，端口9272</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker pull pryorda/vmware_exporter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试运行</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span>  -p 9272:9272 -e VSPHERE_USER=<span class="variable">$&#123;VSPHERE_USERNAME&#125;</span> -e VSPHERE_PASSWORD=<span class="variable">$&#123;VSPHERE_PASSWORD&#125;</span> -e VSPHERE_HOST=<span class="variable">$&#123;VSPHERE_HOST&#125;</span> -e VSPHERE_IGNORE_SSL=True -e VSPHERE_SPECS_SIZE=2000 --name vmware_exporter pryorda/vmware_exporter</span><br><span class="line"></span><br><span class="line">docker run -it --<span class="built_in">rm</span>  -p 9272:9272 --env-file /usr/local/vmware_exporter/config.env --name vmware_exporter pryorda/vmware_exporter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正式运行</span></span><br><span class="line">docker run -d --restart=<span class="string">&quot;always&quot;</span> -p 9272:9272 --name vmware_exporter  --env-file /usr/local/vmware_exporter/config.env pryorda/vmware_exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /usr/local/vmware_exporter/config.env</span><br><span class="line">VSPHERE_USER=administrator@vsphere.local</span><br><span class="line">VSPHERE_PASSWORD=Password</span><br><span class="line">VSPHERE_HOST=10.11.7.24</span><br><span class="line">VSPHERE_IGNORE_SSL=TRUE</span><br><span class="line">VSPHERE_SPECS_SIZE=2000</span><br></pre></td></tr></table></figure><h2 id="采集结果查看"><a href="#采集结果查看" class="headerlink" title="采集结果查看"></a>采集结果查看</h2><p>浏览器访问<a href="http://youip:9272/metrics">http://YOUIP:9272/metrics</a><br><img src="https://qiufuqi.github.io/img/hexo/20240111104201.png"></p><h2 id="加入prometheus"><a href="#加入prometheus" class="headerlink" title="加入prometheus"></a>加入prometheus</h2><p><a href="https://github.com/pryorda/vmware_exporter">配置参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">- job_name: <span class="string">&#x27;vmware_esx&#x27;</span></span><br><span class="line">  metrics_path: <span class="string">&#x27;/metrics&#x27;</span></span><br><span class="line">  file_sd_configs:</span><br><span class="line">    - files:</span><br><span class="line">      - /etc/prometheus/esx.yml</span><br><span class="line">  params:</span><br><span class="line">    section: [esx]</span><br><span class="line">  relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: localhost:9272</span><br><span class="line"></span><br><span class="line">- job_name: vmware_export</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - vcenter01</span><br><span class="line">    - vcenter02</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__address__]</span><br><span class="line">    target_label: __param_target</span><br><span class="line">  - source_labels: [__param_target]</span><br><span class="line">    target_label: instance</span><br><span class="line">  - target_label: __address__</span><br><span class="line">    replacement: exporter_ip:9272</span><br><span class="line"></span><br><span class="line">- job_name: vmware_export</span><br><span class="line">  scrape_interval: 5s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - 10.11.7.24</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__address__]</span><br><span class="line">    target_label: __param_target</span><br><span class="line">  - source_labels: [__param_target]</span><br><span class="line">    target_label: instance</span><br><span class="line">  - target_label: __address__</span><br><span class="line">    replacement: 10.11.8.108:9272</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Grafana中展示"><a href="#Grafana中展示" class="headerlink" title="Grafana中展示"></a>Grafana中展示</h2><p>在 Grafana 中导入 11243 模板 <a href="https://grafana.com/grafana/dashboards/">grafana模板大全参考</a><br><img src="https://qiufuqi.github.io/img/hexo/20231205171035.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240111111441.png"></p><h2 id="告警规则"><a href="#告警规则" class="headerlink" title="告警规则"></a>告警规则</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">    - name: EXSi主机状态监控告警</span><br><span class="line">      rules:</span><br><span class="line">      - alert: EXSi主机状态</span><br><span class="line">        <span class="built_in">expr</span>: vmware_host_power_state ==0</span><br><span class="line">        <span class="keyword">for</span>: 5m</span><br><span class="line">        labels:</span><br><span class="line">          <span class="built_in">type</span>: lost</span><br><span class="line">          severity: fatal</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;EXSi主机 &#123;&#123;<span class="variable">$labels</span>.host_name&#125;&#125; 失联&quot;</span></span><br><span class="line">          description: <span class="string">&quot;EXSi任务 &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 下的主机 &#123;&#123;<span class="variable">$labels</span>.host_name&#125;&#125; 已经超过五分钟没有数据了.&quot;</span></span><br><span class="line">          monitor_url: <span class="string">&quot;http://10.0.10.120:3000/d/q1yCDNbWz/vmware-stats?orgId=1&quot;</span></span><br><span class="line"> </span><br><span class="line">      - alert: EXSi主机CPU使用情况</span><br><span class="line">        <span class="built_in">expr</span>: (vmware_host_cpu_usage / vmware_host_cpu_max) * 100 &gt;80</span><br><span class="line">        <span class="keyword">for</span>: 5m</span><br><span class="line">        labels:</span><br><span class="line">          <span class="built_in">type</span>: cpu</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;EXSi主机 &#123;&#123; <span class="variable">$labels</span>.host_name &#125;&#125; 的 CPU 使用率告警&quot;</span></span><br><span class="line">          description: <span class="string">&quot;EXSi主机 &#123;&#123; <span class="variable">$labels</span>.host_name &#125;&#125; CPU 使用率超过 80%, 当前值为： &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">          monitor_url: <span class="string">&quot;http://10.0.10.120:3000/d/q1yCDNbWz/vmware-stats?orgId=1&quot;</span></span><br><span class="line"> </span><br><span class="line">      - alert: EXSi主机内存使用</span><br><span class="line">        <span class="built_in">expr</span>: (vmware_host_memory_usage/ vmware_host_memory_max) * 100 &gt;85</span><br><span class="line">        <span class="keyword">for</span>: 5m</span><br><span class="line">        labels:</span><br><span class="line">          <span class="built_in">type</span>: mem</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;EXSi主机 &#123;&#123; <span class="variable">$labels</span>.host_name &#125;&#125; 的内存使用率告警&quot;</span></span><br><span class="line">          description: <span class="string">&quot;EXSi主机 &#123;&#123; <span class="variable">$labels</span>.host_name &#125;&#125; 的内存使用率超过 85%, 当前值为： &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">          monitor_url: <span class="string">&quot;http://10.0.10.120:3000/d/q1yCDNbWz/vmware-stats?orgId=1&quot;</span></span><br><span class="line"> </span><br><span class="line">      - alert: EXSi主机磁盘容量</span><br><span class="line">        <span class="built_in">expr</span>: ((vmware_datastore_capacity_size- vmware_datastore_freespace_size) / vmware_datastore_capacity_size) * 100  &gt;70</span><br><span class="line">        <span class="keyword">for</span>: 5m</span><br><span class="line">        labels:</span><br><span class="line">          <span class="built_in">type</span>: cpu</span><br><span class="line">          severity: warning</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;EXSi主机 &#123;&#123; <span class="variable">$labels</span>.host_name &#125;&#125; 的磁盘使用率告警&quot;</span></span><br><span class="line">          description: <span class="string">&quot;EXSi主机 &#123;&#123; <span class="variable">$labels</span>.host_name &#125;&#125; 的磁盘使用率超过 70%, 挂载点: &#123;&#123; <span class="variable">$labels</span>.mountpoint &#125;&#125; 当前值为：&#123;&#123; <span class="variable">$value</span> &#125;&#125;%&quot;</span></span><br><span class="line">          monitor_url: <span class="string">&quot;http://10.0.10.120:3000/d/q1yCDNbWz/vmware-stats?orgId=1&quot;</span></span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「遥襟」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https://blog.csdn.net/weixin_46396833/article/details/118021606</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> vmware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
            <tag> vmware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx WebUI管理</title>
      <link href="/nginx_WebUI/"/>
      <url>/nginx_WebUI/</url>
      
        <content type="html"><![CDATA[<p>Nginx WebUI是一款方便实用的nginx 网页配置工具，可以使用 WebUI 配置 Nginx 的各项功能，包括端口转发，反向代理，ssl 证书配置，负载均衡等，最终生成「nginx.conf」配置文件并覆盖目标配置文件，完成 nginx 的功能配置。<strong>数据库使用h2, 因此服务器上不需要安装任何数据库</strong><br><a href="https://www.nginxwebui.cn/">WebUI官网</a><br><a href="https://www.nginxwebui.cn/product.html">安装参考</a></p><p><img src="https://qiufuqi.github.io/img/hexo/20240111161641.png"></p><p>浏览器访问地址：<a href="http://youip:8080/adminPage/login">http://YouIP:8080/adminPage/login</a></p><h2 id="安装nginx环境"><a href="#安装nginx环境" class="headerlink" title="安装nginx环境"></a>安装nginx环境</h2><p><a href="/nginx_install">nginx安装</a></p><h1 id="jar部署WebUI"><a href="#jar部署WebUI" class="headerlink" title="jar部署WebUI"></a>jar部署WebUI</h1><h2 id="安装java环境"><a href="#安装java环境" class="headerlink" title="安装java环境"></a>安装java环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum search java|grep jdk</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum -y install java-1.8.0-openjdk </span></span><br><span class="line">[root@localhost ~]<span class="comment"># java -version</span></span><br></pre></td></tr></table></figure><h2 id="下载jar包"><a href="#下载jar包" class="headerlink" title="下载jar包"></a>下载jar包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkdir /home/nginxWebUI/</span></span><br><span class="line">[root@localhost ~]<span class="comment"># wget -O /home/nginxWebUI/nginxWebUI.jar http://file.nginxwebui.cn/nginxWebUI-3.8.2.jar</span></span><br></pre></td></tr></table></figure><h2 id="启动程序"><a href="#启动程序" class="headerlink" title="启动程序"></a>启动程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> java -jar -Dfile.encoding=UTF-8 /home/nginxWebUI/nginxWebUI.jar --server.port=8080 --project.home=/home/nginxWebUI/ &gt; /dev/null &amp;</span><br><span class="line"></span><br><span class="line">参数说明(都是非必填)</span><br><span class="line">--server.port 占用端口, 默认以8080端口启动</span><br><span class="line">--project.home 项目配置文件目录，存放数据库文件，证书文件，日志等, 默认为/home/nginxWebUI/</span><br><span class="line">--spring.database.type=mysql 使用其他数据库，不填为使用本地h2，可选mysql</span><br><span class="line">--spring.datasource.url=jdbc:mysql://ip:port/nginxwebui 数据库url</span><br><span class="line">--spring.datasource.username=root 数据库用户</span><br><span class="line">--spring.datasource.password=pass 数据库密码</span><br><span class="line">注意命令最后加一个&amp;号, 表示项目后台运行</span><br></pre></td></tr></table></figure><h2 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置nginx_webui开机自启</span></span><br><span class="line">vi /usr/lib/systemd/system/nginx_webui.service</span><br><span class="line"><span class="comment"># 写入以下信息：</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=nginxWebUI</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/bin/java -jar -Dfile.encoding=UTF-8 /home/nginxWebUI/nginxWebUI.jar --server.port=8080 --project.home=/home/nginxWebUI/ &gt; /dev/null</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start nginx_webui</span><br><span class="line">systemctl status nginx_webui</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx_webui</span><br></pre></td></tr></table></figure><h1 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h1><h2 id="安装docker环境"><a href="#安装docker环境" class="headerlink" title="安装docker环境"></a>安装docker环境</h2><p>docker环境安装(/docker_install)</p><h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker pull cym1102/nginxwebui:latest</span></span><br></pre></td></tr></table></figure><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器:"></a>启动容器:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd  --restart=<span class="string">&quot;always&quot;</span> -v /home/nginxWebUI:/home/nginxWebUI -e BOOT_OPTIONS=<span class="string">&quot;--server.port=8080&quot;</span> --privileged=<span class="literal">true</span> --net=host cym1102/nginxwebui:latest</span><br></pre></td></tr></table></figure><p>启动容器时请使用–net=host参数, 直接映射本机端口, 因为内部nginx可能使用任意一个端口, 所以必须映射本机所有端口.<br>容器需要映射路径/home/nginxWebUI:/home/nginxWebUI, 此路径下存放项目所有数据文件, 包括数据库, nginx配置文件, 日志, 证书等, 升级镜像时, 此目录可保证项目数据不丢失. 请注意备份。<br>-e BOOT_OPTIONS 参数可填充java启动参数, 可以靠此项参数修改端口号, “–server.port 占用端口”, 不填默认以8080端口启动<br>日志默认存放在/home/nginxWebUI/log/nginxWebUI.log</p><h1 id="找回密码"><a href="#找回密码" class="headerlink" title="找回密码"></a>找回密码</h1><p>如果忘记了登录密码或没有保存两步验证二维码，可按如下教程重置密码和关闭两步验证.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 停止nginxWebUI进程或停止docker容器运行</span></span><br><span class="line"><span class="comment"># 2. 使用找回密码参数运行nginxWebUI.jar, docker用户需单独下载nginxWebUI.jar运行此命令</span></span><br><span class="line">java -jar nginxWebUI.jar --project.home=/home/nginxWebUI/ --project.findPass=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>–project.home 为项目文件所在目录, 使用docker容器时为映射目录<br>–project.findPass 为是否打印用户名密码</p><p>运行成功后即可重置并打印出全部用户名密码并关闭两步验证</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Nginx </category>
          
          <category> WebUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> WebUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EXSI6.7挂载存储</title>
      <link href="/exsi_cunchu/"/>
      <url>/exsi_cunchu/</url>
      
        <content type="html"><![CDATA[<p>EXSI挂载存储，存储设备浪潮，直连交换机</p><p>浪潮存储默认设置<br>管理IP：192.168.70.100<br>用户名：superuser<br>密码：Passw0rd!</p><h1 id="EXSI端设置"><a href="#EXSI端设置" class="headerlink" title="EXSI端设置"></a>EXSI端设置</h1><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><h3 id="物理网卡"><a href="#物理网卡" class="headerlink" title="物理网卡"></a>物理网卡</h3><p>确保物理网卡，有一条链路是给连接存储使用 （可选择直连存储，本文是连接在交换机上）<br><img src="https://qiufuqi.github.io/img/hexo/20240110093037.png"></p><h3 id="虚拟交换机"><a href="#虚拟交换机" class="headerlink" title="虚拟交换机"></a>虚拟交换机</h3><p>新建虚拟交换机，明确物理网卡链路<br><img src="https://qiufuqi.github.io/img/hexo/20240110093346.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240110093400.png"></p><h3 id="端口组"><a href="#端口组" class="headerlink" title="端口组"></a>端口组</h3><p>新建端口组<br><img src="https://qiufuqi.github.io/img/hexo/20240110093453.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240110093508.png"></p><h3 id="VMkernel网卡"><a href="#VMkernel网卡" class="headerlink" title="VMkernel网卡"></a>VMkernel网卡</h3><p>添加VMkernel网卡，IPv4 设置IP，此处的IP在存储里会使用<br><img src="https://qiufuqi.github.io/img/hexo/20240110093609.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240110093652.png"></p><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2><h3 id="设备扫描"><a href="#设备扫描" class="headerlink" title="设备扫描"></a>设备扫描</h3><p>设备-重新扫描<br><img src="https://qiufuqi.github.io/img/hexo/20240110093839.png"></p><h3 id="适配器"><a href="#适配器" class="headerlink" title="适配器"></a>适配器</h3><p>适配器-开启iSCSI，并配置：网络端口绑定，设置静态目标和动态目标，记录下名称和别名，存储里使用<br><img src="https://qiufuqi.github.io/img/hexo/20240110094823.png"></p><h3 id="新建数据存储"><a href="#新建数据存储" class="headerlink" title="新建数据存储"></a>新建数据存储</h3><p>数据存储-新建数据存储<br><img src="https://qiufuqi.github.io/img/hexo/20240110093851.png"></p><h1 id="存储端设置"><a href="#存储端设置" class="headerlink" title="存储端设置"></a>存储端设置</h1><p>存储本身连接一条网线做管理口，再连接一条网线用于和使用存储设备的机器通信(通过交换机)</p><h2 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h2><p>设置-网络-管理IP地址<br><img src="https://qiufuqi.github.io/img/hexo/20240110095944.png"></p><h2 id="配置以太网端口"><a href="#配置以太网端口" class="headerlink" title="配置以太网端口"></a>配置以太网端口</h2><p>设置-网络-以太网端口； 和虚拟化出VMkernel网卡设置的ip在同一网段<br><img src="https://qiufuqi.github.io/img/hexo/20240110100101.png"></p><h2 id="新建池"><a href="#新建池" class="headerlink" title="新建池"></a>新建池</h2><p>新增等硬盘，创建新的即可<br><img src="https://qiufuqi.github.io/img/hexo/20240110094205.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240110094253.png"></p><h2 id="新建卷"><a href="#新建卷" class="headerlink" title="新建卷"></a>新建卷</h2><p>创建卷，并命名，可创建多个卷<br><img src="https://qiufuqi.github.io/img/hexo/20240110095324.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240110095200.png"></p><h2 id="主机"><a href="#主机" class="headerlink" title="主机"></a>主机</h2><p>添加主机，拷贝iSCSI端口（exsi主机，适配器中拷贝）<br><img src="https://qiufuqi.github.io/img/hexo/20240110095434.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240110095714.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> 存储 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> 存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux禁止外网</title>
      <link href="/centos_waiwang/"/>
      <url>/centos_waiwang/</url>
      
        <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/m-RWQFKH4Nku8xytn46dUw">文字参考</a><br>内网服务器一般是通过互联网出口硬件防火墙NAT端口映射开放到互联网上的。出口防火墙除了要写NAT端口映射策略，还要写放行策略。如果放行策略写得不严谨，服务器的外联权限将存在漏洞。一种极端情况是服务器有访问外网的权限，黑客一旦拿到远程SHELL权限在网络连接上将畅行无阻。<br>如果服务器只有内网业务，没有外网业务，可以禁掉所有外网访问请求。</p><p>内网地址段为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.0.0.0-10.255.255.255</span><br><span class="line">172.16.0.0-172.31.255.255</span><br><span class="line">192.168.0.0-192.168.255.255</span><br></pre></td></tr></table></figure><p>外网地址段为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0.0.0.0-9.255.255.255</span><br><span class="line">11.0.0.0-172.15.255.255</span><br><span class="line">172.32.0.0-192.167.255.255</span><br><span class="line">192.169.0.0-255.255.255.255</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 外网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 外网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vCenter HA高可用</title>
      <link href="/exsi_vCenter_HA/"/>
      <url>/exsi_vCenter_HA/</url>
      
        <content type="html"><![CDATA[<p><strong>VMware vCenter HA 配置</strong> <a href="https://mp.weixin.qq.com/s/hQOw9pDwn-Y-3HOc1BR2HA">文章参考</a><br>vCenter Server是整个vSphere环境的管理中心，其高可用性和备份通常采用其他方法，以下是一些常见的做法：</p><ul><li>vCenter HA： 使用vCenter HA可以实现vCenter Server的高可用性。它创建一个三节点的vCenter Server群集，确保在主节点故障时能够快速切换到备份节点。</li><li>定期备份：使用vSphere Data Protection（VDP）或其他备份解决方案，定期备份vCenter Server的数据和配置。这样，在发生故障时，可以还原到最近的备份点。</li><li>数据库备份：如果vCenter Server使用外部数据库（如SQL Server或Oracle），定期备份数据库以确保vCenter Server的数据完整性。</li></ul><p>主要介绍vCenter HA的部署。必要条件</p><ul><li>必须使用VCSA方式部署vCenter。</li><li>必须6.5以上版本。    </li><li>部署前需要打开VCSA SSH。</li><li>事先规划好vCenter HA网络。</li></ul><h2 id="添加端口组"><a href="#添加端口组" class="headerlink" title="添加端口组"></a>添加端口组</h2><p>为每台ESXi主机添加一个HA端口组。（物理适配器在生产环境中建议添加两个做冗余，我这里实验环境就省略了）<br>主机-配置-虚拟交换机-添加网络-标准交换机的虚拟机端口组<br><img src="https://qiufuqi.github.io/img/hexo/20240110105603.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240110105643.png"></p><h2 id="部署vCenter-HA"><a href="#部署vCenter-HA" class="headerlink" title="部署vCenter HA"></a>部署vCenter HA</h2><p>1.点击vCenter主机，点击“配置”，点击“vCenter HA”，点击“设置VCENTER HA”。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110059.png"><br>2.选择主动节点的HA网络，点击浏览。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110125.png"></p><p>3.选择创建的“HA”端口组，点击确定。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110141.png"><br>4.设置被动节点，点击“编辑”。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110201.png"></p><p>5.指定名称和位置。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110217.png"><br>6.选择计算资源，因为第一台VC是放在192.168.99.40上的，所以这里选择192.168.99.121。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110309.png"><br>7.选择存储位置，根据自己实际情况选择点击下一步。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110322.png"></p><p>8.选择网络，管理网络选择“VM Network”，HA网络选择“HA”，点击下一步。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110339.png"><br>9.确认配置信息，点击完成。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110357.png"><br>10.设置见证节点，重复上述5-10步骤,注意选择的计算资源应不与另外两台同属一台ESXi主机。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110457.png"></p><p>11.配置完成后，点击下一页。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110526.png"><br>12.配置HA网络，网关可以不设置，点击完成。（注意HA网络与管理网络不能同一网段）<br><img src="https://qiufuqi.github.io/img/hexo/20240110110544.png"><br>13.等待设置完成（过程比较慢大概1小时左右）<br><img src="https://qiufuqi.github.io/img/hexo/20240110110607.png"></p><p>14.部署完成后可以看到三台vCenter正在运行分别是：活动、被动、见证。这时候被动节点的管理IP和活动节点一致，但被动为灰色。当活动节点出现故障的时候会自动切换到被动节点。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110629.png"></p><p>到此vCenter HA的部署就完成了。</p><h2 id="验证HA"><a href="#验证HA" class="headerlink" title="验证HA"></a>验证HA</h2><p>在当前状态下，我这里直接将“主VC”关机。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110654.png"></p><p>这时候vSphere web界面就已经打不开了。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110707.png"></p><p>等了大概8分钟左右，就已经切换过来了，这时候vSphere能正常打开了。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110718.png"></p><p>登录上去后发现，会有报错提示“vCenter HA 集群已丢失一个节点”，并且此时主被动节点也自动更换了。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110730.png"></p><p>此时我再次将原主节点开机，当原主节点开机后这里还是显示为“被动节点”，但是管理IP地址为灰色。<br><img src="https://qiufuqi.github.io/img/hexo/20240110110749.png"></p><p>vCenter HA通过创建三节点的vCenter Server群集，确保vCenter Server在面临硬件故障、软件故障或其他问题时能够快速、自动地切换到备份节点，提高整个vSphere环境的可用性和稳定性。但需要注意的是HA网络不能与管理网络处于同一网段，主备节点切换时间大概在8分钟左右。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
            <tag> HA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus监控服务发现机制</title>
      <link href="/prometheus_configs/"/>
      <url>/prometheus_configs/</url>
      
        <content type="html"><![CDATA[<p>Prometheus Server的数据抓取工作于Pull模型，因而，它必需要事先知道各Target的位置，然后才能从相应的Exporter或Instrumentation中抓取数据， 对于小型系统来说，通过static_configs就可以解决此问题，这也是最简单的配置方法；对于中大型系统环境或具有较强动态性的云计算环境来说，静态配置显然难以适用，因此，Prometheus为此专门设计了一组服务发现机制，以便能够通过服务注册中心自动发现、检测、分类可被检测的各target，以及更新发生了变动的target。</p><h2 id="Prometheus指标抓取的生命周期"><a href="#Prometheus指标抓取的生命周期" class="headerlink" title="Prometheus指标抓取的生命周期"></a>Prometheus指标抓取的生命周期</h2><p>发现 -&gt; 配置 -&gt; relabel -&gt; 指标数据抓取 -&gt; metrics relabel<br><a href="https://zhuanlan.zhihu.com/p/656851795">部署参考</a></p><ul><li>在每个scrape_interval期间，Prometheus都会检查执行的作业（Job）；</li><li>这些作业首先会根据Job上指定的发现配置生成target列表，此即服务发现过程；</li><li>服务发现会返回一个Target列表，其中包含一组称为元数据的标签，这些标签都以“__meta_”为前缀；</li><li>服务发现还会根据目标配置来设置其它标签，这些标签带有“__”前缀和后缀，包括“__scheme__”、 “__address__”和“__metrics_path__”，分别保存有target支持使用协议(http或https，默认为http）、target的地址及指标的URI路径（默认为/metrics）；</li><li>若URI路径中存在任何参数，则它们的前缀会设置为“__param_；</li><li>配置标签会在抓取的生命周期中被重复利用以生成其他标签，例如，指标上的instance标签的默认值就来自于__address__标签的值；</li><li>抓取而来的指标在保存之前，还允许用户对指标重新打标并过滤，在job段metric_relabel_configs配置，通常用来删除不需要的指标、删除敏感或不必要的标签和添加修改标签格式等</li></ul><h3 id="文件自动发现"><a href="#文件自动发现" class="headerlink" title="文件自动发现"></a>文件自动发现</h3><p>此种类型也是最简单的服务发现方式，主要是通过Prometheus Server定期从文件中加载target的信息。文件可以是json或者yaml格式，它含有定义的target列表，以及可选的标签信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi prometheus.yml</span><br><span class="line"><span class="comment"># static config nodes</span></span><br><span class="line">  - job_name: <span class="string">&#x27;nodes&#x27;</span></span><br><span class="line">    file_sd_configs:</span><br><span class="line">    - files:                                               </span><br><span class="line">      - targets/nodes-*.yaml</span><br><span class="line">      refresh_interval: 2m </span><br><span class="line">    scrape_interval: 15s</span><br></pre></td></tr></table></figure><p>将所有要发现的target全部放在targets/目录下即可，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> targets/nodes-linux.yaml </span><br><span class="line">- targets:</span><br><span class="line">  - monitor.example.com:9100</span><br><span class="line">  - node.export1.com:9101</span><br><span class="line">  - node.export2.com:9101</span><br><span class="line">  - node.export3.com:9101</span><br><span class="line">  labels:</span><br><span class="line">    app: node-exporter</span><br><span class="line">    os: aliyunos3</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> targets/nodes-prometheus.yaml </span><br><span class="line">- targets:</span><br><span class="line">  - monitor.example.com:9090</span><br><span class="line">  labels:</span><br><span class="line">    app: prometheus</span><br><span class="line">    job:  prometheus</span><br></pre></td></tr></table></figure><p>重新加载Prometheus配置即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST monitor.example.com:9090/-/reload</span><br></pre></td></tr></table></figure><h2 id="配置文件参数详解"><a href="#配置文件参数详解" class="headerlink" title="配置文件参数详解"></a>配置文件参数详解</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目标节点 重新打标签 的配置 列表.  重新标记是一个功能强大的工具，可以在抓取目标之前动态重写目标的标签集。 可以配置多个，按照先后顺序应用</span></span><br><span class="line">    relabel_configs:</span><br><span class="line">      - source_labels: [__address__]</span><br><span class="line">        target_label: __param_target</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line">      - source_labels: [auth]          <span class="comment"># 使用auth 替换param的auth</span></span><br><span class="line">        target_label: __param_auth</span><br><span class="line">      - source_labels: [module]        <span class="comment"># 使用module 替换param的module</span></span><br><span class="line">        target_label: __param_module</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: <span class="string">&quot;localhost:9116&quot;</span>  <span class="comment"># SNMP Exporter  的地址和端口</span></span><br></pre></td></tr></table></figure><h2 id="通用配置"><a href="#通用配置" class="headerlink" title="通用配置"></a>通用配置</h2><p>通用配置示例参考</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">vi prometheus.yml</span><br><span class="line">  - job_name: common</span><br><span class="line">    scrape_interval: 10s</span><br><span class="line">    metrics_path: /metrics</span><br><span class="line">    scheme: http</span><br><span class="line">    file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/common_*.yml&quot;</span>   <span class="comment"># - &quot;./device/common_*.json&quot;  yml和json格式选择一个即可</span></span><br><span class="line">        refresh_interval: 5s</span><br><span class="line">    relabel_configs:</span><br><span class="line">    - source_labels: [job]  </span><br><span class="line">      target_label: job</span><br><span class="line">    - source_labels: [metrics_path]   <span class="comment"># 使用metrics_path 替换param的metrics_path</span></span><br><span class="line">      target_label: __metrics_path__</span><br><span class="line">    - source_labels: [scheme]</span><br><span class="line">      target_label: __scheme__</span><br><span class="line">    - source_labels: [scrape_interval]</span><br><span class="line">      target_label: __scrape_interval__</span><br><span class="line"></span><br><span class="line">vi device/common_k8s.yml</span><br><span class="line">- labels:</span><br><span class="line">    job: k8s</span><br><span class="line">    scrape_interval: 10s</span><br><span class="line">    metrics_path: /metrics</span><br><span class="line">  targets:</span><br><span class="line">    - <span class="string">&#x27;10.11.7.95:9090&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;10.11.7.34:9100&#x27;</span></span><br><span class="line"></span><br><span class="line">vi device/common_k8s.yml</span><br><span class="line">[&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;job&quot;</span>: <span class="string">&quot;k8s&quot;</span>,</span><br><span class="line"><span class="string">&quot;scrape_interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,</span><br><span class="line"><span class="string">&quot;metrics_path&quot;</span>: <span class="string">&quot;/metrics&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [</span><br><span class="line"><span class="string">&quot;10.11.7.95:9090&quot;</span>,</span><br><span class="line"><span class="string">&quot;10.11.7.34:9100&quot;</span></span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
            <tag> 钉钉告警 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux更新升级curl版本</title>
      <link href="/centos_curl/"/>
      <url>/centos_curl/</url>
      
        <content type="html"><![CDATA[<h1 id="前景"><a href="#前景" class="headerlink" title="前景"></a>前景</h1><p>由于低版本的curl存在一定的漏洞，会对我们的服务器安全造成问题，所以，我们需要将curl由低版本安装到高版本。</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="查看当前curl版本"><a href="#查看当前curl版本" class="headerlink" title="查看当前curl版本"></a>查看当前curl版本</h2><p>检测服务器安装的curl版本 curl –version</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># curl --version</span></span><br><span class="line">curl 7.29.0 (x86_64-redhat-linux-gnu) libcurl/7.29.0 NSS/3.53.1 zlib/1.2.7 libidn/1.28 libssh2/1.8.0</span><br><span class="line">Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtsp scp sftp smtp smtps telnet tftp </span><br><span class="line">Features: AsynchDNS GSS-Negotiate IDN IPv6 Largefile NTLM NTLM_WB SSL libz unix-sockets </span><br></pre></td></tr></table></figure><h2 id="查看curl安装包"><a href="#查看curl安装包" class="headerlink" title="查看curl安装包"></a>查看curl安装包</h2><p>查看服务器安装的curl的安装包 rpm -qa curl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpm -qa curl</span></span><br><span class="line">curl-7.29.0-59.el7_9.1.x86_64</span><br></pre></td></tr></table></figure><h2 id="卸载旧版本curl"><a href="#卸载旧版本curl" class="headerlink" title="卸载旧版本curl"></a>卸载旧版本curl</h2><p>直接使用yum remove curl卸载，会报错，别的软件依赖，不能卸载，所以必须强制卸载rpm -e –nodeps</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e --nodeps curl-7.29.0-59.el7_9.1.x86_64</span><br></pre></td></tr></table></figure><h2 id="下载curl包"><a href="#下载curl包" class="headerlink" title="下载curl包"></a>下载curl包</h2><p>网站上找<a href="http://curl.haxx.se/download/">最新的版本</a>，我们下载最新版本7.87.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://curl.haxx.se/download/curl-8.5.0.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20231214171102.png"></p><h2 id="解压并安装"><a href="#解压并安装" class="headerlink" title="解压并安装"></a>解压并安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf curl-8.5.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> curl-8.5.0</span><br><span class="line">./configure --prefix=/usr/local/curl --with-ssl</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#在文件最后添加以下内容</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/curl/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost curl-8.5.0]<span class="comment"># curl --version</span></span><br><span class="line">curl 8.5.0 (x86_64-pc-linux-gnu) libcurl/8.5.0 OpenSSL/1.0.2k-fips zlib/1.2.7</span><br><span class="line">Release-Date: 2023-12-06</span><br><span class="line">Protocols: dict file ftp ftps gopher gophers http https imap imaps mqtt pop3 pop3s rtsp smb smbs smtp smtps telnet tftp</span><br><span class="line">Features: alt-svc AsynchDNS HSTS HTTPS-proxy IPv6 Largefile libz NTLM SSL threadsafe UnixSockets</span><br><span class="line">[root@localhost curl-8.5.0]<span class="comment"># </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> curl </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> curl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus监控之blackbox_exporter</title>
      <link href="/prometheus_blackbox/"/>
      <url>/prometheus_blackbox/</url>
      
        <content type="html"><![CDATA[<p><strong>白盒指标:</strong> 通常Prometheus通过Exporter抓取的指标都是白盒指标监控；<br><strong>黑盒指标:</strong> 一种直接能够直接模拟用户访问验证服务的外部可见性的指标获取；<br>与白盒测试、黑盒测试的对比类似，黑盒测试只关注结果，不关注其内在实现。而黑盒指标监控，也只关心返回的结果是否是我预期的，不关注其内在如何判断是否达到预期了。</p><p>黑盒监控和白盒监控：</p><ul><li>黑盒监控，关注的是实时状态，一般都是正在发生的事件，比如网站访问不了、磁盘无法写入数据等。即黑盒监控的重点是能对正在发生的故障进行告警。常见的黑盒监控包括HTTP探针、TCP探针等用于检测站点或者服务的可访问性，以及访问效率等。</li><li>白盒监控，关注的是原因，也就是系统内部的一些运行指标数据，例如nginx响应时长、存储I/O负载等</li></ul><p>blackbox-exporter是Prometheus官方提供的一个黑盒监控解决方案，可以通过HTTP、HTTPS、DNS、ICMP、TCP和gRPC方式对目标实例进行检测。可用于以下使用场景：</p><ul><li>HTTP/HTTPS：URL/API可用性检测</li><li>ICMP：主机存活检测</li><li>TCP：端口存活检测</li><li>DNS：域名解析</li></ul><p>监控系统要能够有效的支持百盒监控和黑盒监控，通过白盒能够了解系统内部的实际运行状态，以及对监控指标的观察能够预判出可能出现的潜在问题，从而对潜在的不确定因素进行提前处理避免问题发生；而通过黑盒监控，可以在系统或服务发生故障时快速通知相关人员进行处理。</p><p><strong>部署黑盒监控</strong><br>blackbox-exporter<a href="https://blog.csdn.net/weixin_43266367/article/details/129110541">监控部署步骤参考</a><br>原理：安装blackbox-exporter的服务器通过配置发出各种检查信息，比如检测网站，端口等，收集到信息后统一交由prometheus展示，所以一般部署在和prometheus同一台服务器上，也可以部署单独一台服务器（所有检查请求由该服务器发出）</p><h2 id="安装blackbox-exporter"><a href="#安装blackbox-exporter" class="headerlink" title="安装blackbox-exporter"></a>安装blackbox-exporter</h2><p><a href="https://github.com/prometheus/blackbox_exporter">文件下载地址1</a><br><a href="https://prometheus.io/download/#mysqld_exporter">文件下载地址2</a></p><h3 id="脚本安装blackbox"><a href="#脚本安装blackbox" class="headerlink" title="脚本安装blackbox"></a>脚本安装blackbox</h3><p>blackbox_exporter.sh一键监控安装脚本，提前下载好安装文件或者<a href="https://github.com/prometheus/blackbox_exporter/releases">在线下载</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Date: 2023/12/13</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;download blackbox_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">wget -N -P /root/ https://github.com/prometheus/blackbox_exporter/releases/download/v0.24.0/blackbox_exporter-0.24.0.linux-amd64.tar.gz</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;tar blackbox_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">tar -zxvf /root/blackbox_exporter-0.24.0.linux-amd64.tar.gz -C /opt/ &amp;&amp; <span class="built_in">mv</span> /opt/blackbox_exporter-0.24.0.linux-amd64 /usr/local/blackbox_exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;delete blackbox_exporter***tar.gz&quot;</span></span><br><span class="line"><span class="built_in">rm</span> -rf /root/blackbox_exporter-0.24.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;firewall blackbox_exporter port 9115&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">firewall-cmd --zone=public --add-port=9115/tcp --permanent &amp;&amp; firewall-cmd --reload </span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;add blackbox_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/blackbox_exporter.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Prometheus Blackbox Exporter</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/blackbox_exporter/blackbox_exporter --config.file=/usr/local/blackbox_exporter/blackbox.yml --web.listen-address=:9115 --timeout-offset=2</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;start blackbox_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl start blackbox_exporter &amp;&amp; systemctl <span class="built_in">enable</span> --now blackbox_exporter</span><br></pre></td></tr></table></figure><h3 id="文件安装blackbox"><a href="#文件安装blackbox" class="headerlink" title="文件安装blackbox"></a>文件安装blackbox</h3><p>安装blackbox-exporter，采集机器运行数据信息，默认端口9115 （可更改为指定端口），默认0.5秒获取一次数据<br>blackbox-exporter的配置文件使用默认的即可（/usr/local/blackbox_exporter/blackbox.yml）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/prometheus/blackbox_exporter/releases/download/v0.24.0/blackbox_exporter-0.24.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压至指定文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> /usr/local/blackbox_exporter</span><br><span class="line">tar -zxvf blackbox_exporter-0.24.0.linux-amd64.tar.gz -C /usr/local/blackbox_exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/local/blackbox_exporter</span><br><span class="line"><span class="built_in">cp</span> blackbox_exporter-0.24.0.linux-amd64/* . &amp;&amp; <span class="built_in">rm</span> -rf blackbox_exporter-0.24.0.linux-amd64</span><br><span class="line"></span><br><span class="line"><span class="comment">#可查看帮助信息</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd /usr/local/blackbox_exporter</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># /usr/local/blackbox_exporter/blackbox_exporter -h</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下述命令中，--nginx.scrape-uri参数指定了收集指标信息的URI地址，此处的地址是Nginx的状态页。</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># ./blackbox_exporter --web.listen-address=:9115 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置node_exporter开机自启</span></span><br><span class="line">vi /usr/lib/systemd/system/blackbox_exporter.service</span><br><span class="line"><span class="comment"># 写入以下信息：</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Prometheus Blackbox Exporter</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/blackbox_exporter/blackbox_exporter --config.file=/usr/local/blackbox_exporter/blackbox.yml --web.listen-address=:9115 --timeout-offset=2</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start blackbox_exporter</span><br><span class="line">systemctl status blackbox_exporter</span><br><span class="line">systemctl <span class="built_in">enable</span> blackbox_exporter</span><br></pre></td></tr></table></figure><p>blackbox-exporter的配置文件使用默认的即可（/usr/local/blackbox_exporter/blackbox.yml），文件里定义了进行目标检测时要使用的模块和模块参数。至于要检测哪些目标是定义在Prometheus 的Job配置中。<br>默认是以下模块和参数，可以添加自己需要的</p><ul><li>http_2xx:http检测，GET方式</li><li>http_post_2xx:http检测，POST方式</li><li>tcp_connect:端口检测</li><li>pop3s_banner:</li><li>grpc:</li><li>grpc_plain:</li><li>ssh_banner:</li><li>irc_banner:</li><li>icmp:实现ICMP监控</li><li>icmp_ttl5:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">modules:</span><br><span class="line">  http_2xx:</span><br><span class="line">    prober: http</span><br><span class="line">    http:</span><br><span class="line">      preferred_ip_protocol: <span class="string">&quot;ip4&quot;</span></span><br><span class="line">  http_post_2xx:</span><br><span class="line">    prober: http</span><br><span class="line">    http:</span><br><span class="line">      method: POST</span><br><span class="line">  tcp_connect:</span><br><span class="line">    prober: tcp</span><br><span class="line">  pop3s_banner:</span><br><span class="line">    prober: tcp</span><br><span class="line">    tcp:</span><br><span class="line">      query_response:</span><br><span class="line">      - expect: <span class="string">&quot;^+OK&quot;</span></span><br><span class="line">      tls: <span class="literal">true</span></span><br><span class="line">      tls_config:</span><br><span class="line">        insecure_skip_verify: <span class="literal">false</span></span><br><span class="line">  grpc:</span><br><span class="line">    prober: grpc</span><br><span class="line">    grpc:</span><br><span class="line">      tls: <span class="literal">true</span></span><br><span class="line">      preferred_ip_protocol: <span class="string">&quot;ip4&quot;</span></span><br><span class="line">  grpc_plain:</span><br><span class="line">    prober: grpc</span><br><span class="line">    grpc:</span><br><span class="line">      tls: <span class="literal">false</span></span><br><span class="line">      service: <span class="string">&quot;service1&quot;</span></span><br><span class="line">  ssh_banner:</span><br><span class="line">    prober: tcp</span><br><span class="line">    tcp:</span><br><span class="line">      query_response:</span><br><span class="line">      - expect: <span class="string">&quot;^SSH-2.0-&quot;</span></span><br><span class="line">      - send: <span class="string">&quot;SSH-2.0-blackbox-ssh-check&quot;</span></span><br><span class="line">  irc_banner:</span><br><span class="line">    prober: tcp</span><br><span class="line">    tcp:</span><br><span class="line">      query_response:</span><br><span class="line">      - send: <span class="string">&quot;NICK prober&quot;</span></span><br><span class="line">      - send: <span class="string">&quot;USER prober prober prober :prober&quot;</span></span><br><span class="line">      - expect: <span class="string">&quot;PING :([^ ]+)&quot;</span></span><br><span class="line">        send: <span class="string">&quot;PONG <span class="variable">$&#123;1&#125;</span>&quot;</span></span><br><span class="line">      - expect: <span class="string">&quot;^:[^ ]+ 001&quot;</span></span><br><span class="line">  icmp:</span><br><span class="line">    prober: icmp</span><br><span class="line">  icmp_ttl5:</span><br><span class="line">    prober: icmp</span><br><span class="line">    <span class="built_in">timeout</span>: 5s</span><br><span class="line">    icmp:</span><br><span class="line">      ttl: 5</span><br></pre></td></tr></table></figure><h2 id="运行blackbox-exporter"><a href="#运行blackbox-exporter" class="headerlink" title="运行blackbox-exporter"></a>运行blackbox-exporter</h2><p>浏览器运行访问 <a href="http://10.11.8.108:9115/">http://10.11.8.108:9115</a><br><img src="https://qiufuqi.github.io/img/hexo/20231211172546.png"></p><h2 id="加入prometheus监控"><a href="#加入prometheus监控" class="headerlink" title="加入prometheus监控"></a>加入prometheus监控</h2><p>登录prometheus所在服务器，在文件的最下面添加job 配置，并重启Prometheus</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置参考：</span></span><br><span class="line">- job_name: http-status</span><br><span class="line">    metrics_path: /probe<span class="comment">#指定指标接口</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    params:<span class="comment">#指定查询参数，在Prometheus向target发送Get请求获取指标数据时，会传递到url上</span></span><br><span class="line">      module: [http_2xx]</span><br><span class="line"></span><br><span class="line">    static_configs:     <span class="comment"># 静态部署</span></span><br><span class="line">    - targets:    <span class="comment"># 可以每行写，也可以写成 [&#x27;http://www.baidu.com&#x27;,&#x27;http://www.baidu.com&#x27;]</span></span><br><span class="line">      - http://www.baidu.com</span><br><span class="line">      - http://www.baidu.com</span><br><span class="line">      labels:<span class="comment">#自定义标签，附加在target上</span></span><br><span class="line">        group: web</span><br><span class="line"></span><br><span class="line">    file_sd_configs:    <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/http_device.yml&quot;</span>   <span class="comment"># - &quot;./device/http_device.json&quot;  yml和json格式选择一个即可</span></span><br><span class="line">        refresh_interval: 5s <span class="comment"># 每隔5秒检查刷新一次服务发现配置</span></span><br><span class="line"></span><br><span class="line">    relabel_configs:</span><br><span class="line">    - source_labels: [__address__]      <span class="comment">#将标签__address__的值赋值给__param_target标签，以__param开头的标签也会作为查询参数传递Prometheus的Get请求，作用和上面的params配置类似</span></span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]   <span class="comment">#将标签__param_target的值赋值给instance标签</span></span><br><span class="line">      target_label: instance</span><br><span class="line">    - target_label: __address__         <span class="comment">#将标签__address__的值修改给balckbox-expoter的地址</span></span><br><span class="line">      replacement: 10.11.8.108:9115</span><br><span class="line">   <span class="comment">#以 http://www.baidu.com为例，最后其对应target的地址就是http://10.11.8.108:9115/probe?module=http_2xx&amp;target=http://www.baidu.com</span></span><br></pre></td></tr></table></figure><h3 id="http-2xx监控"><a href="#http-2xx监控" class="headerlink" title="http_2xx监控"></a>http_2xx监控</h3><p>此job配置了对<a href="http://www.baidu.com,验证是否可以访问,这里使用一个blackbox-exporter检测多个目标网站./">http://www.baidu.com，验证是否可以访问，这里使用一个blackbox-exporter检测多个目标网站。</a><br>对应target的地址就是<a href="http://10.11.8.108:9115/probe?module=http_2xx&amp;target=http://www.baidu.com">http://10.11.8.108:9115/probe?module=http_2xx&amp;target=http://www.baidu.com</a></p><h4 id="静态部署"><a href="#静态部署" class="headerlink" title="静态部署"></a>静态部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]<span class="comment"># vi /usr/local/prometheus/prometheus.yml</span></span><br><span class="line">······</span><br><span class="line">  - job_name: <span class="string">&#x27;Http_2xx_get&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    metrics_path: /probe</span><br><span class="line">    params:</span><br><span class="line">      module: [http_2xx]</span><br><span class="line">    static_configs:</span><br><span class="line">        - targets: [<span class="string">&#x27;https://pig.yurun.com&#x27;</span>,<span class="string">&#x27;https://mpig.yurun.com&#x27;</span>]</span><br><span class="line">          labels:</span><br><span class="line">            instance: web_status</span><br><span class="line">            group: <span class="string">&#x27;web&#x27;</span></span><br><span class="line">    relabel_configs:</span><br><span class="line">        - source_labels: [__address__]</span><br><span class="line">          target_label: __param_target</span><br><span class="line">        - source_labels: [__param_target]</span><br><span class="line">          target_label: instance</span><br><span class="line">        - target_label: __address__</span><br><span class="line">          replacement: 10.11.8.108:9115 <span class="comment"># blackbox-exporter 地址和端口</span></span><br><span class="line">······</span><br><span class="line"><span class="comment"># curl接口测试 出现以下信息表示数据正常</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl http://10.11.8.108:9115/probe?target=www.baidu.com&amp;module=http_2xx&amp;debug=true</span></span><br><span class="line">·········</span><br><span class="line">probe_ip_protocol 4</span><br><span class="line"><span class="comment"># HELP probe_success Displays whether or not the probe was a success</span></span><br><span class="line"><span class="comment"># TYPE probe_success gauge</span></span><br><span class="line">probe_success 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># systemctl restart prometheus</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><h4 id="文件部署"><a href="#文件部署" class="headerlink" title="文件部署"></a>文件部署</h4><p>当有新的节点时，只需要修改对应的yml或者json文件即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/prometheus/prometheus.yml</span><br><span class="line">······</span><br><span class="line">  <span class="comment"># 文件部署</span></span><br><span class="line">  - job_name: <span class="string">&#x27;Http_2xx_get&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    metrics_path: /probe</span><br><span class="line">    file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/http_device.yml&quot;</span>   <span class="comment"># - &quot;./device/http_device.json&quot;  yml和json格式选择一个即可</span></span><br><span class="line">        refresh_interval: 5s <span class="comment"># 每隔5秒检查刷新一次服务发现配置</span></span><br><span class="line">    params:</span><br><span class="line">      module: [http_2xx]</span><br><span class="line">    relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - source_labels: [module]</span><br><span class="line">      target_label: __param_module</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: 10.11.8.108:9115 <span class="comment"># blackbox-exporter 地址和端口</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> vi /usr/local/prometheus/device/http_device.yml</span><br><span class="line"> <span class="comment"># 或者单独列</span></span><br><span class="line">- labels:</span><br><span class="line">    group: web</span><br><span class="line">    module: http_2xx     <span class="comment"># 不同label可使用不同model，比如，prometheus.yml中传递对应值</span></span><br><span class="line">  targets:</span><br><span class="line">    - <span class="string">&#x27;https://pig.yurun.com&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;https://mpig.yurun.com&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一起</span></span><br><span class="line">- labels:</span><br><span class="line">    group: web</span><br><span class="line">    module: http_2xx     <span class="comment"># 不同label可使用不同model，比如，prometheus.yml中传递对应值</span></span><br><span class="line">  targets: [<span class="string">&#x27;https://pig.yurun.com&#x27;</span>,<span class="string">&#x27;https://mpig.yurun.com&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># json模式  file_sd_configs中同步修改</span></span><br><span class="line"> vi /usr/local/prometheus/device/http_device.json</span><br><span class="line">[&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;group&quot;</span>: <span class="string">&quot;web&quot;</span>,</span><br><span class="line"><span class="string">&quot;module&quot;</span>: <span class="string">&quot;http_2xx&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [</span><br><span class="line"><span class="string">&quot;https://pig.yurun.com&quot;</span>,</span><br><span class="line"><span class="string">&quot;https://mpig.yurun.com&quot;</span></span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><p>访问blackbox-exporter所在的服务器<a href="http://10.11.8.108:9115/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E4%BB%A5%E4%B8%8B%E4%BF%A1%E6%81%AF">http://10.11.8.108:9115/，可以看到以下信息</a><br><img src="https://qiufuqi.github.io/img/hexo/20231212103830.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231212103746.png"></p><h3 id="icmp监控"><a href="#icmp监控" class="headerlink" title="icmp监控"></a>icmp监控</h3><p>此job配置了对112.4.152.2和36.152.156.108，验证是否ping通，这里使用一个blackbox-exporter检测多个IP。<br>对应target的地址就是<a href="http://10.11.8.108:9115/probe?module=icmp&amp;target=36.152.156.108">http://10.11.8.108:9115/probe?module=icmp&amp;target=36.152.156.108</a></p><h4 id="静态部署-1"><a href="#静态部署-1" class="headerlink" title="静态部署"></a>静态部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]<span class="comment"># vi /usr/local/prometheus/prometheus.yml</span></span><br><span class="line">······</span><br><span class="line">  - job_name: <span class="string">&#x27;Icmp_ping&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    metrics_path: /probe</span><br><span class="line">    params:</span><br><span class="line">      module: [icmp]</span><br><span class="line">    static_configs:</span><br><span class="line">        - targets: [<span class="string">&#x27;112.4.152.2&#x27;</span>,<span class="string">&#x27;36.152.156.108&#x27;</span>]</span><br><span class="line">          labels:</span><br><span class="line">            instance: icmp_status</span><br><span class="line">            group: <span class="string">&#x27;icmp&#x27;</span></span><br><span class="line">    relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: 10.11.8.108:9115</span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># systemctl restart prometheus</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><h4 id="文件部署-1"><a href="#文件部署-1" class="headerlink" title="文件部署"></a>文件部署</h4><p>当有新的节点时，只需要修改对应的yml或者json文件即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/prometheus/prometheus.yml</span><br><span class="line">······</span><br><span class="line">  <span class="comment"># 文件部署</span></span><br><span class="line">  - job_name: <span class="string">&#x27;Icmp_ping&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    metrics_path: /probe</span><br><span class="line">    file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/icmp_device.yml&quot;</span>   <span class="comment"># - &quot;./device/icmp_device.json&quot;  yml和json格式选择一个即可</span></span><br><span class="line">        refresh_interval: 5s <span class="comment"># 每隔5秒检查刷新一次服务发现配置</span></span><br><span class="line">    params:</span><br><span class="line">      module:</span><br><span class="line">        - icmp</span><br><span class="line">    relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - source_labels: [__param_module]</span><br><span class="line">      target_label: module</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: 10.11.8.108:9115</span><br><span class="line"></span><br><span class="line"> vi /usr/local/prometheus/device/icmp_device.yml</span><br><span class="line"> <span class="comment"># 或者单独列</span></span><br><span class="line">- labels:</span><br><span class="line">    instance: icmp_status</span><br><span class="line">    group: icmp</span><br><span class="line">    module: icmp</span><br><span class="line">  targets:</span><br><span class="line">    - <span class="string">&#x27;112.4.152.2&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;36.152.156.108&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一起</span></span><br><span class="line">- labels:</span><br><span class="line">    instance: icmp_status</span><br><span class="line">    group: icmp</span><br><span class="line">    module: icmp</span><br><span class="line">  targets: [<span class="string">&#x27;112.4.152.2&#x27;</span>,<span class="string">&#x27;36.152.156.108&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># json模式  file_sd_configs中同步修改</span></span><br><span class="line"> vi /usr/local/prometheus/device/icmp_device.json</span><br><span class="line">[&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;instance&quot;</span>: <span class="string">&quot;icmp_status&quot;</span>,</span><br><span class="line"><span class="string">&quot;group&quot;</span>: <span class="string">&quot;icmp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;module&quot;</span>: <span class="string">&quot;icmp&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [</span><br><span class="line"><span class="string">&quot;112.4.152.2&quot;</span>,</span><br><span class="line"><span class="string">&quot;136.152.156.108&quot;</span></span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><p>访问blackbox-exporter所在的服务器<a href="http://10.11.8.108:9115/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E4%BB%A5%E4%B8%8B%E4%BF%A1%E6%81%AF">http://10.11.8.108:9115/，可以看到以下信息</a><br><img src="https://qiufuqi.github.io/img/hexo/20231212110928.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231212110948.png"></p><h3 id="tcp-connect监控"><a href="#tcp-connect监控" class="headerlink" title="tcp_connect监控"></a>tcp_connect监控</h3><p>此job配置了对10.11.7.216:7190和10.11.7.216:52089，端口监控，这里使用一个blackbox-exporter检测多个IP。<br>对应target的地址就是<a href="http://10.11.8.108:9115/probe?module=tcp_connect&amp;target=10.11.7.216:7190">http://10.11.8.108:9115/probe?module=tcp_connect&amp;target=10.11.7.216:7190</a></p><h4 id="静态部署-2"><a href="#静态部署-2" class="headerlink" title="静态部署"></a>静态部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]<span class="comment"># vi /usr/local/prometheus/prometheus.yml</span></span><br><span class="line">······</span><br><span class="line">  - job_name: <span class="string">&#x27;Tcp_connect&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    metrics_path: /probe</span><br><span class="line">    params:</span><br><span class="line">      module: [tcp_connect]</span><br><span class="line">    static_configs:</span><br><span class="line">        - targets: [<span class="string">&#x27;10.11.7.216:7190&#x27;</span>,<span class="string">&#x27;10.11.7.216:52089&#x27;</span>]</span><br><span class="line">          labels:</span><br><span class="line">            instance: tcp_status</span><br><span class="line">            group: <span class="string">&#x27;tcp&#x27;</span></span><br><span class="line">    relabel_configs:</span><br><span class="line">        - source_labels: [__address__]</span><br><span class="line">          target_label: __param_target</span><br><span class="line">        - source_labels: [__param_target]</span><br><span class="line">          target_label: instance</span><br><span class="line">        - target_label: __address__</span><br><span class="line">          replacement: 10.11.8.108:9115</span><br><span class="line">······</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># systemctl restart prometheus</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><h4 id="文件部署-2"><a href="#文件部署-2" class="headerlink" title="文件部署"></a>文件部署</h4><p>当有新的节点时，只需要修改对应的yml或者json文件即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/prometheus/prometheus.yml</span><br><span class="line">······</span><br><span class="line">  <span class="comment"># 文件部署</span></span><br><span class="line">  - job_name: <span class="string">&#x27;Tcp_connect&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    metrics_path: /probe</span><br><span class="line">    file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/tcp_device.yml&quot;</span>   <span class="comment"># - &quot;./device/tcp_device.json&quot;  yml和json格式选择一个即可</span></span><br><span class="line">        refresh_interval: 5s <span class="comment"># 每隔5秒检查刷新一次服务发现配置</span></span><br><span class="line">    params:</span><br><span class="line">      module:</span><br><span class="line">        - tcp_connect</span><br><span class="line">    relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - source_labels: [__param_module]</span><br><span class="line">      target_label: module</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: 10.11.8.108:9115</span><br><span class="line"></span><br><span class="line"> vi /usr/local/prometheus/device/tcp_device.yml</span><br><span class="line"> <span class="comment"># 或者单独列</span></span><br><span class="line">- labels:</span><br><span class="line">    instance: tcp_status</span><br><span class="line">    group: tcp</span><br><span class="line">    module: tcp_connect</span><br><span class="line">  targets:</span><br><span class="line">    - <span class="string">&#x27;10.11.7.216:7190&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;10.11.7.216:52089&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一起</span></span><br><span class="line">- labels:</span><br><span class="line">    instance: tcp_status</span><br><span class="line">    group: tcp</span><br><span class="line">    module: tcp_connect</span><br><span class="line">  targets: [<span class="string">&#x27;10.11.7.216:7190&#x27;</span>,<span class="string">&#x27;10.11.7.216:52089&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># json模式  file_sd_configs中同步修改</span></span><br><span class="line"> vi /usr/local/prometheus/device/tcp_device.json</span><br><span class="line">[&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;instance&quot;</span>: <span class="string">&quot;tcp_status&quot;</span>,</span><br><span class="line">    <span class="string">&quot;group&quot;</span>: <span class="string">&quot;tcp&quot;</span>,</span><br><span class="line"><span class="string">&quot;module&quot;</span>: <span class="string">&quot;tcp_connect&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [</span><br><span class="line"><span class="string">&quot;10.11.7.216:7190&quot;</span>,</span><br><span class="line"><span class="string">&quot;10.11.7.216:52089&quot;</span></span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><p>访问blackbox-exporter所在的服务器<a href="http://10.11.8.108:9115/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E4%BB%A5%E4%B8%8B%E4%BF%A1%E6%81%AF">http://10.11.8.108:9115/，可以看到以下信息</a><br><img src="https://qiufuqi.github.io/img/hexo/20231212114617.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231212114652.png"></p><h3 id="grafa页面展示"><a href="#grafa页面展示" class="headerlink" title="grafa页面展示"></a>grafa页面展示</h3><p><a href="https://grafana.com/grafana/dashboards/">面板展示大全</a><br>推荐使用13659<br><img src="https://qiufuqi.github.io/img/hexo/20231212155927.png"></p><p>面板id:11175展示网站状态<br><img src="https://qiufuqi.github.io/img/hexo/20231212143024.png"></p><p>面板id:12275 展示<br><img src="https://qiufuqi.github.io/img/hexo/20231212135806.png"></p><p>面板id:9965 展示<br><img src="https://qiufuqi.github.io/img/hexo/20231212135412.png"></p><p>面板id:13230 展示SSL证书状态<br><img src="https://qiufuqi.github.io/img/hexo/20231212135454.png"></p><h2 id="添加告警规则"><a href="#添加告警规则" class="headerlink" title="添加告警规则"></a>添加告警规则</h2><p>添加相关告警规则，<a href="https://huaweicloud.csdn.net/638db19bdacf622b8df8c612.html#blackbox_exporter_372">告警规则参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主机端口不通</span></span><br><span class="line"><span class="built_in">expr</span>: probe_success&#123;job=<span class="string">&quot;Tcp_connect&quot;</span>&#125; == 0</span><br><span class="line"><span class="comment"># 主机ping不通</span></span><br><span class="line"><span class="built_in">expr</span>: probe_success&#123;job=<span class="string">&quot;Icmp_ping&quot;</span>&#125; == 0</span><br><span class="line"><span class="comment"># 非200HTTP状态码</span></span><br><span class="line"><span class="built_in">expr</span>: probe_http_status_code&#123;job=<span class="string">&quot;blackbox_http_2xx&quot;</span>&#125; != 200</span><br><span class="line"><span class="comment"># SSL证书还有30天过期</span></span><br><span class="line"><span class="built_in">expr</span>: probe_ssl_earliest_cert_expiry&#123;job=<span class="string">&quot;Http_2xx_get&quot;</span>&#125; - time() &lt; 86400 * 30</span><br><span class="line"><span class="comment"># 接口总耗时大于 3 秒的告警。</span></span><br><span class="line"><span class="built_in">expr</span>: <span class="built_in">sum</span>(probe_http_duration_seconds) by (instance) &gt; 3  </span><br></pre></td></tr></table></figure><p>编写告警规则 参考：BlackBox-alert-rules.yml<br>建议原样拷贝，格式很重要，可以通过命令行检测<br>/usr/local/prometheus/promtool check config prometheus.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">  - name: blackbox-probe-alert</span><br><span class="line">    rules:</span><br><span class="line">    - alert: probeHttpStatus</span><br><span class="line">      <span class="built_in">expr</span>: probe_success&#123;job=<span class="string">&quot;Icmp_ping&quot;</span>&#125;==0</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: red</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&#x27;节点不可达，请及时查看&#x27;</span></span><br><span class="line">        description: <span class="string">&#x27;&#123;&#123;$labels.instance&#125;&#125; 节点不可达,请及时查看&#x27;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.instance&#125;&#125; 节点已恢复.&quot;</span></span><br><span class="line">  - name: blackbox-port-alert</span><br><span class="line">    rules:</span><br><span class="line">    - alert: probeHttpPort</span><br><span class="line">      <span class="built_in">expr</span>: probe_success&#123;job=<span class="string">&quot;Tcp_connect&quot;</span>&#125;==0</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: red</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&#x27;节点不可达，请及时查看&#x27;</span></span><br><span class="line">        description: <span class="string">&#x27;&#123;&#123;$labels.instance&#125;&#125; 节点端口不可达,请及时查看&#x27;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.instance&#125;&#125; 节点端口已恢复.&quot;</span></span><br><span class="line">  - name: blackbox-http-alert</span><br><span class="line">    rules:</span><br><span class="line">    - alert: curlHttpStatus</span><br><span class="line">      <span class="built_in">expr</span>: probe_http_status_code&#123;job=<span class="string">&quot;Http_2xx_get&quot;</span>&#125; &gt;=400 and probe_success&#123;job=<span class="string">&quot;Http_2xx_get&quot;</span>&#125;==0</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: red</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&#x27;web接口访问异常状态码 &gt; 400&#x27;</span></span><br><span class="line">        description: <span class="string">&#x27;&#123;&#123;$labels.instance&#125;&#125; 不可访问,请及时查看,当前状态码为&#123;&#123;$value&#125;&#125;&#x27;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.instance&#125;&#125; 访问已恢复.&quot;</span></span><br><span class="line">  - name: blackbox-http-time-alert</span><br><span class="line">    rules:</span><br><span class="line">    - alert: curlHttpStatus</span><br><span class="line">      <span class="built_in">expr</span>: <span class="built_in">sum</span>(probe_http_duration_seconds) by (instance) &gt; 3</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&#x27;web接口访问总耗时大于 3 秒&#x27;</span></span><br><span class="line">        description: <span class="string">&#x27;&#123;&#123;$labels.instance&#125;&#125; 接口访问总耗时大于 3 秒&#x27;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.instance&#125;&#125; 接口访问时间已恢复，低于 3 秒.&quot;</span></span><br><span class="line">  - name: blackbox-ssl_expiry</span><br><span class="line">    rules:</span><br><span class="line">    - alert: Ssl Cert Will Expire <span class="keyword">in</span> 30 days</span><br><span class="line">      <span class="built_in">expr</span>: probe_ssl_earliest_cert_expiry - time() &lt; 86400 * 30</span><br><span class="line">      <span class="keyword">for</span>: 5m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;域名证书即将过期 (instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;)&quot;</span></span><br><span class="line">        description: <span class="string">&quot;域名证书 30 天后过期 \n  LABELS: &#123;&#123; <span class="variable">$labels</span> &#125;&#125;&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;域名证书已延期.&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> 黑盒监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
            <tag> 黑盒监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql备份脚本</title>
      <link href="/centos_mysql_backup/"/>
      <url>/centos_mysql_backup/</url>
      
        <content type="html"><![CDATA[<p>Mysql数据库备份脚本</p><h2 id="库备份"><a href="#库备份" class="headerlink" title="库备份"></a>库备份</h2><p>备份mysql数据库，除了一些系统库，其他全部备份，备份目录可自己指定。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATE=$(<span class="built_in">date</span> +%F_%H-%M-%S)</span><br><span class="line">HOST=localhost</span><br><span class="line">USER=backup</span><br><span class="line">PASS=123.com</span><br><span class="line">BACKUP_DIR=/home/db_backup</span><br><span class="line"><span class="comment"># 保留天数</span></span><br><span class="line">retention_days=30</span><br><span class="line"></span><br><span class="line">DB_LIST=$(mysql -h<span class="variable">$HOST</span> -u<span class="variable">$USER</span> -p<span class="variable">$PASS</span> -s -e <span class="string">&quot;show databases;&quot;</span> 2&gt;/dev/null |egrep -v <span class="string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> DB <span class="keyword">in</span> <span class="variable">$DB_LIST</span>; <span class="keyword">do</span></span><br><span class="line">    BACKUP_NAME=<span class="variable">$BACKUP_DIR</span>/<span class="variable">$&#123;DB&#125;</span>_<span class="variable">$&#123;DATE&#125;</span>.sql</span><br><span class="line">    <span class="keyword">if</span> ! mysqldump -h<span class="variable">$HOST</span> -u<span class="variable">$USER</span> -p<span class="variable">$PASS</span> -B <span class="variable">$DB</span> &gt; <span class="variable">$BACKUP_NAME</span> 2&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$BACKUP_NAME</span> 备份失败!&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">find <span class="variable">$BACKUP_DIR</span> -<span class="built_in">type</span> f -mtime +<span class="variable">$retention_days</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> &#123;&#125; \;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;备份结束&quot;</span></span><br></pre></td></tr></table></figure><h2 id="表备份"><a href="#表备份" class="headerlink" title="表备份"></a>表备份</h2><p>备份mysql数据库的每张表，每张表单独sql。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DATE=$(<span class="built_in">date</span> +%F_%H-%M-%S)</span><br><span class="line">HOST=localhost</span><br><span class="line">USER=backup</span><br><span class="line">PASS=123.com</span><br><span class="line">BACKUP_DIR=/home/db_backup</span><br><span class="line"><span class="comment"># 保留天数</span></span><br><span class="line">retention_days=30</span><br><span class="line"></span><br><span class="line">DB_LIST=$(mysql -h<span class="variable">$HOST</span> -u<span class="variable">$USER</span> -p<span class="variable">$PASS</span> -s -e <span class="string">&quot;show databases;&quot;</span> 2&gt;/dev/null |egrep -v <span class="string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> DB <span class="keyword">in</span> <span class="variable">$DB_LIST</span>; <span class="keyword">do</span></span><br><span class="line">    BACKUP_DB_DIR=<span class="variable">$BACKUP_DIR</span>/<span class="variable">$&#123;DB&#125;</span>_<span class="variable">$&#123;DATE&#125;</span></span><br><span class="line">    [ ! -d <span class="variable">$BACKUP_DB_DIR</span> ] &amp;&amp; <span class="built_in">mkdir</span> -p <span class="variable">$BACKUP_DB_DIR</span> &amp;&gt;/dev/null</span><br><span class="line">    TABLE_LIST=$(mysql -h<span class="variable">$HOST</span> -u<span class="variable">$USER</span> -p<span class="variable">$PASS</span> -s -e <span class="string">&quot;use <span class="variable">$DB</span>;show tables;&quot;</span> 2&gt;/dev/null)</span><br><span class="line">    <span class="keyword">for</span> TABLE <span class="keyword">in</span> <span class="variable">$TABLE_LIST</span>; <span class="keyword">do</span></span><br><span class="line">        BACKUP_NAME=<span class="variable">$BACKUP_DB_DIR</span>/<span class="variable">$&#123;TABLE&#125;</span>.sql</span><br><span class="line">        <span class="keyword">if</span> ! mysqldump -h<span class="variable">$HOST</span> -u<span class="variable">$USER</span> -p<span class="variable">$PASS</span> <span class="variable">$DB</span> <span class="variable">$TABLE</span> &gt; <span class="variable">$BACKUP_NAME</span> 2&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$BACKUP_NAME</span> 备份失败!&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">find <span class="variable">$BACKUP_DIR</span> -<span class="built_in">type</span> f -mtime +<span class="variable">$retention_days</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> &#123;&#125; \;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;备份结束&quot;</span></span><br></pre></td></tr></table></figure><h2 id="异地备份"><a href="#异地备份" class="headerlink" title="异地备份"></a>异地备份</h2><p>使用mkdir -p命令创建以当前日期为名的目录，存放数据库备份文件。<br>使用mysqldump命令备份所有数据库，并将输出重定向至mysql_backup_$DATE.sql文件中。<br>使用tar命令将备份文件压缩为：.tar.gz格式的文件内，并附加日志到备份文件中，然后删除原始的备份文件。<br>使用rm -rf命令删除 7 天前的备份文件，删除的是以 7 天前日期为名的目录和目录下的所有文件。<br>使用scp命令将本地备份文件传到远程备份服务器上。</p><p>远程备份需要做免密，在MySQL数据库所在服务器与需要远程备份的服务器做免密，并进行ssh验证登录是否正常。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line"><span class="built_in">cd</span> ~/.ssh/</span><br><span class="line">scp id_rsa.pub 目标主机IP：~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>执行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Database info</span></span><br><span class="line">DB_USER=<span class="string">&quot;root&quot;</span>                          <span class="comment"># 数据库备份用户</span></span><br><span class="line">DB_PASS=<span class="string">&quot;1Q!2W@3E#&quot;</span>                     <span class="comment"># 备份用户密码</span></span><br><span class="line">DB_HOST=<span class="string">&quot;192.168.1.100&quot;</span>                 <span class="comment"># 数据库 IP</span></span><br><span class="line">DBBACK_IP=<span class="string">&quot;192.168.1.200&quot;</span>               <span class="comment"># 远程备份服务器 IP</span></span><br><span class="line">BCK_DIR=<span class="string">&quot;/bigdata/mysql&quot;</span>                <span class="comment"># 本地备份路径</span></span><br><span class="line">DBBACK_PATH=/bigdata/mysqlbackup        <span class="comment"># 远程备份路径</span></span><br><span class="line">DATE=`<span class="built_in">date</span> +%F`                         <span class="comment"># 获取当前时间</span></span><br><span class="line">yestoday=$(<span class="built_in">date</span> -d <span class="string">&#x27;-7 day&#x27;</span> +%Y-%m-%d)  <span class="comment"># 取 7 天前的时间，格式为：2023-12-30，用于删除备份文件取文件时间，该参数可自行调整</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#BACK_NAME=&quot;db_$var.sql&quot;</span></span><br><span class="line"><span class="comment">#TB_NAME=(&quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot;)               # 需要备份的表名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#create file</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$BCK_DIR</span>/<span class="variable">$DATE</span>                 <span class="comment"># 创建本地备份日期目录</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始本地备份中...&quot;</span></span><br><span class="line"></span><br><span class="line">mysqldump -u<span class="variable">$DB_USER</span> -p<span class="variable">$DB_PASS</span> -h<span class="variable">$DB_HOST</span> --all-databases &gt; <span class="variable">$BCK_DIR</span>/<span class="variable">$DATE</span>/mysql_backup_<span class="variable">$DATE</span>.sql</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$BCK_DIR</span>/<span class="variable">$DATE</span> &amp;&amp; tar -zcvf mysql_backup_<span class="variable">$DATE</span>.sql.tar.gz mysql_backup_<span class="variable">$DATE</span>.sql &gt;&gt;/<span class="variable">$BCK_DIR</span>/<span class="variable">$DATE</span>/<span class="variable">$DATE</span>.<span class="built_in">log</span> &amp;&amp; <span class="built_in">rm</span> -fr mysql_backup_<span class="variable">$DATE</span>.sql</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DATE</span> db bakcup success！&quot;</span> &gt;&gt;/<span class="variable">$BCK_DIR</span>/<span class="variable">$DATE</span>/<span class="variable">$DATE</span>.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始删除 7 天前的数据库备份文件...&quot;</span></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="variable">$BCK_DIR</span>/<span class="variable">$yestoday</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;7 天前的数据库备份文件删除完毕！&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始远程备份中...&quot;</span></span><br><span class="line">scp -r <span class="variable">$BCK_DIR</span>/<span class="variable">$DATE</span>/mysql_backup_<span class="variable">$DATE</span>.sql.tar.gz root@<span class="variable">$DBBACK_IP</span>:<span class="variable">$DBBACK_PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;远程备份完毕！&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 数据库 </category>
          
          <category> Mysql </category>
          
          <category> 备份 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux实用脚本</title>
      <link href="/centos_shell/"/>
      <url>/centos_shell/</url>
      
        <content type="html"><![CDATA[<p><strong>Linux实用脚本</strong></p><h2 id="自动实时同步数据"><a href="#自动实时同步数据" class="headerlink" title="自动实时同步数据"></a>自动实时同步数据</h2><p>使用INOTIFY+RSYNC自动实时同步数据  inotify_rsyncs.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Austines</span></span><br><span class="line"><span class="comment"># chkconfig: - 85 15</span></span><br><span class="line"><span class="comment"># description: It is used to serve</span></span><br><span class="line"><span class="comment"># 监测/data路径下的文件变化，排除Temp目录</span></span><br><span class="line">INOTIFY_CMD=<span class="string">&quot;inotifywait -mrq -e modify,create,move,delete /data/ --exclude=Temp&quot;</span></span><br><span class="line"><span class="comment"># 同步数据</span></span><br><span class="line">RSYNC_CMD1=<span class="string">&quot;rsync -avz /data/ --exclude-from=/etc/rc.d/init.d/exclude.txt harry@10.11.7.68:/data/ --delete&quot;</span></span><br><span class="line">RSYNC_CMD2=<span class="string">&quot;rsync -avz /data/ --exclude-from=/etc/rc.d/init.d/exclude.txt harry@10.11.7.68:/data/ --delete&quot;</span></span><br><span class="line"><span class="variable">$INOTIFY_CMD</span> | <span class="keyword">while</span> <span class="built_in">read</span> DIRECTORY EVENT FILE</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ $(pgrep rsync | <span class="built_in">wc</span> -l) -le 0 ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="variable">$RSYNC_CMD1</span>&amp;&amp;<span class="variable">$RSYNC_CMD2</span> &gt;&gt; rsync.log</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="MYSQL自动备份"><a href="#MYSQL自动备份" class="headerlink" title="MYSQL自动备份"></a>MYSQL自动备份</h2><p>MYSQL自动备份以及删除备份脚本 db_backup.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Austines</span></span><br><span class="line"><span class="comment"># Description: Database backup script</span></span><br><span class="line"><span class="function"><span class="title">dbback</span></span>()&#123;</span><br><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">db_user=<span class="string">&quot;ma_prd&quot;</span></span><br><span class="line">db_passwd=<span class="string">&quot;&lt;password&gt;&quot;</span></span><br><span class="line">db_path=<span class="string">&quot;/data/bakmysql&quot;</span></span><br><span class="line">db_file=<span class="string">&quot;backuprecord&quot;</span></span><br><span class="line">db_date=`<span class="built_in">date</span> +%Y%m%d_%H:%M:%S`</span><br><span class="line"><span class="comment"># 判断路径是否存在</span></span><br><span class="line">[ -d <span class="variable">$db_path</span> ] || <span class="built_in">exit</span> 2</span><br><span class="line"><span class="comment"># 使用mysqldump备份数据，并用gzip进行压缩</span></span><br><span class="line">mysqldump -u<span class="variable">$db_user</span>  -p<span class="variable">$db_passwd</span> --single-transaction ma  | gzip &gt; <span class="variable">$db_path</span>/<span class="variable">$&#123;db_date&#125;</span>_ma.sql.gz</span><br><span class="line">REVAL=$?</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$REVAL</span> -eq 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$db_date</span> ma db is backups successful&quot;</span> &gt;&gt;<span class="variable">$db_path</span>/<span class="variable">$db_file</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$db_date</span> ma db is backups failed&quot;</span> &gt;&gt;<span class="variable">$db_path</span>/<span class="variable">$db_file</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除超过7天的备份数据</span></span><br><span class="line"><span class="function"><span class="title">delbak</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> db_path=<span class="string">&quot;/data/bakmysql&quot;</span></span><br><span class="line">find <span class="variable">$db_path</span> -<span class="built_in">type</span> f -name <span class="string">&quot;*ma*.gz&quot;</span> -mtime +7 -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \;</span><br><span class="line">&#125;</span><br><span class="line">dbback</span><br><span class="line">delbak</span><br></pre></td></tr></table></figure><h2 id="文件自动备份"><a href="#文件自动备份" class="headerlink" title="文件自动备份"></a>文件自动备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Austines</span></span><br><span class="line"><span class="comment"># Description: files backup script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份源文件路径</span></span><br><span class="line">source_files=(</span><br><span class="line">    <span class="string">&quot;/usr/local/nginx/conf/nginx.conf&quot;</span></span><br><span class="line">    <span class="string">&quot;/usr/local/nginx/conf/tcp.stream&quot;</span></span><br><span class="line">    <span class="string">&quot;/usr/local/src/check_nginx_pid.sh&quot;</span></span><br><span class="line">    <span class="string">&quot;/home/wwwroot/default/it/&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">backup_dir=<span class="string">&quot;/home/backup&quot;</span>       <span class="comment"># 备份目标路径</span></span><br><span class="line">retention_days=90               <span class="comment"># 保留天数</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$backup_dir</span>            <span class="comment"># 创建备份目录（如果不存在）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份文件</span></span><br><span class="line"><span class="keyword">for</span> source_file <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;source_files[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    backup_file=$(<span class="built_in">basename</span> <span class="variable">$source_file</span>).$(<span class="built_in">date</span> +%Y%m%d%H%M%S)</span><br><span class="line">    <span class="built_in">cp</span> -r <span class="variable">$source_file</span> <span class="variable">$backup_dir</span>/<span class="variable">$backup_file</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;备份成功: <span class="variable">$backup_dir</span>/<span class="variable">$backup_file</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除过期的备份文件</span></span><br><span class="line">find <span class="variable">$backup_dir</span> -<span class="built_in">type</span> f -mtime +<span class="variable">$retention_days</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> &#123;&#125; \;</span><br><span class="line"><span class="comment"># 打印备份成功消息</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;备份完成&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="检测网站可用性"><a href="#检测网站可用性" class="headerlink" title="检测网站可用性"></a>检测网站可用性</h2><p>使用curl检测网站可用性脚本 web_check_with_curl.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Austines</span></span><br><span class="line"><span class="comment"># Version：1.1</span></span><br><span class="line"><span class="comment"># Description: Web check with curl</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义颜色</span></span><br><span class="line">red=<span class="string">&#x27;\e[0;31m&#x27;</span></span><br><span class="line">RED=<span class="string">&#x27;\e[1;31m&#x27;</span></span><br><span class="line">green=<span class="string">&#x27;\e[0;32m&#x27;</span></span><br><span class="line">GREEN=<span class="string">&#x27;\e[1;32m&#x27;</span></span><br><span class="line">blue=<span class="string">&#x27;\e[0;34m&#x27;</span></span><br><span class="line">BLUE=<span class="string">&#x27;\e[1;34m&#x27;</span></span><br><span class="line">cyan=<span class="string">&#x27;\e[0;36m&#x27;</span></span><br><span class="line">CYAN=<span class="string">&#x27;\e[1;36m&#x27;</span></span><br><span class="line">NC=<span class="string">&#x27;\e[0m&#x27;</span></span><br><span class="line"><span class="built_in">date</span>=`<span class="built_in">date</span> +%Y-%m-%d<span class="string">&#x27; &#x27;</span>%H:%M:%S` </span><br><span class="line"><span class="comment"># 定义User Agent</span></span><br><span class="line">ua=<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.9 Safari/537.36&quot;</span></span><br><span class="line">pass_count=0</span><br><span class="line">fail_count=0</span><br><span class="line"><span class="comment"># 需要检测的url</span></span><br><span class="line">urls=(</span><br><span class="line">    <span class="string">&quot;http://www.xxx.com&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">request</span></span>()&#123;</span><br><span class="line">    status=$(curl -sk -o /dev/null --retry 1 --connect-timeout 1 -w <span class="string">&#x27;%&#123;http_code&#125;&#x27;</span> --user-agent <span class="string">&quot;<span class="variable">$ua</span>&quot;</span> <span class="variable">$1</span>)</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$status</span> -eq <span class="string">&#x27;200&#x27;</span> -o <span class="variable">$status</span> -eq <span class="string">&#x27;301&#x27;</span> \</span><br><span class="line">                           -o <span class="variable">$status</span> -eq <span class="string">&#x27;302&#x27;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;[<span class="variable">$&#123;GREEN&#125;</span> Passed <span class="variable">$&#123;NC&#125;</span>] =&gt; <span class="variable">$1</span>&quot;</span></span><br><span class="line">  ((pass_count ++))</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;[<span class="variable">$&#123;RED&#125;</span> Failed <span class="variable">$&#123;NC&#125;</span>] =&gt; <span class="variable">$1</span>&quot;</span></span><br><span class="line">  ((fail_count ++))</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Start checking ...&quot;</span></span><br><span class="line">    <span class="keyword">for</span>((i=0;i&lt;<span class="variable">$&#123;#urls[*]&#125;</span>;i++)) </span><br><span class="line">        <span class="keyword">do</span> </span><br><span class="line">        request <span class="variable">$&#123;urls[i]&#125;</span>;</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="comment"># 输出检测通过和失败的记录</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;======================== Summary ======================== &quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;Total: <span class="variable">$&#123;cyan&#125;</span> <span class="subst">$((pass_count + fail_count)</span>)<span class="variable">$&#123;NC&#125;</span>  Passed: <span class="variable">$&#123;green&#125;</span><span class="variable">$&#123;pass_count&#125;</span><span class="variable">$&#123;NC&#125;</span>  Failed: <span class="variable">$&#123;red&#125;</span><span class="variable">$&#123;fail_count&#125;</span><span class="variable">$&#123;NC&#125;</span> Time: <span class="variable">$date</span>&quot;</span></span><br><span class="line">       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main $*</span><br></pre></td></tr></table></figure><h2 id="检测软件是否运行"><a href="#检测软件是否运行" class="headerlink" title="检测软件是否运行"></a>检测软件是否运行</h2><p>利用脚本定时监控本地、远端数据库服务端或Web服务是否运行正常，例如：负载高、cup高、连接数满了。<a href="https://www.cnblogs.com/su-root/p/10409973.html">参考</a><br>建议通过专业的监控软件实施监控，比如Prometheus，zabbix等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 本地端口监测     netstat/ss/lsof</span></span><br><span class="line">netstat -lntup|grep 3306|<span class="built_in">wc</span> -l</span><br><span class="line">ss -lntup|grep 3306|<span class="built_in">wc</span> -l</span><br><span class="line">lsof -i:3306|<span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line"><span class="comment">### 远程端口监测    telnet/nmap/nc</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span>|telnet baidu.com 80|grep Connected|<span class="built_in">wc</span></span><br><span class="line">namp www.baidu.com -p 80|grep open|<span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment">#if [ `lsof -i tcp:3306|wc -l` -gt 0 ]</span></span><br><span class="line"><span class="comment">#if [ `ps -ef|grep mysql|grep -v grep|wc -l` -gt 0 ] #注意脚本名字不能带mysql，自己也算进程</span></span><br><span class="line"><span class="comment">#if [ `netstat -lntup|grep mysql|wc -l` -gt 0 ] </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;`netstat -lnt|grep 3306|awk -F &quot;</span>[ :]+<span class="string">&quot; &#x27;&#123;print <span class="variable">$4</span>&#125;&#x27;`&quot;</span> = <span class="string">&quot;3306&quot;</span> ]</span><br><span class="line">      <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;MySQL is Running.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;MySQL is Stopped.&quot;</span></span><br><span class="line">   systemctl start mysqld</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;MySQL is Starting......&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果mysql没启动，空值-eq 3306 会报错，如果以字符串的方式比较不会。</span></span><br><span class="line">[root@devqiu ~]<span class="comment"># sh my.sh </span></span><br><span class="line">MySQL is Stopped.</span><br><span class="line">MySQL is Starting......</span><br><span class="line">[root@devqiu ~]<span class="comment"># sh my.sh </span></span><br><span class="line">MySQL is Running.</span><br></pre></td></tr></table></figure><h2 id="封禁异常IP地址"><a href="#封禁异常IP地址" class="headerlink" title="封禁异常IP地址"></a>封禁异常IP地址</h2><p>检测并封禁异常IP地址的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前日期和时间的格式化字符串</span></span><br><span class="line">DATE=$(<span class="built_in">date</span> +%d/%b/%Y:%H:%M)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件路径和封禁记录文件路径</span></span><br><span class="line">LOG_FILE=<span class="string">&quot;/usr/local/nginx/logs/access.log&quot;</span></span><br><span class="line">BANNED_IP_LOG=<span class="string">&quot;/usr/local/nginx/logs/banned_ip.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取异常IP地址，使用tail命令读取日志文件的最后10000行，并使用grep命令筛选出包含当前日期和时间的日志记录</span></span><br><span class="line">ABNORMAL_IP=$(<span class="built_in">tail</span> -n 10000 <span class="string">&quot;<span class="variable">$LOG_FILE</span>&quot;</span> | grep <span class="string">&quot;<span class="variable">$DATE</span>&quot;</span> | awk <span class="string">&#x27;&#123;a[$1]++&#125;END&#123;for(i in a) if(a[i]&gt;10) print i&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 封禁异常IP地址</span></span><br><span class="line"><span class="built_in">declare</span> -a IP_LIST</span><br><span class="line"><span class="keyword">for</span> IP <span class="keyword">in</span> <span class="variable">$ABNORMAL_IP</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> ! iptables -vnL | grep -q <span class="string">&quot;<span class="variable">$IP</span>&quot;</span>; <span class="keyword">then</span></span><br><span class="line">        iptables -I INPUT -s <span class="string">&quot;<span class="variable">$IP</span>&quot;</span> -j DROP</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(date +&#x27;%F_%T&#x27;)</span> <span class="variable">$IP</span>&quot;</span> &gt;&gt; <span class="string">&quot;<span class="variable">$BANNED_IP_LOG</span>&quot;</span></span><br><span class="line">        IP_LIST+=(<span class="string">&quot;<span class="variable">$IP</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印被封禁的IP地址</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;#IP_LIST[@]&#125;</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;以下IP地址已被封禁：&quot;</span></span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%s\n&quot;</span> <span class="string">&quot;<span class="variable">$&#123;IP_LIST[@]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;没有需要封禁的IP地址。&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="网卡实时流量"><a href="#网卡实时流量" class="headerlink" title="网卡实时流量"></a>网卡实时流量</h2><p>查看网卡实时流量脚本 bash interface_moniter.sh eth0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 如果没有传递参数，默认使用 lo 作为网络接口</span></span><br><span class="line">NIC=<span class="variable">$&#123;1:-lo&#125;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot; In ------ Out&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="comment"># 使用awk命令从/proc/net/dev文件中提取指定网络接口的接收字节数和发送字节数，并保存到变量OLD_IN和OLD_OUT中</span></span><br><span class="line">    OLD_IN=$(awk  <span class="string">&#x27;$0~&quot;&#x27;</span><span class="variable">$NIC</span><span class="string">&#x27;&quot;&#123;print $2&#125;&#x27;</span> /proc/net/dev)</span><br><span class="line">    OLD_OUT=$(awk <span class="string">&#x27;$0~&quot;&#x27;</span><span class="variable">$NIC</span><span class="string">&#x27;&quot;&#123;print $10&#125;&#x27;</span> /proc/net/dev)</span><br><span class="line">    <span class="comment"># 等待1秒钟</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line">    <span class="comment"># 再次使用awk命令提取最新的接收字节数和发送字节数，并保存到变量NEW_IN和NEW_OUT中。</span></span><br><span class="line">    NEW_IN=$(awk  <span class="string">&#x27;$0~&quot;&#x27;</span><span class="variable">$NIC</span><span class="string">&#x27;&quot;&#123;print $2&#125;&#x27;</span> /proc/net/dev)</span><br><span class="line">    NEW_OUT=$(awk <span class="string">&#x27;$0~&quot;&#x27;</span><span class="variable">$NIC</span><span class="string">&#x27;&quot;&#123;print $10&#125;&#x27;</span> /proc/net/dev)</span><br><span class="line">    <span class="comment"># 计算接收速率和发送速率，单位为KB/s，并保存到变量IN和OUT中</span></span><br><span class="line">    IN=$(<span class="built_in">printf</span> <span class="string">&quot;%.1f%s&quot;</span> <span class="string">&quot;<span class="subst">$((($NEW_IN-$OLD_IN)</span>/1024))&quot;</span> <span class="string">&quot;KB/s&quot;</span>)</span><br><span class="line">    OUT=$(<span class="built_in">printf</span> <span class="string">&quot;%.1f%s&quot;</span> <span class="string">&quot;<span class="subst">$((($NEW_OUT-$OLD_OUT)</span>/1024))&quot;</span> <span class="string">&quot;KB/s&quot;</span>)</span><br><span class="line">    <span class="comment"># 使用echo命令输出接收速率和发送速率</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IN</span> <span class="variable">$OUT</span>&quot;</span></span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="日志分析脚本"><a href="#日志分析脚本" class="headerlink" title="日志分析脚本"></a>日志分析脚本</h2><p>访问日志分析脚本 bash log_analyze.sh access.log</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 日志格式: $remote_addr - $remote_user [$time_local] &quot;$request&quot; $status $body_bytes_sent &quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;</span></span><br><span class="line">LOG_FILE=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;统计访问最多的10个IP&quot;</span></span><br><span class="line">awk <span class="string">&#x27;&#123;a[$1]++&#125;END&#123;print &quot;UV:&quot;,length(a);for(v in a)print v,a[v]&#125;&#x27;</span> <span class="variable">$LOG_FILE</span> | <span class="built_in">sort</span> -k2 -nr | <span class="built_in">head</span> -10</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----------------------&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;统计时间段访问最多的IP&quot;</span></span><br><span class="line">awk <span class="string">&#x27;$4&gt;=&quot;[01/Dec/2018:13:20:25&quot; &amp;&amp; $4&lt;=&quot;[27/Nov/2018:16:20:49&quot;&#123;a[$1]++&#125;END&#123;for(v in a)print v,a[v]&#125;&#x27;</span> <span class="variable">$LOG_FILE</span> | <span class="built_in">sort</span> -k2 -nr | <span class="built_in">head</span> -10</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----------------------&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;统计访问最多的10个页面&quot;</span></span><br><span class="line">awk <span class="string">&#x27;&#123;a[$7]++&#125;END&#123;print &quot;PV:&quot;,length(a);for(v in a)&#123;if(a[v]&gt;10)print v,a[v]&#125;&#125;&#x27;</span> <span class="variable">$LOG_FILE</span> | <span class="built_in">sort</span> -k2 -nr</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----------------------&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;统计访问页面状态码数量&quot;</span></span><br><span class="line">awk <span class="string">&#x27;&#123;a[$7&quot; &quot;$9]++&#125;END&#123;for(v in a)&#123;if(a[v]&gt;5)print v,a[v]&#125;&#125;&#x27;</span> <span class="variable">$LOG_FILE</span></span><br></pre></td></tr></table></figure><h2 id="服务器运行分析"><a href="#服务器运行分析" class="headerlink" title="服务器运行分析"></a>服务器运行分析</h2><p>Linux实时信息&amp;状态监控脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 获取服务器基本信息</span></span><br><span class="line">hostname=$(hostname)</span><br><span class="line">ip_address=$(hostname -I | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">os=$(lsb_release -ds)</span><br><span class="line">kernel=$(<span class="built_in">uname</span> -r)</span><br><span class="line"><span class="built_in">uptime</span>=$(<span class="built_in">uptime</span> -p)</span><br><span class="line"><span class="comment"># 监控循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="comment"># 获取CPU信息</span></span><br><span class="line">    cpu_model=$(<span class="built_in">cat</span> /proc/cpuinfo | grep <span class="string">&quot;model name&quot;</span> | <span class="built_in">head</span> -n1 | awk -F<span class="string">&#x27;: &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">    cpu_cores=$(<span class="built_in">cat</span> /proc/cpuinfo | grep <span class="string">&quot;model name&quot;</span> | <span class="built_in">wc</span> -l)</span><br><span class="line">    <span class="comment"># 获取内存信息（加入单位）</span></span><br><span class="line">    memory_total=$(free -h | awk <span class="string">&#x27;NR==2&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">    memory_used=$(free -h | awk <span class="string">&#x27;NR==2&#123;print $3&#125;&#x27;</span>)</span><br><span class="line">    memory_free=$(free -h | awk <span class="string">&#x27;NR==2&#123;print $4&#125;&#x27;</span>)</span><br><span class="line">    memory_available=$(free -h | awk <span class="string">&#x27;NR==2&#123;print $7&#125;&#x27;</span>)</span><br><span class="line">    <span class="comment"># 获取磁盘使用情况</span></span><br><span class="line">    disk_total=$(<span class="built_in">df</span> -h --output=size / | awk <span class="string">&#x27;NR==2&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    disk_used=$(<span class="built_in">df</span> -h --output=used / | awk <span class="string">&#x27;NR==2&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    disk_free=$(<span class="built_in">df</span> -h --output=avail / | awk <span class="string">&#x27;NR==2&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">    <span class="comment"># 使用 top 命令获取 CPU 使用率</span></span><br><span class="line">    cpu_usage=$(top -b -n 1 | grep <span class="string">&quot;%Cpu(s):&quot;</span> | awk <span class="string">&#x27;&#123;printf &quot;%.2f%%&quot;, 100-$8&#125;&#x27;</span>)</span><br><span class="line">    <span class="comment"># 输出监控信息</span></span><br><span class="line">    clear</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;服务器信息：&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;主机名：<span class="variable">$hostname</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;IP地址：<span class="variable">$ip_address</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;操作系统：<span class="variable">$os</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;内核版本：<span class="variable">$kernel</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;运行时间：<span class="variable">$uptime</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;--------------------------------------&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;CPU信息：&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;型号：<span class="variable">$cpu_model</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;核心数：<span class="variable">$cpu_cores</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;CPU使用率：<span class="variable">$cpu_usage</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;--------------------------------------&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;内存信息：&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;总量：<span class="variable">$memory_total</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;已使用：<span class="variable">$memory_used</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;可用：<span class="variable">$memory_available</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;--------------------------------------&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;磁盘信息：&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;总量：<span class="variable">$disk_total</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;已使用：<span class="variable">$disk_used</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;可用：<span class="variable">$disk_free</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 每 3 秒刷新一次</span></span><br><span class="line">    <span class="built_in">sleep</span> 3</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>运行结果<br><img src="https://qiufuqi.github.io/img/hexo/20231208143947.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 实用脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 实用脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx访问控制</title>
      <link href="/nginx_control/"/>
      <url>/nginx_control/</url>
      
        <content type="html"><![CDATA[<p>需求：部分域名要求指定时间不对外访问，指定要配置Nginx</p><p>只需在需要限制的server里添加如下配置，重载即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取本地时间</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="variable">$time_local</span> ~ <span class="string">&quot;^(\d+)\/(\w+)\/(\d+):(\d+):(\d+):(\d+) \+(\d+)&quot;</span> ) &#123;</span><br><span class="line">  <span class="built_in">set</span> <span class="variable">$hour</span> <span class="variable">$4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 指定时间黑名单，如果为指定时间，返回500</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="variable">$hour</span> ~ 00|01|05|06|14 ) &#123;</span><br><span class="line">  <span class="built_in">return</span> 500;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 重载nginx</span></span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus监控之mysqld_exporter</title>
      <link href="/prometheus_mysql/"/>
      <url>/prometheus_mysql/</url>
      
        <content type="html"><![CDATA[<p>目前使用到的中间件有 Nginx、Redis、RabbitMQ、MySql 等，介绍怎样使用 Promtheus 来监控这些中间件。<a href="https://mp.weixin.qq.com/s/RlUvuBcgQJTK6b0V8-jDew">本文参考</a><br>Prometheus 的数据走向，如下：<br><img src="https://qiufuqi.github.io/img/hexo/20231205114030.png"><br>从图中可以看出，监控中间件的第一步就是安装中间件的 exporter，安装有两种方式：下载安装文件进行安装和使用 Docker 进行安装，<a href="/prometheus">Prometheus安装参考</a>。<br>推荐使用文件安装，不用docker，因为docker存在有部分属性可能无法获取问题。<br><strong>Mysql监控</strong></p><h1 id="添加Mysql账户"><a href="#添加Mysql账户" class="headerlink" title="添加Mysql账户"></a>添加Mysql账户</h1><p>进入mysql命令行环境，运行一下命令，创建exporter用户，用户名密码可根据自己需要修改。<br>建议为该用户设置最大连接数限制，以避免因监控数据抓取对数据库带来影响</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">·········</span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">CREATE USER <span class="string">&#x27;exporter&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;Aabb&amp;111&#x27;</span>;</span><br><span class="line">GRANT PROCESS, REPLICATION CLIENT ON *.* TO <span class="string">&#x27;exporter&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">GRANT SELECT ON performance_schema.* TO <span class="string">&#x27;exporter&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h1 id="mysqld-exporter安装部署"><a href="#mysqld-exporter安装部署" class="headerlink" title="mysqld_exporter安装部署"></a>mysqld_exporter安装部署</h1><h2 id="脚本安装mysqld-exporter"><a href="#脚本安装mysqld-exporter" class="headerlink" title="脚本安装mysqld_exporter"></a>脚本安装mysqld_exporter</h2><p>mysqld_exporter.sh一键监控安装脚本，提前下载好安装文件或者<a href="https://github.com/prometheus/mysqld_exporter/releases">在线下载</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Date: 2023/12/13</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;download mysqld_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">wget -N -P /root/ https://github.com/prometheus/mysqld_exporter/releases/download/v0.15.1/mysqld_exporter-0.15.1.linux-amd64.tar.gz</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;tar mysqld_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">tar -zxvf /root/mysqld_exporter-0.15.1.linux-amd64.tar.gz -C /opt/ &amp;&amp; <span class="built_in">mv</span> /opt/mysqld_exporter-0.15.1.linux-amd64 /usr/local/mysqld_exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;delete mysqld_exporter***tar.gz&quot;</span></span><br><span class="line"><span class="built_in">rm</span> -rf /root/mysqld_exporter-0.15.1.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;config mysqld_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /var/lib/mysql/.my.cnf</span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">host=127.0.0.1</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">user=exporter</span></span><br><span class="line"><span class="string">password=Aabb&amp;111</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;firewall mysqld_exporter port 9104&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">firewall-cmd --zone=public --add-port=9104/tcp --permanent &amp;&amp; firewall-cmd --reload </span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;add mysqld_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/mysqld_exporter.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=mysqld_exporter</span></span><br><span class="line"><span class="string">After=network.target </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/mysqld_exporter/mysqld_exporter --web.listen-address=:9104 --config.my-cnf=/var/lib/mysql/.my.cnf </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;start mysqld_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl start mysqld_exporter &amp;&amp; systemctl <span class="built_in">enable</span> --now mysqld_exporter</span><br></pre></td></tr></table></figure><h2 id="逐步安装"><a href="#逐步安装" class="headerlink" title="逐步安装"></a>逐步安装</h2><h3 id="创建-my-cnf文件"><a href="#创建-my-cnf文件" class="headerlink" title="创建.my.cnf文件"></a>创建.my.cnf文件</h3><p>在目录 /var/lib/mysql 中创建 .my.cnf 文件，文件内容如下</p><ul><li>host 配置为 mysql 数据库的 IP （本机的话可以填写127.0.0.1）</li><li>user 和 password 配置为新创建的账号和密码</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vi /var/lib/mysql/.my.cnf</span></span><br><span class="line">[client]</span><br><span class="line"><span class="comment"># 部分版本不支持，可填写本机IP，比如10.11.8.108</span></span><br><span class="line">host=127.0.0.1</span><br><span class="line">port=3306</span><br><span class="line">user=exporter</span><br><span class="line">password=Aabb&amp;111</span><br></pre></td></tr></table></figure><h3 id="安装mysqld-exporter"><a href="#安装mysqld-exporter" class="headerlink" title="安装mysqld-exporter"></a>安装mysqld-exporter</h3><p>有两种方式：文件安装和docker安装，其他编译安装暂时不提 </p><h4 id="文件安装exporter"><a href="#文件安装exporter" class="headerlink" title="文件安装exporter"></a>文件安装exporter</h4><p><a href="https://github.com/prometheus/mysqld_exporter/releases">文件下载地址1</a><br><a href="https://prometheus.io/download/#mysqld_exporter">文件下载地址2</a><br>安装mysqld_exporter，采集机器运行数据信息，默认端口9104 （可更改为指定端口）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.15.0/mysqld_exporter-0.15.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压至指定文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> /usr/local/mysqld_exporter</span><br><span class="line">tar -zxvf mysqld_exporter-0.15.0.linux-amd64.tar.gz -C /usr/local/mysqld_exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/local/mysqld_exporter</span><br><span class="line"><span class="built_in">cp</span> mysqld_exporter-0.15.0.linux-amd64/* . &amp;&amp; <span class="built_in">rm</span> -rf mysqld_exporter-0.15.0.linux-amd64</span><br><span class="line"></span><br><span class="line"><span class="comment">### 验证配置是否有问题：运行以下命令，并同时访问http://10.11.8.108:9104/</span></span><br><span class="line">/usr/local/mysqld_exporter/mysqld_exporter --web.listen-address=:9104 --config.my-cnf=/var/lib/mysql/.my.cnf</span><br><span class="line"><span class="comment"># 可能会报错，一般是mysql开通的exporter问题</span></span><br><span class="line">ts=2023-12-08T00:28:05.034Z <span class="built_in">caller</span>=exporter.go:152 level=error msg=<span class="string">&quot;Error pinging mysqld&quot;</span> err=<span class="string">&quot;Error 1045 (28000): Access denied for user &#x27;exporter&#x27;@&#x27;localhost&#x27; (using password: YES)&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置node_exporter开机自启</span></span><br><span class="line">vi /usr/lib/systemd/system/mysqld_exporter.service</span><br><span class="line"><span class="comment"># 写入以下信息：</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=mysqld_exporter</span><br><span class="line">After=network.target </span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/mysqld_exporter/mysqld_exporter --web.listen-address=:9104 --config.my-cnf=/var/lib/mysql/.my.cnf </span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start mysqld_exporter</span><br><span class="line">systemctl status mysqld_exporter</span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld_exporter</span><br></pre></td></tr></table></figure><h4 id="docker安装exporter"><a href="#docker安装exporter" class="headerlink" title="docker安装exporter"></a>docker安装exporter</h4><p>执行以下命令，部署mysqld-exporter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull prom/mysqld-exporter</span><br><span class="line">docker run -d -p 9104:9104 --name mysqld-exporter --restart=<span class="string">&quot;always&quot;</span> -v /var/lib/mysql/.my.cnf:/.my.cnf prom/mysqld-exporter</span><br></pre></td></tr></table></figure><h1 id="访问mysqld-exporter"><a href="#访问mysqld-exporter" class="headerlink" title="访问mysqld-exporter"></a>访问mysqld-exporter</h1><p>浏览器运行访问 <a href="http://10.11.8.108:9104/">http://10.11.8.108:9104/</a><br><img src="https://qiufuqi.github.io/img/hexo/20231207153108.png"></p><h1 id="加入prometheus监控"><a href="#加入prometheus监控" class="headerlink" title="加入prometheus监控"></a>加入prometheus监控</h1><h2 id="静态部署"><a href="#静态部署" class="headerlink" title="静态部署"></a>静态部署</h2><p>登录prometheus所在服务器，在文件的最下面添加job 配置，并重启Prometheus</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]<span class="comment"># vi /usr/local/prometheus/prometheus.yml</span></span><br><span class="line">······</span><br><span class="line">  - job_name: <span class="string">&#x27;Mysql&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&#x27;10.11.7.29:9104&#x27;</span>,<span class="string">&#x27;10.11.7.34:9104&#x27;</span>,<span class="string">&#x27;10.11.7.55:9104&#x27;</span>,<span class="string">&#x27;10.11.7.71:9104&#x27;</span>,<span class="string">&#x27;10.11.7.87:9104&#x27;</span>]</span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># systemctl restart prometheus</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><h2 id="文件部署"><a href="#文件部署" class="headerlink" title="文件部署"></a>文件部署</h2><p>当有新的节点时，只需要修改对应的yml或者json文件即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/prometheus/prometheus.yml</span><br><span class="line">······</span><br><span class="line">  <span class="comment"># 文件部署</span></span><br><span class="line">  - job_name: <span class="string">&#x27;Mysql&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/mysql_device.yml&quot;</span>   <span class="comment"># - &quot;./device/mysql_device.json&quot;  yml和json格式选择一个即可</span></span><br><span class="line">        refresh_interval: 5s <span class="comment"># 每隔5秒检查刷新一次服务发现配置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> vi /usr/local/prometheus/device/mysql_device.yml</span><br><span class="line"> <span class="comment"># 或者单独列</span></span><br><span class="line">- labels:</span><br><span class="line">    desc: mysql     <span class="comment"># 无实际意义</span></span><br><span class="line">  targets:</span><br><span class="line">    - <span class="string">&#x27;10.11.7.29:9104&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;10.11.7.34:9104&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;10.11.7.55:9104&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;10.11.7.71:9104&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;10.11.7.87:9104&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一起</span></span><br><span class="line">- labels:</span><br><span class="line">    desc: mysql     <span class="comment"># 无实际意义</span></span><br><span class="line">  targets: [<span class="string">&#x27;10.11.7.29:9104&#x27;</span>,<span class="string">&#x27;10.11.7.34:9104&#x27;</span>,<span class="string">&#x27;10.11.7.55:9104&#x27;</span>,<span class="string">&#x27;10.11.7.71:9104&#x27;</span>,<span class="string">&#x27;10.11.7.87:9104&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># json模式  file_sd_configs中同步修改</span></span><br><span class="line"> vi /usr/local/prometheus/device/mysql_device.json</span><br><span class="line">[&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;desc&quot;</span>: <span class="string">&quot;mysql&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [</span><br><span class="line"><span class="string">&quot;10.11.7.29:9104&quot;</span>,</span><br><span class="line"><span class="string">&quot;10.11.7.34:9104&quot;</span>,</span><br><span class="line"><span class="string">&quot;10.11.7.55:9104&quot;</span>,</span><br><span class="line"><span class="string">&quot;10.11.7.71:9104&quot;</span>,</span><br><span class="line"><span class="string">&quot;10.11.7.87:9104&quot;</span></span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20231207154113.png"></p><h1 id="Grafana中展示"><a href="#Grafana中展示" class="headerlink" title="Grafana中展示"></a>Grafana中展示</h1><p>在 Grafana 中导入 7362 模板 <a href="https://grafana.com/grafana/dashboards/">grafana模板大全参考</a><br><img src="https://qiufuqi.github.io/img/hexo/20231205171035.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231207154323.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231207161206.png"></p><h1 id="编写Mysql告警规则"><a href="#编写Mysql告警规则" class="headerlink" title="编写Mysql告警规则"></a>编写Mysql告警规则</h1><h3 id="编写告警规则-参考：Mysql-alert-rules-yml"><a href="#编写告警规则-参考：Mysql-alert-rules-yml" class="headerlink" title="编写告警规则 参考：Mysql-alert-rules.yml"></a>编写告警规则 参考：Mysql-alert-rules.yml</h3><p>建议原样拷贝，格式很重要，可以通过命令行检测<br>/usr/local/prometheus/promtool check config prometheus.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">  - name: Mysql-alert</span><br><span class="line">    rules:</span><br><span class="line">    - alert: MySQL is down</span><br><span class="line">      <span class="built_in">expr</span>: mysql_up == 0</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: critical</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; MySQL is down&quot;</span></span><br><span class="line">        description: <span class="string">&quot;MySQL database is down. This requires immediate action!&quot;</span>  </span><br><span class="line">        resolvetion: <span class="string">&quot;database has recovered.&quot;</span>          </span><br><span class="line">    - alert: open files high</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_status_innodb_num_open_files&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &gt; (mysql_global_variables_open_files_limit&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125;) * 0.75</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; open files high&quot;</span></span><br><span class="line">        description: <span class="string">&quot;Open files is high. Please consider increasing open_files_limit.&quot;</span>   </span><br><span class="line">        resolvetion: <span class="string">&quot;Open files has recovered.&quot;</span></span><br><span class="line">    - alert: Read buffer size is bigger than max. allowed packet size</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_variables_read_buffer_size&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &gt; mysql_global_variables_slave_max_allowed_packet&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; </span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; Read buffer size is bigger than max. allowed packet size&quot;</span></span><br><span class="line">        description: <span class="string">&quot;Read buffer size (read_buffer_size) is bigger than max. allowed packet size (max_allowed_packet).This can break your replication.&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;Read buffer size has recovered.&quot;</span></span><br><span class="line">    - alert: Sort buffer possibly missconfigured</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_variables_innodb_sort_buffer_size&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &lt;256*1024 or mysql_global_variables_read_buffer_size&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &gt; 4*1024*1024 </span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; Sort buffer possibly missconfigured&quot;</span></span><br><span class="line">        description: <span class="string">&quot;Sort buffer size is either too big or too small. A good value for sort_buffer_size is between 256k and 4M.&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;Sort buffer size has recovered，the sort_buffer_size is between 256k and 4M.&quot;</span></span><br><span class="line">    - alert: Thread stack size is too small</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_variables_thread_stack&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &lt;196608</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; Thread stack size is too small&quot;</span></span><br><span class="line">        description: <span class="string">&quot;Thread stack size is too small. This can cause problems when you use Stored Language constructs for example. A typical is 256k for thread_stack_size.&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;Thread stack size has resized.&quot;</span></span><br><span class="line">    - alert: Used more than 80% of max connections limited </span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_status_max_used_connections&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &gt; mysql_global_variables_max_connections&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; * 0.8</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; Used more than 80% of max connections limited&quot;</span></span><br><span class="line">        description: <span class="string">&quot;Connections used more than 80% of max connections limited&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;Connections used has recovered.&quot;</span></span><br><span class="line">    - alert: InnoDB Force Recovery is enabled</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_variables_innodb_force_recovery&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; != 0 </span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; InnoDB Force Recovery is enabled&quot;</span></span><br><span class="line">        description: <span class="string">&quot;InnoDB Force Recovery is enabled. This mode should be used for data recovery purposes only. It prohibits writing to the data.&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;InnoDB Force Recovery has been disabled.&quot;</span></span><br><span class="line">    - alert: InnoDB Log File size is too small</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_variables_innodb_log_file_size&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &lt; 16777216 </span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; InnoDB Log File size is too small&quot;</span></span><br><span class="line">        description: <span class="string">&quot;The InnoDB Log File size is possibly too small. Choosing a small InnoDB Log File size can have significant performance impacts.&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;The InnoDB Log File size is more than 16777216.&quot;</span></span><br><span class="line">    - alert: InnoDB Flush Log at Transaction Commit</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_variables_innodb_flush_log_at_trx_commit&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; != 1</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; InnoDB Flush Log at Transaction Commit&quot;</span></span><br><span class="line">        description: <span class="string">&quot;InnoDB Flush Log at Transaction Commit is set to a values != 1. This can lead to a loss of commited transactions in case of a power failure.&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;InnoDB Flush Log at Transaction Commit is set to a values == 1.&quot;</span></span><br><span class="line">    - alert: Table definition cache too small</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_status_open_table_definitions&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &gt; mysql_global_variables_table_definition_cache&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125;</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: page</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; Table definition cache too small&quot;</span></span><br><span class="line">        description: <span class="string">&quot;Your Table Definition Cache is possibly too small. If it is much too small this can have significant performance impacts!&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;Your Table Definition Cache is OK.&quot;</span></span><br><span class="line">    - alert: Table open cache too small</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_status_open_tables&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &gt;mysql_global_variables_table_open_cache&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; * 99/100</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: page</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; Table open cache too small&quot;</span></span><br><span class="line">        description: <span class="string">&quot;Your Table Open Cache is possibly too small (old name Table Cache). If it is much too small this can have significant performance impacts!&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;Your Table Open Cache is OK.&quot;</span></span><br><span class="line">    - alert: Thread stack size is possibly too small</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_variables_thread_stack&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; &lt; 262144</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: page</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123; <span class="variable">$labels</span>.instance &#125;&#125; Thread stack size is possibly too small&quot;</span></span><br><span class="line">        description: <span class="string">&quot;Thread stack size is possibly too small. This can cause problems when you use Stored Language constructs for example. A typical is 256k for thread_stack_size.&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;Thread stack size is OK.&quot;</span></span><br><span class="line">    <span class="comment"># - alert: InnoDB Buffer Pool Instances is too small</span></span><br><span class="line">        <span class="comment"># expr: mysql_global_variables_innodb_buffer_pool_instances == 1</span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: page</span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; InnoDB Buffer Pool Instances is too small&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;If you are using MySQL 5.5 and higher you should use several InnoDB Buffer Pool Instances for performance reasons. Some rules are: InnoDB Buffer Pool Instance should be at least 1 Gbyte in size. InnoDB Buffer Pool Instances you can set equal to the number of cores of your machine.&quot;</span></span><br><span class="line">    - alert: InnoDB Plugin is enabled</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_variables_ignore_builtin_innodb&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; == 1</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: page</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; InnoDB Plugin is enabled&quot;</span></span><br><span class="line">        description: <span class="string">&quot;InnoDB Plugin is enabled&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;InnoDB Plugin is disabled.&quot;</span></span><br><span class="line">    - alert: Binary Log is disabled</span><br><span class="line">      <span class="built_in">expr</span>: mysql_global_variables_log_bin&#123;job=~<span class="string">&quot;Mysql&quot;</span>&#125; != 1</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: warning</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;Instance &#123; <span class="variable">$labels</span>.instance &#125;&#125; Binary Log is disabled&quot;</span></span><br><span class="line">        description: <span class="string">&quot;Binary Log is disabled. This prohibits you to do Point in Time Recovery (PiTR).&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;Binary Log is enabled.&quot;</span></span><br><span class="line">    <span class="comment"># - alert: Binlog Cache size too small</span></span><br><span class="line">        <span class="comment"># expr: mysql_global_variables_binlog_cache_size &lt; 1048576</span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: page</span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; Binlog Cache size too small&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;Binlog Cache size is possibly to small. A value of 1 Mbyte or higher is OK.&quot;</span></span><br><span class="line">         </span><br><span class="line">    <span class="comment"># - alert: Binlog Statement Cache size too small</span></span><br><span class="line">        <span class="comment"># expr: mysql_global_variables_binlog_stmt_cache_size &lt;1048576 and mysql_global_variables_binlog_stmt_cache_size &gt; 0</span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: page</span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; Binlog Statement Cache size too small&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;Binlog Statement Cache size is possibly to small. A value of 1 Mbyte or higher is typically OK.&quot;</span></span><br><span class="line">    <span class="comment"># - alert: Binlog Transaction Cache size too small</span></span><br><span class="line">        <span class="comment"># expr: mysql_global_variables_binlog_cache_size  &lt;1048576</span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: page</span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; Binlog Transaction Cache size too small&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;Binlog Transaction Cache size is possibly to small. A value of 1 Mbyte or higher is typically OK.&quot;</span></span><br><span class="line">    <span class="comment"># - alert: Sync Binlog is enabled</span></span><br><span class="line">        <span class="comment"># expr: mysql_global_variables_sync_binlog == 1</span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: page</span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; Sync Binlog is enabled&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;Sync Binlog is enabled. This leads to higher data security but on the cost of write performance.&quot;</span></span><br><span class="line">    <span class="comment"># - alert: IO thread stopped</span></span><br><span class="line">        <span class="comment"># expr: mysql_slave_status_slave_io_running != 1</span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: critical</span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; IO thread stopped&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;IO thread has stopped. This is usually because it cannot connect to the Master any more.&quot;</span></span><br><span class="line">    <span class="comment"># - alert: SQL thread stopped </span></span><br><span class="line">        <span class="comment"># expr: mysql_slave_status_slave_sql_running == 0</span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: critical</span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; SQL thread stopped&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;SQL thread has stopped. This is usually because it cannot apply a SQL statement received from the master.&quot;</span></span><br><span class="line">    <span class="comment"># - alert: SQL thread stopped</span></span><br><span class="line">        <span class="comment"># expr: mysql_slave_status_slave_sql_running != 1</span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: critical</span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; Sync Binlog is enabled&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;SQL thread has stopped. This is usually because it cannot apply a SQL statement received from the master.&quot;</span></span><br><span class="line">    <span class="comment"># - alert: Slave lagging behind Master</span></span><br><span class="line">        <span class="comment"># expr: rate(mysql_slave_status_seconds_behind_master[1m]) &gt;30 </span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: warning </span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; Slave lagging behind Master&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;Slave is lagging behind Master. Please check if Slave threads are running and if there are some performance issues!&quot;</span></span><br><span class="line">    <span class="comment"># - alert: Slave is NOT read only(Please ignore this warning indicator.)</span></span><br><span class="line">        <span class="comment"># expr: mysql_global_variables_read_only != 0</span></span><br><span class="line">        <span class="comment"># for: 1m</span></span><br><span class="line">        <span class="comment"># labels:</span></span><br><span class="line">          <span class="comment"># severity: page</span></span><br><span class="line">        <span class="comment"># annotations:</span></span><br><span class="line">          <span class="comment"># summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; Slave is NOT read only&quot;</span></span><br><span class="line">          <span class="comment"># description: &quot;Slave is NOT set to read only. You can accidentally manipulate data on the slave and get inconsistencies...&quot;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus监控之Nginx_exporter</title>
      <link href="/prometheus_nginx/"/>
      <url>/prometheus_nginx/</url>
      
        <content type="html"><![CDATA[<p>Prometheus监控Nginx有两种方式。一种是通过nginx_exporter监控，需要开启nginx_stub_status，主要是nginx自身的status信息，metrics数据相对较少；另一种是使用nginx-vts-exporter监控，但是需要在编译nginx的时候添加nginx-module-vts模块，监控数据较多，提供了包含server、upstream以及cache的相关监控指标，指标更加丰富。</p><h1 id="nginx-exporter-监控"><a href="#nginx-exporter-监控" class="headerlink" title="nginx_exporter 监控"></a>nginx_exporter 监控</h1><p>Nginx<a href="https://cloud.tencent.com/document/product/1416/56039">监控部署步骤参考</a></p><h2 id="添加stub-status"><a href="#添加stub-status" class="headerlink" title="添加stub_status"></a>添加stub_status</h2><p>我们Web 部署在 nginx 配置中，需要在对应的配置文件中进行 stub_status 模块的设置，才能被 exporter 识别。<br>nginx 配置文件添加下面代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf.d]<span class="comment"># vi /etc/nginx/conf.d/test.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name 127.0.0.1;</span><br><span class="line">        location /stub_status &#123;</span><br><span class="line">                stub_status on;</span><br><span class="line">                access_log off;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="访问stub-status"><a href="#访问stub-status" class="headerlink" title="访问stub_status"></a>访问stub_status</h2><p>修改配置后，重启nginx，访问 <a href="http://ip:port/stub_status">http://ip:port/stub_status</a> ,出现下图界面，说明配置生效：<br><img src="https://qiufuqi.github.io/img/hexo/20231205163352.png"></p><h2 id="安装nginx-exporter"><a href="#安装nginx-exporter" class="headerlink" title="安装nginx-exporter"></a>安装nginx-exporter</h2><h3 id="脚本安装nginx-exporter"><a href="#脚本安装nginx-exporter" class="headerlink" title="脚本安装nginx_exporter"></a>脚本安装nginx_exporter</h3><p>nginx_exporter.sh一键监控安装脚本，提前下载好安装文件或者<a href="https://github.com/nginxinc/nginx-prometheus-exporter/releases">在线下载</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Date: 2023/12/13</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;download nginx_prometheus_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">wget -N -P /root/ https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v1.0.0/nginx-prometheus-exporter_1.0.0_linux_amd64.tar.gz</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;tar nginx_prometheus_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line"><span class="built_in">mkdir</span> /usr/local/nginx_prometheus_exporter</span><br><span class="line">tar -zxvf /root/nginx-prometheus-exporter_1.0.0_linux_amd64.tar.gz -C /usr/local/nginx_prometheus_exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;delete nginx_prometheus_exporter***tar.gz&quot;</span></span><br><span class="line"><span class="built_in">rm</span> -rf /root/nginx-prometheus-exporter_1.0.0_linux_amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;firewall nginx_prometheus_exporter port 9113&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">firewall-cmd --zone=public --add-port=9113/tcp --permanent &amp;&amp; firewall-cmd --reload </span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;add nginx_prometheus_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/nginx_prometheus_exporter.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=nginx_prometheus_exporter</span></span><br><span class="line"><span class="string">After=network.target </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/nginx_prometheus_exporter/nginx-prometheus-exporter --web.listen-address=:9113 --nginx.scrape-uri=http://127.0.0.1:80/stub_status</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;start nginx_prometheus_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl start nginx_prometheus_exporter &amp;&amp; systemctl <span class="built_in">enable</span> --now nginx_prometheus_exporter</span><br></pre></td></tr></table></figure><h3 id="文件安装exporter"><a href="#文件安装exporter" class="headerlink" title="文件安装exporter"></a>文件安装exporter</h3><p><a href="https://github.com/nginxinc/nginx-prometheus-exporter/releases">文件下载地址</a><br>安装node_exporter，采集机器运行数据信息，默认端口9113 （可更改为指定端口）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v1.0.0/nginx-prometheus-exporter_1.0.0_linux_amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压至指定文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> /usr/local/nginx_prometheus_exporter</span><br><span class="line">tar -zxvf nginx-prometheus-exporter_1.0.0_linux_amd64.tar.gz -C /usr/local/nginx_prometheus_exporter</span><br><span class="line"></span><br><span class="line"><span class="comment">#可查看命令</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd /usr/local/nginx_prometheus_exporter</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># ./nginx-prometheus-exporter --help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下述命令中，--nginx.scrape-uri参数指定了收集指标信息的URI地址，此处的地址是Nginx的状态页。</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># ./nginx-prometheus-exporter --web.listen-address=:9113 --nginx.scrape-uri=http://127.0.0.1:80/stub_status</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置node_exporter开机自启</span></span><br><span class="line">vi /usr/lib/systemd/system/nginx_prometheus_exporter.service</span><br><span class="line"><span class="comment"># 写入以下信息：</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx_prometheus_exporter</span><br><span class="line">After=network.target </span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/nginx_prometheus_exporter/nginx-prometheus-exporter --web.listen-address=:9113 --nginx.scrape-uri=http://127.0.0.1:80/stub_status</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start nginx_prometheus_exporter</span><br><span class="line">systemctl status nginx_prometheus_exporter</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx_prometheus_exporter</span><br></pre></td></tr></table></figure><h3 id="docker安装exporter"><a href="#docker安装exporter" class="headerlink" title="docker安装exporter"></a>docker安装exporter</h3><p>命令参考：docker run -p 9113:9113 -d –restart=always –name nginx-exporter nginx/nginx-prometheus-exporter:版本 -nginx.scrape-uri http://:端口/stub_status<br>stub_status为上文配置的命名，可同步修改，–restart=always开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定版本</span></span><br><span class="line">docker run -p 9113:9113 nginx/nginx-prometheus-exporter:0.8.0 -nginx.scrape-uri=http://10.11.8.108:80/stub_status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最新版本</span></span><br><span class="line">docker pull nginx/nginx-prometheus-exporter</span><br><span class="line">docker run -p 9113:9113 -d  --restart=always --name nginx-exporter nginx/nginx-prometheus-exporter -nginx.scrape-uri http://10.11.8.108:80/stub_status</span><br></pre></td></tr></table></figure><h2 id="访问nginx-exporter"><a href="#访问nginx-exporter" class="headerlink" title="访问nginx-exporter"></a>访问nginx-exporter</h2><p>浏览器运行访问 <a href="http://10.11.8.108:9113/metrics">http://10.11.8.108:9113/metrics</a><br><img src="https://qiufuqi.github.io/img/hexo/20231205165409.png"></p><h2 id="加入prometheus监控"><a href="#加入prometheus监控" class="headerlink" title="加入prometheus监控"></a>加入prometheus监控</h2><p>登录prometheus所在服务器，在文件的最下面添加job 配置，并重启Prometheus</p><h3 id="静态部署"><a href="#静态部署" class="headerlink" title="静态部署"></a>静态部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]<span class="comment"># vi /usr/local/prometheus/prometheus.yml</span></span><br><span class="line">······</span><br><span class="line">  <span class="comment"># 静态部署，每次修改需要重启</span></span><br><span class="line">  - job_name: <span class="string">&#x27;Nginx&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&#x27;10.11.7.52:9113&#x27;</span>,<span class="string">&#x27;10.128.2.102:9113&#x27;</span>]</span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># systemctl restart prometheus</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><h3 id="文件部署"><a href="#文件部署" class="headerlink" title="文件部署"></a>文件部署</h3><p>当有新的节点时，只需要修改对应的yml或者json文件即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/prometheus/prometheus.yml</span><br><span class="line">······</span><br><span class="line">  <span class="comment"># 文件部署</span></span><br><span class="line">  - job_name: <span class="string">&#x27;Nginx&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/nginx_device.yml&quot;</span>   <span class="comment"># - &quot;./device/nginx_device.json&quot;  yml和json格式选择一个即可</span></span><br><span class="line">        refresh_interval: 5s <span class="comment"># 每隔5秒检查刷新一次服务发现配置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> vi /usr/local/prometheus/device/nginx_device.yml</span><br><span class="line"> <span class="comment"># 或者单独列</span></span><br><span class="line">- labels:</span><br><span class="line">    desc: nginx     <span class="comment"># 无实际意义</span></span><br><span class="line">  targets:</span><br><span class="line">    - <span class="string">&#x27;10.11.7.52:9113&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;10.128.2.102:9113&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一起</span></span><br><span class="line">- labels:</span><br><span class="line">    desc: nginx     <span class="comment"># 无实际意义</span></span><br><span class="line">  targets: [<span class="string">&#x27;10.11.7.52:9113&#x27;</span>,<span class="string">&#x27;10.128.2.102:9113&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># json模式  file_sd_configs中同步修改</span></span><br><span class="line"> vi /usr/local/prometheus/device/nginx_device.json</span><br><span class="line">[&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;desc&quot;</span>: <span class="string">&quot;nginx&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [</span><br><span class="line"><span class="string">&quot;10.11.7.52:9113&quot;</span>,</span><br><span class="line"><span class="string">&quot;10.128.2.102:9113&quot;</span></span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20231205170451.png"></p><h2 id="Grafana中展示"><a href="#Grafana中展示" class="headerlink" title="Grafana中展示"></a>Grafana中展示</h2><p>在 Grafana 中导入 12708 模板 <a href="https://grafana.com/grafana/dashboards/">grafana模板大全参考</a><br><img src="https://qiufuqi.github.io/img/hexo/20231205171035.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231205173300.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231205173319.png"></p><h2 id="编写Nginx告警规则"><a href="#编写Nginx告警规则" class="headerlink" title="编写Nginx告警规则"></a>编写Nginx告警规则</h2><h3 id="编写记录规则-参考：Nginx-record-rules-yml"><a href="#编写记录规则-参考：Nginx-record-rules-yml" class="headerlink" title="编写记录规则 参考：Nginx-record-rules.yml"></a>编写记录规则 参考：Nginx-record-rules.yml</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">  - name: Nginx-record</span><br><span class="line">    rules:</span><br><span class="line">    - <span class="built_in">expr</span>: nginx_up&#123;job=~<span class="string">&quot;Nginx&quot;</span>&#125;</span><br><span class="line">      record: Nginx:up</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点是否在线, 在线1,不在线0&quot;</span></span><br><span class="line">        unit: <span class="string">&quot; &quot;</span></span><br><span class="line">        job: <span class="string">&quot;Nginx&quot;</span></span><br><span class="line">    - <span class="built_in">expr</span>: <span class="built_in">sum</span>(rate(nginx_http_requests_total&#123;job=~<span class="string">&quot;Nginx&quot;</span>&#125;[1m])) by (instance)</span><br><span class="line">      record: Nginx:request:total:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的request请求总数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;Nginx&quot;</span></span><br><span class="line">    - <span class="built_in">expr</span>: <span class="built_in">sum</span>(rate(nginx_connections_active&#123;job=~<span class="string">&quot;Nginx&quot;</span>&#125;[1m])) by (instance)</span><br><span class="line">      record: Nginx:request:active:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点活跃request请求总数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;Nginx&quot;</span></span><br><span class="line">    - <span class="built_in">expr</span>: <span class="built_in">sum</span>(rate(nginx_connections_accepted&#123;job=~<span class="string">&quot;Nginx&quot;</span>&#125;[1m])) by (instance)</span><br><span class="line">      record: Nginx:request:accepted:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点处理request请求总数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;Nginx&quot;</span></span><br></pre></td></tr></table></figure><h3 id="编写告警规则-参考：Nginx-alert-rules-yml"><a href="#编写告警规则-参考：Nginx-alert-rules-yml" class="headerlink" title="编写告警规则 参考：Nginx-alert-rules.yml"></a>编写告警规则 参考：Nginx-alert-rules.yml</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">  - name: Nginx-alert</span><br><span class="line">    rules:</span><br><span class="line">    - alert: Nginx-down</span><br><span class="line">      <span class="built_in">expr</span>: Nginx:up == 0</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 服务异常&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; \n- job: &#123;&#123; <span class="variable">$labels</span>.job &#125;&#125; 服务异常， 时间已经超过1分钟了.&quot;</span></span><br><span class="line">        resolvetion: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; \n- job: &#123;&#123; <span class="variable">$labels</span>.job &#125;&#125; 服务已恢复.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="nginx-vts-exporter监控"><a href="#nginx-vts-exporter监控" class="headerlink" title="nginx-vts-exporter监控"></a>nginx-vts-exporter监控</h1><p>使用nginx-vts-exporter监控，但是需要在编译nginx的时候添加nginx-module-vts模块，监控数据较多，提供了包含server、upstream以及cache的相关监控指标，指标更加丰富，<a href="https://www.cnblogs.com/you-men/p/13173245.html">部署参考</a></p><h2 id="安装nginx-module-vts"><a href="#安装nginx-module-vts" class="headerlink" title="安装nginx-module-vts"></a>安装nginx-module-vts</h2><p>根据nginx版本下载对应的nginx-module-vts，我的nginx是yum安装的，所以需要下载下nginx源码，通过源码编译安装nginx-module-vts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载源码并解压</span></span><br><span class="line"><span class="built_in">cd</span> /opt/ </span><br><span class="line">wget http://nginx.org/download/nginx-1.24.0.tar.gz</span><br><span class="line">wget https://github.com/vozlt/nginx-module-vts/archive/refs/tags/v0.2.2.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf nginx-1.24.0.tar.gz</span><br><span class="line">tar -zxvf v0.2.2.tar.gz &amp;&amp; <span class="built_in">mv</span> nginx-module-vts-0.2.2 nginx-1.24.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份现有的nginx文件</span></span><br><span class="line"><span class="built_in">cp</span> -r /etc/nginx /etc/nginx_bak</span><br><span class="line"><span class="built_in">cp</span> /usr/sbin/nginx /usr/sbin/nginx_bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看该源码的nginx支持的模块</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.24.0 &amp;&amp; ./configure --<span class="built_in">help</span></span><br><span class="line">后面标记<span class="built_in">disable</span>的，代表已有此模块(编译时,不需要添加）</span><br><span class="line">后面标记<span class="built_in">enable</span>的，代表不支持此模块(如果有需要,编译时要自己添加该模块）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">yum -y install perl-ExtUtils-Embed readline-devel zlib-devel pam-devel libxml2-devel libxslt-devel openldap-devel python-devel gcc-c++   openssl-devel cmakepcre-develnanowget  gcc gcc-c++ ncurses-devel per</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 （这里只make，不要make install，不然会覆盖。如果是新装nginx，可以继续make install）</span></span><br><span class="line"><span class="comment"># 编译配置 --add-module=/path/to/nginx-module-vts</span></span><br><span class="line"><span class="comment"># 参考 nginx -V下的configure arguments: 一定要慎重，不然拷贝完就确实很多组件</span></span><br><span class="line">nginx -V</span><br><span class="line">./configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt=<span class="string">&#x27;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC&#x27;</span> --with-ld-opt=<span class="string">&#x27;-Wl,-z,relro -Wl,-z,now -pie&#x27;</span> --add-module=nginx-module-vts-0.2.2</span><br><span class="line"></span><br><span class="line">当出现报错时：./configure: error: no nginx-module-vts-0.2.2/config was found 去掉--with-http_ssl_module重新配置一次</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止nginx，并做文件替换</span></span><br><span class="line">systemctl stop nginx</span><br><span class="line"><span class="comment"># 文件替换  以上完成后，会在objs目录下生成一个nginx文件</span></span><br><span class="line"><span class="built_in">cp</span> objs/nginx /usr/sbin/ </span><br><span class="line">systemctl start nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看nginx是否包含nginx-module-vts-0.2.1 configure arguments: 最后是否有 --add-module=nginx-module-vts-0.2.1</span></span><br><span class="line">nginx -V</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除备份</span></span><br><span class="line"><span class="built_in">rm</span> -rf /etc/nginx_bak</span><br><span class="line"><span class="built_in">rm</span> -rf /usr/sbin/nginx_bak</span><br></pre></td></tr></table></figure><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><p>添加相关配置文件，并重启nginx<br>打开vhost过滤：vhost_traffic_status_filter_by_host on;<br>开启此功能，在Nginx配置有多个server_name的情况下，会根据不同的server_name进行流量的统计，否则默认会把流量全部计算到第一个<br>在不想统计流量的server区域禁用vhost_traffic_status</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    vhost_traffic_status_zone;</span><br><span class="line">    vhost_traffic_status_filter_by_host on;</span><br><span class="line"></span><br><span class="line">location /status &#123;</span><br><span class="line">        vhost_traffic_status_display;</span><br><span class="line">        vhost_traffic_status_display_format html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="访问展示"><a href="#访问展示" class="headerlink" title="访问展示"></a>访问展示</h2><p>浏览器访问<a href="http://ip:port/status">http://ip:port/status</a><br><img src="https://qiufuqi.github.io/img/hexo/20240112162734.png"></p><h2 id="安装ngxin-vts-exporter"><a href="#安装ngxin-vts-exporter" class="headerlink" title="安装ngxin-vts-exporter"></a>安装ngxin-vts-exporter</h2><p>出现以下报错，报错解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./nginx-vtx-exporter: /lib64/libc.so.6: version `GLIBC_2.32<span class="string">&#x27; not found (required by ./nginx-vtx-exporter)</span></span><br><span class="line"><span class="string">./nginx-vtx-exporter: /lib64/libc.so.6: version `GLIBC_2.34&#x27;</span> not found (required by ./nginx-vtx-exporter)</span><br></pre></td></tr></table></figure><h3 id="脚本安装exporter"><a href="#脚本安装exporter" class="headerlink" title="脚本安装exporter"></a>脚本安装exporter</h3><p>nginx-vtx_exporter.sh一键监控安装脚本，提前下载好安装文件或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Date: 2024/1/15</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;download nginx-vts-exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">wget -N -P /root/ https://github.com/hnlq715/nginx-vts-exporter/releases/download/v0.9.1/nginx-vts-exporter-0.9.1.linux-amd64.tar.gz</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;tar nginx-vts-exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">tar -zxvf /root/nginx-vts-exporter-0.9.1.linux-amd64.tar.gz -C /opt/ &amp;&amp; <span class="built_in">mv</span> /opt/nginx-vts-exporter-0.9.1.linux-amd64 /usr/local/nginx-vts-exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;delete nginx-vts-exporter***tar.gz&quot;</span></span><br><span class="line"><span class="built_in">rm</span> -rf /root/nginx-vts-exporter-0.9.1.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;firewall nginx-vts-exporter port 9913&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">firewall-cmd --zone=public --add-port=9913/tcp --permanent &amp;&amp; firewall-cmd --reload </span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;add nginx-vts-exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/nginx-vts-exporter.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=nginx-vts-exporter</span></span><br><span class="line"><span class="string">After=network.target </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/nginx-vts-exporter/nginx-vts-exporter -nginx.scrape_uri=http://127.0.0.1/status/format/json --telemetry.address=:9913</span></span><br><span class="line"><span class="string">RestartSec=5</span></span><br><span class="line"><span class="string">StartLimitInterval=0</span></span><br><span class="line"><span class="string">StartLimitBurst=10</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;start nginx-vts-exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl start nginx-vts-exporter &amp;&amp; systemctl <span class="built_in">enable</span> --now nginx-vts-exporter</span><br></pre></td></tr></table></figure><h3 id="文件安装exporter-1"><a href="#文件安装exporter-1" class="headerlink" title="文件安装exporter"></a>文件安装exporter</h3><p><a href="https://github.com/hnlq715/nginx-vts-exporter/releases">文件下载地址</a><br>安装ngxin-vts-exporter，采集机器运行数据信息，默认端口9913 （可更改为指定端口）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/hnlq715/nginx-vts-exporter/releases/download/v0.9.1/nginx-vts-exporter-0.9.1.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf /root/nginx-vts-exporter-0.9.1.linux-amd64.tar.gz -C /opt/ &amp;&amp; <span class="built_in">mv</span> /opt/nginx-vts-exporter-0.9.1.linux-amd64 /usr/local/nginx-vts-exporter</span><br><span class="line"></span><br><span class="line"><span class="comment">#可查看命令 有报错解决报错 解决方案参考</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]<span class="comment"># cd /usr/local/nginx-vts-exporter</span></span><br><span class="line">[root@localhost nginx-vts-exporter]<span class="comment"># ./nginx-vts-exporter --help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推荐exporter和nginx安装在同一台机器上，如果不在同一台主机，把scrape_uri改为nginx主机的地址。</span></span><br><span class="line"><span class="comment"># nginx_vts_exporter的默认端口号：9913，对外暴露监控接口http://xxx:9913/metrics.</span></span><br><span class="line"><span class="comment"># 我们可以访问浏览器 IP:9913</span></span><br><span class="line">/usr/local/nginx-vts-exporter/nginx-vts-exporter -nginx.scrape_uri=http://127.0.0.1/status/format/json --telemetry.address=:9913</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置node_exporter开机自启</span></span><br><span class="line">vi /usr/lib/systemd/system/nginx-vts-exporter.service</span><br><span class="line"><span class="comment"># 写入以下信息：</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx-vts-exporter</span><br><span class="line">After=network.target </span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/nginx-vts-exporter/nginx-vts-exporter -nginx.scrape_uri=http://127.0.0.1/status/format/json --telemetry.address=:9913</span><br><span class="line">RestartSec=5</span><br><span class="line">StartLimitInterval=0</span><br><span class="line">StartLimitBurst=10</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start nginx-vts-exporter</span><br><span class="line">systemctl status nginx-vts-exporter</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx-vts-exporter</span><br></pre></td></tr></table></figure><h2 id="访问exporter"><a href="#访问exporter" class="headerlink" title="访问exporter"></a>访问exporter</h2><p>浏览器访问 IP:9913<br><img src="https://qiufuqi.github.io/img/hexo/20240115120124.png"></p><h2 id="加入pormetheus"><a href="#加入pormetheus" class="headerlink" title="加入pormetheus"></a>加入pormetheus</h2><p>登录prometheus所在服务器，在文件的最下面添加job 配置，并重启Prometheus</p><h3 id="静态部署-1"><a href="#静态部署-1" class="headerlink" title="静态部署"></a>静态部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]<span class="comment"># vi /usr/local/prometheus/prometheus.yml</span></span><br><span class="line">······</span><br><span class="line">  <span class="comment"># 静态部署，每次修改需要重启</span></span><br><span class="line">  - job_name: <span class="string">&#x27;Nginx-vts&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&#x27;10.11.8.108:9913&#x27;</span>]</span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># systemctl restart prometheus</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><h3 id="文件部署-1"><a href="#文件部署-1" class="headerlink" title="文件部署"></a>文件部署</h3><p>当有新的节点时，只需要修改对应的yml或者json文件即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/prometheus/prometheus.yml</span><br><span class="line">······</span><br><span class="line">  <span class="comment"># 文件部署</span></span><br><span class="line">  - job_name: <span class="string">&#x27;Nginx-vts&#x27;</span></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/nginx-vts_device.yml&quot;</span>   <span class="comment"># - &quot;./device/nginx-vts_device.json&quot;  yml和json格式选择一个即可</span></span><br><span class="line">        refresh_interval: 5s <span class="comment"># 每隔5秒检查刷新一次服务发现配置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> vi /usr/local/prometheus/device/nginx-vts_device.yml</span><br><span class="line"> <span class="comment"># 或者单独列</span></span><br><span class="line">- labels:</span><br><span class="line">    desc: nginx     <span class="comment"># 无实际意义</span></span><br><span class="line">  targets:</span><br><span class="line">    - <span class="string">&#x27;10.11.8.108:9913&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一起</span></span><br><span class="line">- labels:</span><br><span class="line">    desc: nginx     <span class="comment"># 无实际意义</span></span><br><span class="line">  targets: [<span class="string">&#x27;10.11.8.108:9913&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># json模式  file_sd_configs中同步修改</span></span><br><span class="line"> vi /usr/local/prometheus/device/nginx-vts_device.json</span><br><span class="line">[&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;desc&quot;</span>: <span class="string">&quot;nginx&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [</span><br><span class="line"><span class="string">&quot;10.11.8.108:9913&quot;</span>,</span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20240115134548.png"></p><h2 id="Grafana中展示-1"><a href="#Grafana中展示-1" class="headerlink" title="Grafana中展示"></a>Grafana中展示</h2><p>在 Grafana 中导入 2949 模板 <a href="https://grafana.com/grafana/dashboards/">grafana模板大全参考</a><br><img src="https://qiufuqi.github.io/img/hexo/20231205171035.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240115144257.png"><br><img src="https://qiufuqi.github.io/img/hexo/20240115144344.png"></p><table><thead><tr><th align="left">指标</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">nginx_server_requests</td><td align="left">统计nginx各个host 各个请求的总数，精确到状态码</td></tr><tr><td align="left">nginx_upstream_requests</td><td align="left">统计各个upstream 请求总数，精确到状态码</td></tr><tr><td align="left">nginx_server_connections</td><td align="left">统计nginx几种连接状态type的连接数</td></tr><tr><td align="left">nginx_server_cache</td><td align="left">统计nginx缓存计算器，精确到每一种状态和转发type</td></tr><tr><td align="left">nginx_server_bytes</td><td align="left">统计nginx进出的字节计数可以精确到每个host，in进，out出</td></tr><tr><td align="left">nginx_upstream_bytes</td><td align="left">统计nginx各个 upstream 分组的字节总数，细分到进出</td></tr><tr><td align="left">nginx_upstream_responseMsec</td><td align="left">统计各个upstream 平均响应时长，精确到每个节点</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus监控之snmp_exporter</title>
      <link href="/prometheus_snmp/"/>
      <url>/prometheus_snmp/</url>
      
        <content type="html"><![CDATA[<p>SNMP Exporter是一个用于监控和收集网络设备信息的开源软件。它作为Prometheus监控系统的一个重要组件，通过使用Simple Network Management Protocol（SNMP）协议，从网络设备（如路由器、交换机、服务器等）中提取性能指标和状态信息，并将其转换为Prometheus可以理解的格式，从而实现对网络设备的监控和指标收集。</p><p>对于 SNMP Exporter 的使用来说， 配置文件比较重要，配置文件中根据硬件的 MIB 文件生成了 OID 的映射关系。以 Cisco 交换机为例，在官方 GitHub 上下载最新的 snmp.yml 文件，由于 Cisco 交换机使用的是 if_mib 模块，在 if_mib 下新增 auth ，用来在请求交换机的时候做验证使用，这个值是配置在交换机上的。<br><a href="https://blog.csdn.net/hanzheng260561728/article/details/127923009">部署参考</a></p><h2 id="安装snmp-exporter"><a href="#安装snmp-exporter" class="headerlink" title="安装snmp_exporter"></a>安装snmp_exporter</h2><h3 id="脚本安装snmp-exporter"><a href="#脚本安装snmp-exporter" class="headerlink" title="脚本安装snmp_exporter"></a>脚本安装snmp_exporter</h3><p>snmp_exporter.sh一键监控安装脚本，提前下载好安装文件或者<a href="https://github.com/prometheus/snmp_exporter/releases">在线下载</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Date: 2023/12/13</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;download snmp_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">wget -N -P /root/ https://github.com/prometheus/snmp_exporter/releases/download/v0.25.0/snmp_exporter-0.25.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;tar snmp_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">tar -zxvf /root/snmp_exporter-0.25.0.linux-amd64.tar.gz -C /opt/ &amp;&amp; <span class="built_in">mv</span> /opt/snmp_exporter-0.25.0.linux-amd64 /usr/local/snmp_exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;delete snmp_exporter***tar.gz&quot;</span></span><br><span class="line"><span class="built_in">rm</span> -rf /root/snmp_exporter-0.25.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;firewall snmp_exporter port 9116&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">firewall-cmd --zone=public --add-port=9116/tcp --permanent &amp;&amp; firewall-cmd --reload </span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;add snmp_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/snmp_exporter.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=snmp_exporter</span></span><br><span class="line"><span class="string">After=network.target </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/snmp_exporter/snmp_exporter --config.file=/usr/local/snmp_exporter/snmp.yml --web.listen-address=:9116 --snmp.wrap-large-counters --log.level=info</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;start snmp_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl start snmp_exporter &amp;&amp; systemctl <span class="built_in">enable</span> --now snmp_exporter</span><br></pre></td></tr></table></figure><h3 id="文件安装snmp-exporter"><a href="#文件安装snmp-exporter" class="headerlink" title="文件安装snmp_exporter"></a>文件安装snmp_exporter</h3><p><a href="https://github.com/prometheus/snmp_exporter/releases">文件下载地址</a><br>安装snmp_exporter，采集机器运行数据信息，默认端口9116 （可更改为指定端口）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">wget -N -P /root/ https://github.com/prometheus/snmp_exporter/releases/download/v0.25.0/snmp_exporter-0.25.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压至指定文件夹</span></span><br><span class="line">tar -zxvf /root/snmp_exporter-0.25.0.linux-amd64.tar.gz -C /opt/ </span><br><span class="line"><span class="built_in">mv</span> /opt/snmp_exporter-0.25.0.linux-amd64 /usr/local/snmp_exporter</span><br><span class="line"></span><br><span class="line"><span class="comment">#可查看命令</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cd /usr/local/snmp_exporter</span></span><br><span class="line">[root@localhost snmp_exporter]<span class="comment"># ./snmp_exporter  -h</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下述命令中，--nginx.scrape-uri参数指定了收集指标信息的URI地址，此处的地址是Nginx的状态页。</span></span><br><span class="line">[root@localhost snmp_exporter]<span class="comment"># /usr/local/snmp_exporter/snmp_exporter --config.file=/usr/local/snmp_exporter/snmp.yml --web.listen-address=:9116 --snmp.wrap-large-counters --log.level=info</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置node_exporter开机自启</span></span><br><span class="line">vi /usr/lib/systemd/system/snmp_exporter.service</span><br><span class="line"><span class="comment"># 写入以下信息：</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=snmp_exporter</span><br><span class="line">After=network.target </span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/snmp_exporter/snmp_exporter --config.file=/usr/local/snmp_exporter/snmp.yml --web.listen-address=:9116 --snmp.wrap-large-counters --log.level=info</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start snmp_exporter</span><br><span class="line">systemctl status snmp_exporter</span><br><span class="line">systemctl <span class="built_in">enable</span> snmp_exporter</span><br></pre></td></tr></table></figure><h2 id="配置snmp-exporter"><a href="#配置snmp-exporter" class="headerlink" title="配置snmp_exporter"></a>配置snmp_exporter</h2><p>提前确定好snmp的团体字，做好验证工作，修改snmp.yml文件，将community值改为对应团体字，重启服务，并测试采集情况<br>此处不同版本有不同写法，<a href="https://github.com/prometheus/snmp_exporter/blob/main/auth-split-migration.md">参考建议</a></p><p>验证采集情况: curl ‘<a href="http://you_snmp_exporter_ip:9116/snmp?module=if_mib&amp;target=YOU_SW_IP&#39;">http://YOU_snmp_exporter_IP:9116/snmp?module=if_mib&amp;target=YOU_SW_IP&#39;</a></p><ul><li><a href="http://you_snmp_exporter_ip:9116/">http://YOU_snmp_exporter_ip:9116</a></li><li>Target #是交换机IP</li><li>Module #是你的snmp.yml 配置文件内部定义的名称</li></ul><p>默认使用的public_v2验证信息，当有不同团体字时，需要新生成接口或者增加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vi /usr/local/snmp_exporter/snmp.yml</span></span><br><span class="line"><span class="comment"># WARNING: This file was auto-generated using snmp_exporter generator, manual changes will be lost.</span></span><br><span class="line">auths:</span><br><span class="line">  public_v1:</span><br><span class="line">    community: cisco45</span><br><span class="line">    security_level: noAuthNoPriv</span><br><span class="line">    auth_protocol: MD5</span><br><span class="line">    priv_protocol: DES</span><br><span class="line">    version: 1</span><br><span class="line">  public_v2:</span><br><span class="line">    community: cisco45</span><br><span class="line">    security_level: noAuthNoPriv</span><br><span class="line">    auth_protocol: MD5</span><br><span class="line">    priv_protocol: DES</span><br><span class="line">    version: 2</span><br><span class="line">  public_v3:</span><br><span class="line">    community: admin@kk</span><br><span class="line">    security_level: noAuthNoPriv</span><br><span class="line">    auth_protocol: MD5</span><br><span class="line">    priv_protocol: DES</span><br><span class="line">    version: 2</span><br><span class="line">·········</span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart snmp_exporter</span></span><br><span class="line">[root@localhost ~]<span class="comment"># curl &#x27;http://10.11.8.108:9116/snmp?module=if_mib&amp;target=10.10.10.140&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="访问snmp-exporter"><a href="#访问snmp-exporter" class="headerlink" title="访问snmp_exporter"></a>访问snmp_exporter</h2><p>浏览器运行访问 <a href="http://10.11.8.108:9116/">http://10.11.8.108:9116/</a><br><img src="https://qiufuqi.github.io/img/hexo/20231214143537.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231215095224.png"></p><h2 id="生成snmp-yml文件"><a href="#生成snmp-yml文件" class="headerlink" title="生成snmp.yml文件"></a>生成snmp.yml文件</h2><p>本步骤可不用做，使用常用的配置即可，不同厂商可能mid不同，<a href="http://localnetwork.cn/project-10/doc-299/">参考</a><br>snmp_exporter的配置文件 snmp.yml 需要自己通过SNMP Exporter Config Generator 项目编译生成，由于Prometheus使用go语言开发的，所以自己编译生成snmp_exporter的配置文件需要go环境</p><h3 id="go环境安装"><a href="#go环境安装" class="headerlink" title="go环境安装"></a>go环境安装</h3><p>直接yum安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://mirror.go-repo.io/centos/RPM-GPG-KEY-GO-REPO</span><br><span class="line">curl -s https://mirror.go-repo.io/centos/go-repo.repo | <span class="built_in">tee</span> /etc/yum.repos.d/go-repo.repo</span><br><span class="line">yum -y install golang</span><br><span class="line">[root@localhost ~]<span class="comment"># go version</span></span><br><span class="line">go version go1.21.5 linux/amd64</span><br></pre></td></tr></table></figure><p>源码安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.google.com/go/go1.21.5.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf go1.21.5.linux-amd64.tar.gz -C /usr/local/</span><br><span class="line"></span><br><span class="line">vi /etc/profile</span><br><span class="line"><span class="comment"># 在最后一行添加</span></span><br><span class="line"><span class="built_in">export</span> GOROOT=/usr/local/go</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOROOT</span>/bin</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># source /etc/profile &amp;&amp; go version</span></span><br><span class="line">go version go1.21.5 linux/amd64</span><br></pre></td></tr></table></figure><h3 id="snmp-Generator安装"><a href="#snmp-Generator安装" class="headerlink" title="snmp Generator安装"></a>snmp Generator安装</h3><p>go环境安装以后，构建snmp exporter  config Generator，执行以下操作: <a href="https://github.com/prometheus/snmp_exporter/tree/main/generator">操作参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git gcc gcc-g++ make net-snmp net-snmp-utils net-snmp-libs net-snmp-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可能会报错 安装解决需要：libmysqlclient.so.18 问题 需要和数据库一致版本</span></span><br><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-libs-compat-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-compat-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">yum -y install git gcc gcc-g++ make net-snmp net-snmp-utils net-snmp-libs net-snmp-devel</span><br></pre></td></tr></table></figure><h3 id="编译snmp-yml"><a href="#编译snmp-yml" class="headerlink" title="编译snmp.yml"></a>编译snmp.yml</h3><p>curl版本低时会报错，此时需要升级curl，<a href="/centos_curl">curl升级参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/prometheus/snmp_exporter.git</span><br><span class="line">go <span class="built_in">env</span> -w GO111MODULE=on                        <span class="comment">#GO111MODULE开启</span></span><br><span class="line">go <span class="built_in">env</span> -w GOPROXY=https://goproxy.cn,direct     <span class="comment">#选择国内代理</span></span><br><span class="line"><span class="built_in">cd</span> /opt/snmp_exporter/generator</span><br><span class="line">make generator mibs                             <span class="comment">## mibs文件夹中放入对应品牌的无线设备mib库文件即可</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以上命令可能报错</span></span><br><span class="line">curl: option --no-progress-meter: is unknown    <span class="comment"># curl需要升级</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 国内网络下载开源项目提供的公共MIB库报错 忽略即可或者科学上网</span></span><br><span class="line"><span class="comment"># curl: (28) Failed to connect to www.circitor.fr port 443 after 127263 ms</span></span><br></pre></td></tr></table></figure><p>修改配置文件，增加community: cisco45，不同团体子可新增v3,v4,v5等等，但是版本都用version:2。这样生成snmp.yml里会自动带上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vi generator.yml</span><br><span class="line">---</span><br><span class="line">auths:</span><br><span class="line">  public_v1:</span><br><span class="line">    version: 1</span><br><span class="line">  public_v2:</span><br><span class="line">    version: 2</span><br><span class="line">    community: cisco45</span><br><span class="line">  public_v3:</span><br><span class="line">    version: 2</span><br><span class="line">    community: admin@yr</span><br><span class="line"></span><br><span class="line"><span class="comment">#所需要监控的项添加进去</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> MIBDIRS=/opt/snmp_exporter/generator/mibs</span><br><span class="line">./generator generate           <span class="comment">#编译成功后，会自动生成snmp.yml文件</span></span><br><span class="line"><span class="built_in">cp</span> snmp.yml /usr/local/snmp_exporter/snmp.yml   <span class="comment">#将snmp.yml文件传到snmp_exporter安装目录下</span></span><br><span class="line">systemctl  restart snmp_exporter                <span class="comment">#重启该服务</span></span><br></pre></td></tr></table></figure><h2 id="加入prometheus监控"><a href="#加入prometheus监控" class="headerlink" title="加入prometheus监控"></a>加入prometheus监控</h2><p>登录prometheus所在服务器，在文件的最下面添加job 配置，并重启Prometheus</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]<span class="comment"># vi /usr/local/prometheus/prometheus.yml</span></span><br><span class="line">······</span><br><span class="line"><span class="comment"># 参考：</span></span><br><span class="line">  - job_name: <span class="string">&quot;SNMP&quot;</span></span><br><span class="line">    scrape_interval: 1m  <span class="comment"># 默认抓取周期，可用单位m s、smhdwy #全局默认1分钟</span></span><br><span class="line">    scrape_timeout: 30s  <span class="comment"># 默认抓取超时，全局默认10s</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">          - 10.10.10.140  <span class="comment"># 思科交换机的 IP 地址</span></span><br><span class="line">    metrics_path: /snmp</span><br><span class="line">    params:</span><br><span class="line">      module:</span><br><span class="line">        - if_mib  <span class="comment"># 如果是其他设备，请更换其他模块。</span></span><br><span class="line">      auth: </span><br><span class="line">        - public_v1     <span class="comment"># 认证使用/usr/local/snmp_exporter/snmp.yml的认证名 包含团体字</span></span><br><span class="line">    relabel_configs:</span><br><span class="line">      - source_labels: [__address__]</span><br><span class="line">        target_label: __param_target</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: <span class="string">&quot;localhost:9116&quot;</span>  <span class="comment"># SNMP Exporter  的地址和端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最终使用以下配置</span></span><br><span class="line">  - job_name: <span class="string">&#x27;Snmp&#x27;</span></span><br><span class="line">    scrape_interval: 30s    <span class="comment"># 默认抓取周期，可用单位m s、smhdwy #全局默认1分钟</span></span><br><span class="line">    scrape_timeout: 30s     <span class="comment"># 默认抓取超时，全局默认10s</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&#x27;10.10.10.140&#x27;</span>,<span class="string">&#x27;10.10.10.141&#x27;</span>]</span><br><span class="line">    metrics_path: /snmp</span><br><span class="line">    params:</span><br><span class="line">      module: [if_mib]</span><br><span class="line">      auth: </span><br><span class="line">        - public_v1</span><br><span class="line">    relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: 10.11.8.108:9116</span><br><span class="line">······</span><br><span class="line"><span class="comment"># 重启Prometheus服务，并访问prometheus所在的target状态，如果为UP说明job设置成功：</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># cd /usr/local/prometheus</span></span><br><span class="line">[root@prometheus prometheus]<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># systemctl restart prometheus</span></span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">[root@prometheus ~]<span class="comment"># curl  -X POST localhost:9090/-/reload</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20231215103201.png"></p><h2 id="多机器采集"><a href="#多机器采集" class="headerlink" title="多机器采集"></a>多机器采集</h2><p>多机器不同模块采集，基于文件服务发现。一般情况下，交换机都是有多台，甚至几百上千台，在如此多的设备需要监控采集数据，需要指定不同模块和不同配置文件进行加载采集的，下面简单介绍下多机器部署采集。<a href="http://localnetwork.cn/project-10/doc-299/">部署参考</a></p><p>Prometheus可以根据不同的文件格式（JSON或YAML）和服务描述信息自动发现并监控服务。这对于动态环境或需要自动扩展的服务非常有用，因为当服务发生变化时，Prometheus可以自动更新其监控配置并开始监控新的服务<br>file_sd_configs 发现服务 用json或者yaml格式文件方式，都可以</p><p>针对不同团体字，snmp_exporter生成新的auth认证方式，需要修改relabel_configs，参考黑框处自己编写 ，用Labels里面的值替换参数值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- source_labels: [auth]        <span class="comment"># 使用module 替换param的module</span></span><br><span class="line">  target_label: __param_auth</span><br><span class="line">- source_labels: [module]      <span class="comment"># 使用module 替换param的module</span></span><br><span class="line">  target_label: __param_module</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20231215165747.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@prometheus ~]<span class="comment"># vi /usr/local/prometheus/prometheus.yml</span></span><br><span class="line">·········</span><br><span class="line"><span class="comment"># 参考</span></span><br><span class="line">  - job_name: <span class="string">&quot;SNMP&quot;</span></span><br><span class="line">    scrape_interval: 1m <span class="comment"># 覆盖全局默认值</span></span><br><span class="line">    scrape_timeout: 30s <span class="comment"># 覆盖全局默认值</span></span><br><span class="line">    file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/snmp_device.yml&quot;</span> <span class="comment"># 指定 snmp 服务发现配置文件路径</span></span><br><span class="line">        refresh_interval: 5s <span class="comment"># 每隔5秒检查刷新一次服务发现配置</span></span><br><span class="line">    metrics_path: /snmp</span><br><span class="line">    params:       <span class="comment"># 如果snmp_device.yml里面写了params的参数，则删除此处</span></span><br><span class="line">      module:</span><br><span class="line">        - if_mib  <span class="comment"># 指定默认采集 MIB 模块的名称,如果是其他设备，请更换其他模块。</span></span><br><span class="line">      auth: </span><br><span class="line">        - public_v2     <span class="comment"># 认证使用snmp.yml的某个认证名 包含团体字</span></span><br><span class="line">    relabel_configs:</span><br><span class="line">      - source_labels: [__address__]</span><br><span class="line">        target_label: __param_target</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line">      - source_labels: [auth]          <span class="comment"># 使用auth 替换param的auth</span></span><br><span class="line">        target_label: __param_auth</span><br><span class="line">      - source_labels: [module]        <span class="comment"># 使用module 替换param的module</span></span><br><span class="line">        target_label: __param_module</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: <span class="string">&quot;localhost:9116&quot;</span>  <span class="comment"># SNMP Exporter  的地址和端口</span></span><br></pre></td></tr></table></figure><p>snmp_device.yml 的内容参照如下格式即可。我在下面的示例中添加了architecture与model等变量，这些变量prometheus获取目标信息是，会作为目标的标签与目标绑定。涉及不同团体字时，snmp中的auth需要提前生成才可以使用，比如我的 public_v3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署参考</span></span><br><span class="line">vi /url/local/prometheus/device/snmp_device.yml</span><br><span class="line">- labels:</span><br><span class="line">    mib: HZHUAWEI  <span class="comment"># 这里的名字只是个标签</span></span><br><span class="line">    hostname: HZ-NL-HW5720STACK</span><br><span class="line">  targets:</span><br><span class="line">    - 192.168.100.1</span><br><span class="line">- labels:</span><br><span class="line">    mib: if_mib</span><br><span class="line">    hostname: HZ-HX-HW12704CSS</span><br><span class="line">  targets:</span><br><span class="line">    - 10.10.10.140</span><br><span class="line">- labels:</span><br><span class="line">    mib: if_mib</span><br><span class="line">  targets:</span><br><span class="line">    - 10.10.10.141</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最终版本</span></span><br><span class="line">- labels:</span><br><span class="line">    module: if_mib</span><br><span class="line">    auth: public_v2</span><br><span class="line">  targets: [<span class="string">&#x27;10.10.10.140&#x27;</span>,<span class="string">&#x27;10.10.10.141&#x27;</span>]</span><br><span class="line">- labels:</span><br><span class="line">    module: if_mib</span><br><span class="line">    auth: public_v3</span><br><span class="line">  targets: [<span class="string">&#x27;10.10.10.31&#x27;</span>]</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20231216103813.png"></p><p>使用json文件格式时</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/prometheus/prometheus.yml</span><br><span class="line">    file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">      - files:</span><br><span class="line">        - <span class="string">&quot;./device/snmp_device.json&quot;</span> <span class="comment"># 指定 snmp 服务发现配置文件路径</span></span><br><span class="line">        refresh_interval: 5s <span class="comment"># 每隔5秒检查刷新一次服务发现配置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vi /usr/local/prometheus/device/snmp_device.json</span><br><span class="line">[&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;module&quot;</span>: <span class="string">&quot;if_mib&quot;</span>,</span><br><span class="line"><span class="string">&quot;auth&quot;</span>: <span class="string">&quot;public_v2&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [<span class="string">&quot;10.10.10.140&quot;</span>, <span class="string">&quot;10.10.10.141&quot;</span>]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;module&quot;</span>: <span class="string">&quot;if_mib&quot;</span>,</span><br><span class="line"><span class="string">&quot;auth&quot;</span>: <span class="string">&quot;public_v3&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [<span class="string">&quot;10.10.10.31&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">curl -XPOST localhost:9090/-/reload</span><br></pre></td></tr></table></figure><h2 id="Grafana中展示"><a href="#Grafana中展示" class="headerlink" title="Grafana中展示"></a>Grafana中展示</h2><p>在 Grafana 中导入 15473 模板 <a href="https://grafana.com/grafana/dashboards/">grafana模板大全参考</a><br><img src="https://qiufuqi.github.io/img/hexo/20231205171035.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231215104944.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231215105016.png"></p><p>在 Grafana 中导入 11169 模板 <a href="https://grafana.com/grafana/dashboards/">grafana模板大全参考</a><br><img src="https://qiufuqi.github.io/img/hexo/20231215105518.png"></p><h2 id="编写SNMP告警规则"><a href="#编写SNMP告警规则" class="headerlink" title="编写SNMP告警规则"></a>编写SNMP告警规则</h2><p>未完待续</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> snmp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
            <tag> snmp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EXSI磁盘回收</title>
      <link href="/exsi_huishou/"/>
      <url>/exsi_huishou/</url>
      
        <content type="html"><![CDATA[<p>我们在使用ESXI时常常会遇到这么个问题，创建虚拟服务器时使用的磁盘类型为Thin（精简置备）。最初，精简置备的磁盘只使用该磁盘最初所需要的数据存储空间，在使用一段时间后占用磁盘存储空间会变的很大，就算把系统内大文件删除系统内释放了，但是虚拟机的磁盘还是直接占用了之前最大的空间。有没有什么方法可以压缩回收磁盘空间呢？<br>不防看看下面的方法：</p><p>vmkfstools 常用参数选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-i  指定原磁盘文件名</span><br><span class="line">-d --diskformat 指定目标磁盘的格式（zeroedthick、thin、eagerzeroedthick）</span><br><span class="line">-K --punchzero  回收磁盘空间</span><br></pre></td></tr></table></figure><h2 id="磁盘空间回收"><a href="#磁盘空间回收" class="headerlink" title="磁盘空间回收"></a>磁盘空间回收</h2><p>ESXI精简置备类型（Thin）磁盘空间回收,(回收参考)[<a href="https://blog.51cto.com/u_13777759/2437396]">https://blog.51cto.com/u_13777759/2437396]</a><br><strong>回收磁盘磁盘类型必须为精简置备（thin）回收前最好先备份</strong></p><h3 id="打开ESXI服务器SSH"><a href="#打开ESXI服务器SSH" class="headerlink" title="打开ESXI服务器SSH,"></a>打开ESXI服务器SSH,</h3><p>开启EXSI服务器SSH，开启方法请参考 EXSI开启远程SSH</p><h3 id="登录EXSI服务器"><a href="#登录EXSI服务器" class="headerlink" title="登录EXSI服务器"></a>登录EXSI服务器</h3><p>通过ssh连接ESXI服务器</p><h3 id="进入虚拟机目录"><a href="#进入虚拟机目录" class="headerlink" title="进入虚拟机目录"></a>进入虚拟机目录</h3><p>切换到需要回收的虚拟机目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ <span class="comment"># cd /vmfs/volumes/datastore1</span></span><br></pre></td></tr></table></figure><h3 id="查看磁盘大小"><a href="#查看磁盘大小" class="headerlink" title="查看磁盘大小"></a>查看磁盘大小</h3><p>通过du命令查看该虚拟机磁盘文件大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/vmfs/volumes/55ade938-e958d429-143f-000c29231226/CentOS <span class="comment"># du -sh *</span></span><br></pre></td></tr></table></figure><h3 id="使用vmkfstools命令"><a href="#使用vmkfstools命令" class="headerlink" title="使用vmkfstools命令"></a>使用vmkfstools命令</h3><p>通过vmkfstools命令回收空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/vmfs/volumes/55ade938-e958d429-143f-000c29231226/CentOS <span class="comment"># vmkfstools -K CentOS.vmdk</span></span><br></pre></td></tr></table></figure><h3 id="检验大小"><a href="#检验大小" class="headerlink" title="检验大小"></a>检验大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/vmfs/volumes/55ade938-e958d429-143f-000c29231226/CentOS <span class="comment"># du -sh *</span></span><br></pre></td></tr></table></figure><h3 id="开机测试是否可以正常启动"><a href="#开机测试是否可以正常启动" class="headerlink" title="开机测试是否可以正常启动"></a>开机测试是否可以正常启动</h3>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> 磁盘回收 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> 磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EXSI磁盘格式</title>
      <link href="/exsi_format/"/>
      <url>/exsi_format/</url>
      
        <content type="html"><![CDATA[<p>Esxi里虚拟机磁盘类型厚置备改精简置备</p><h1 id="本机修改"><a href="#本机修改" class="headerlink" title="本机修改"></a>本机修改</h1><h2 id="启动SSH"><a href="#启动SSH" class="headerlink" title="启动SSH"></a>启动SSH</h2><p>在ESXi的Web页面的【主机】页打开ssh功能。<br><img src="https://qiufuqi.github.io/img/hexo/20230715144309.png"></p><h2 id="登录ESXI-CLI"><a href="#登录ESXI-CLI" class="headerlink" title="登录ESXI CLI"></a>登录ESXI CLI</h2><p>使用ssh工具连接虚拟机，可以使用PuTTY</p><h2 id="进入虚拟机目录"><a href="#进入虚拟机目录" class="headerlink" title="进入虚拟机目录"></a>进入虚拟机目录</h2><p>进入存放虚拟机的目录，然后进入要转换的虚拟机的目录</p><h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><p>输入“ls -lh”，可以看到有一个很小的vmdk和一个带-flat的体积较大的vmdk，实际上数据是存储在大的那个里，小的是信息。<br><img src="https://qiufuqi.github.io/img/hexo/20230715144441.png"></p><h2 id="转换格式"><a href="#转换格式" class="headerlink" title="转换格式"></a>转换格式</h2><p>输入“vmkfstools -i 原.vmdk -d thin 新.vmdk”开始转换，中间-d thin的参数是关键<br><img src="https://qiufuqi.github.io/img/hexo/20230715144622.png"></p><h2 id="再次查看"><a href="#再次查看" class="headerlink" title="再次查看"></a>再次查看</h2><p>再次输入“ls -lh”就能看到多了一个centos-original_0_new.vmdk和一个centos-original_0_new-flat.vmdk<br><img src="https://qiufuqi.github.io/img/hexo/20230715144800.png"></p><h2 id="变更文件"><a href="#变更文件" class="headerlink" title="变更文件"></a>变更文件</h2><p>将新建的vmdk改为原来的vmdk的名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> centos-original_0.vmdk centos-original_0.vmdk.bak</span><br><span class="line"><span class="built_in">mv</span> centos-original_0-flat.vmdk centos-original_0-flat.vmdk.bak</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> centos-original_0_new-flat.vmdk oentos-original_0-flat.vmdk</span><br><span class="line"><span class="built_in">mv</span> centos-original_0_new.vmdk centos-original_0.vmdk</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20230715144811.png"></p><h2 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h2><p>输入“vi centos-original_0.vmdk”编辑它。将红框这一行的文件名改成“centos-original_0-flat.vmdk”。保存。<br><img src="https://qiufuqi.github.io/img/hexo/20230715145304.png"><br>执行命令vi centos-original.vmx 搜索vmdk，将关联的vmdk文件名改为新的vmdk（不带flat）文件名<br><img src="https://qiufuqi.github.io/img/hexo/20230715145328.png"></p><h2 id="重新注册该虚拟机"><a href="#重新注册该虚拟机" class="headerlink" title="重新注册该虚拟机"></a>重新注册该虚拟机</h2><p>先在ESXi的【虚拟机】页面取消注册这个虚拟机<br><img src="https://qiufuqi.github.io/img/hexo/20230715145401.png"><br>重新注册虚拟机。<br><img src="https://qiufuqi.github.io/img/hexo/20230715145417.png"></p><h1 id="vCenter修改"><a href="#vCenter修改" class="headerlink" title="vCenter修改"></a>vCenter修改</h1><p>在虚拟机迁移时选择修改磁盘模式</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> 磁盘格式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> 磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控3-数据采集方式</title>
      <link href="/zabbix_agent_caiji/"/>
      <url>/zabbix_agent_caiji/</url>
      
        <content type="html"><![CDATA[<p><strong>zabbix监控 主动回传 proxy代理</strong></p><h2 id="agent端主动回传"><a href="#agent端主动回传" class="headerlink" title="agent端主动回传"></a>agent端主动回传</h2><p>之前配置都是server端主动采集agent端的数据，此种方式agent端越多zabbix主机的压力就越大，接下来我们让agent端主动将数据发给agent端：(主动被动完全取决于agent端link的模板)</p><p>在网页前端，将10.11.8.68上的模板取消连接并清理：<br><img src="https://qiufuqi.github.io/img/hexo/20230614153812.png"><br>重新选择模板Template OS Linux by Zabbix agent active并更新，此模板是agent端主动将信息回传回来：<br><img src="https://qiufuqi.github.io/img/hexo/20230614153841.png"><br>可以看到监控项已变更：<br><img src="https://qiufuqi.github.io/img/hexo/20230614154037.png"></p><h3 id="客户端修改"><a href="#客户端修改" class="headerlink" title="客户端修改"></a>客户端修改</h3><p>agent客户端修改，消息采集由proxy来进行。主动模式需要加上端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-node ~]<span class="comment"># vi /etc/zabbix/zabbix_agentd.conf  #主要修改下面几个参数</span></span><br><span class="line">StartAgents=0             <span class="comment">#客户端agent模式。设置为0表示启用主动模式，而被动模式被关闭，但被监控端的 zabbix_agentd 不监听本地端口</span></span><br><span class="line">Server=10.11.7.64<span class="comment">#被动模式，指定zabbix-server服务端的ip地址，多个ip的话使用逗号分隔</span></span><br><span class="line">ServerActive=10.11.7.64 <span class="comment">#主动模式，指定zabbix-server的ip地址，使用逗号分隔多IP，如果注释这个选项，那么当前服务器的主动监控就被禁用了</span></span><br><span class="line">Hostname=10.11.8.68       <span class="comment">#当使用主动模式时,这个名称的设置必须与zabbix-web监控页面创建的主机名称保持一致</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下可用设置</span></span><br><span class="line">RefreshActiveChecks=180    <span class="comment">#被监控端到服务器获取监控项的周期</span></span><br><span class="line">BufferSize=200              <span class="comment">#被监控端存储监控信息的空间大小</span></span><br><span class="line">Timeout=10                  <span class="comment">#超时时间</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># systemctl restart zabbix-agent</span></span><br></pre></td></tr></table></figure><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><h4 id="问题一："><a href="#问题一：" class="headerlink" title="问题一："></a>问题一：</h4><p>配置好自动注册后，但Agent注册完成后，Server也可正常接收Agent发送过来的数据，但是可用性一直处于灰色，无法变绿<br><img src="https://qiufuqi.github.io/img/hexo/20230615093948.png"></p><p>更改方式一：全局更改<br>改配置如下：配置 =&gt; 模板 — 名称：Template OS Linux by Zabbix agent active<br>需为主机添加一个Zabbix客户端式监控项 点击 监控项 =&gt; 类型选择：Zabbix客户端，选中System local time，启用<br>强制更新缓存(参考本页最下面)，可用性立马变成绿色</p><p>更改方式二：单主机更改<br>配置 =&gt; 主机 =&gt; 选中主机，点击监控项 =&gt; 类型选择：Zabbix客户端，选中System local time，启用</p><h4 id="问题二："><a href="#问题二：" class="headerlink" title="问题二："></a>问题二：</h4><p>客户端刚变更为active主动时，会有报错信息:<br>vfs.dev.write.await[sda]” became not supported: Cannot evaluate expression: “Cannot evaluate function “last()”: not enough data.”<br>这是因为进行calculated，必须先有数据，才能进行计算，不然的话，可能无法计算，导致出错。<br>更改配置如下：配置 =&gt; 模板 — 名称：Template OS Linux by Zabbix agent active<br>点击 监控项 =&gt; Zabbix客户端(主动式)，选中所有名称，先停用，再启用。<br><img src="https://qiufuqi.github.io/img/hexo/20230615093223.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># tail -f /var/log/zabbix/zabbix_server.log</span></span><br><span class="line">16802:20230615:092101.658 item <span class="string">&quot;10.11.8.68:vfs.dev.write.await[sda]&quot;</span> became not supported: Cannot evaluate expression: <span class="string">&quot;Cannot evaluate function &quot;</span>last()<span class="string">&quot;: not enough data.&quot;</span>.</span><br><span class="line"> 16804:20230615:092401.367 item <span class="string">&quot;10.11.8.68:vfs.dev.read.await[sda]&quot;</span> became supported</span><br></pre></td></tr></table></figure><h2 id="proxy代理"><a href="#proxy代理" class="headerlink" title="proxy代理"></a>proxy代理</h2><p>提高了sever端的效率，但是server端就一个，我们可以通过添加一个proxy代理来进一步减轻server端的压力。<br>我这里提前安装好了zabbix-proxy ，具体<a href="/zabbix_install">安装步骤参考</a></p><h3 id="创建代理"><a href="#创建代理" class="headerlink" title="创建代理"></a>创建代理</h3><p>中文：管理 =&gt; agent代理程序 =&gt; 创建代理 (右上角) ，<strong>agent代理程序名称要和配置 /etc/zabbix/zabbix_proxy.conf 的Hostname一致，否则会报错</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># vi /etc/zabbix/zabbix_proxy.conf</span></span><br><span class="line">DBPassword=proxy-64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者 修改为下列参数</span></span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=proxy-64</span><br><span class="line">Server=10.11.7.63     <span class="comment"># Server端的地址 agent可以直接向Server发送，也可以向Proxy发送</span></span><br><span class="line">Hostname=Zabbix proxy</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20230614154351.png"></p><h3 id="客户端修改-1"><a href="#客户端修改-1" class="headerlink" title="客户端修改"></a>客户端修改</h3><p>agent客户端修改，消息采集由proxy来进行。主动模式需要加上端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-node ~]<span class="comment"># vi /etc/zabbix/zabbix_agentd.conf  #主要修改下面几个参数</span></span><br><span class="line">StartAgents=0             <span class="comment">#客户端agent模式。设置为0表示启用主动模式，而被动模式被关闭，但被监控端的 zabbix_agentd 不监听本地端口</span></span><br><span class="line">Server=10.11.7.64<span class="comment">#被动模式，指定zabbix-server服务端的ip地址，多个ip的话使用逗号分隔</span></span><br><span class="line">ServerActive=10.11.7.64   <span class="comment">#主动模式，指定zabbix-server的ip地址，使用逗号分隔多IP，如果注释这个选项，那么当前服务器的主动监控就被禁用了</span></span><br><span class="line">Hostname=10.11.8.68      <span class="comment">#当使用主动模式时,这个名称的设置必须与zabbix-web监控页面创建的主机名称保持一致</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下可用设置</span></span><br><span class="line">RefreshActiveChecks=180    <span class="comment">#被监控端到服务器获取监控项的周期</span></span><br><span class="line">BufferSize=200              <span class="comment">#被监控端存储监控信息的空间大小</span></span><br><span class="line">Timeout=10                  <span class="comment">#超时时间</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># systemctl restart zabbix-agent</span></span><br></pre></td></tr></table></figure><p>Web端修改代理程序监测<br><img src="https://qiufuqi.github.io/img/hexo/20230614154826.png"></p><h2 id="强制更新缓存"><a href="#强制更新缓存" class="headerlink" title="强制更新缓存"></a>强制更新缓存</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 强制更新zabbix_server缓存</span></span><br><span class="line">zabbix_server -R config_cache_reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制更新zabbix proxy缓存</span></span><br><span class="line">zabbix_proxy -c /etc/zabbix/zabbix_proxy.conf --runtime-control config_cache_reload</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
          <category> 采集/代理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
            <tag> agent </tag>
            
            <tag> 采集 </tag>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控4-告警发送</title>
      <link href="/zabbix_alert/"/>
      <url>/zabbix_alert/</url>
      
        <content type="html"><![CDATA[<p>Zabbix预警信息发送：Email和钉钉。</p><h1 id="Email告警"><a href="#Email告警" class="headerlink" title="Email告警"></a>Email告警</h1><h2 id="媒介配置Email"><a href="#媒介配置Email" class="headerlink" title="媒介配置Email"></a>媒介配置Email</h2><p>管理 &gt; 报警媒介类型，选择Email<br><img src="https://qiufuqi.github.io/img/hexo/20230614160152.png"></p><p>填写邮箱相关信息（我用的是126的邮箱，请根据自己邮箱设置来填写）<br><img src="https://qiufuqi.github.io/img/hexo/20230615143029.png"></p><p>编辑消息模板，告警时会调用这里的模板信息<br><img src="https://qiufuqi.github.io/img/hexo/20230614165349.png"></p><p>配置好相关邮箱信息后，可进行邮箱发送测试（我的邮箱成功收到邮件）<br><img src="https://qiufuqi.github.io/img/hexo/20230614160836.png"></p><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p>即用户和报警媒介关联，注意创建用户要对服务器群组有读取权限才可以发送邮件<br>管理–&gt;用户群组–&gt;创建用户群组 ，添加对服务器群组读取权限<br><img src="https://qiufuqi.github.io/img/hexo/20230615142545.png"></p><p>管理 &gt; 用户，创建新的用户，并添加到对应用户组，添加/编辑[报警媒介]<br><img src="https://qiufuqi.github.io/img/hexo/20230614161059.png"><br>编辑报警媒介，填写收件人（出现问题会给指定邮箱发送告警邮件）<br><img src="https://qiufuqi.github.io/img/hexo/20230614161151.png"><br><strong>权限无法修改，由用户组统一分配。</strong></p><h2 id="警报动作"><a href="#警报动作" class="headerlink" title="警报动作"></a>警报动作</h2><p>配置 &gt; 动作 &gt; 创建动作<br><img src="https://qiufuqi.github.io/img/hexo/20230614161435.png"><br>动作：输入告警名称，触发器触发的条件(测试使用，可以不选)<br><img src="https://qiufuqi.github.io/img/hexo/20230615143653.png"><br>操作：<br>默认操作步骤持续时间改为60s，操作/回复操作 点击添加按钮 （可提前创建用户组/用户，创建用户时 要勾选报警媒介，填写接收邮件地址）<br>发送消息可以按照个人，也可以按照组来发送，消息内容自定义。</p><p>故障操作：<br><img src="https://qiufuqi.github.io/img/hexo/20230614163020.png"><br>自定义消息内容 或者使用报警媒介那边的消息模板</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">主题：Host:&#123;HOST.NAME&#125;: &#123;TRIGGER.NAME&#125;故障</span><br><span class="line">消息：</span><br><span class="line">&#123;Zabbix告警：</span><br><span class="line">Warning 主机:&#123;HOST.NAME&#125;</span><br><span class="line">Host:&#123;HOST.IP&#125;</span><br><span class="line">监控项目:&#123;ITEM.NAME&#125;</span><br><span class="line">监控取值:&#123;ITEM.LASTVALUE&#125;</span><br><span class="line">报警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;</span><br><span class="line">报警信息:&#123;TRIGGER.NAME&#125;</span><br><span class="line">报警data:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恢复操作：<br><img src="https://qiufuqi.github.io/img/hexo/20230614162602.png"><br>自定义消息内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">主题：Host:&#123;HOST.NAME&#125;: &#123;TRIGGER.NAME&#125;已恢复!</span><br><span class="line">消息：</span><br><span class="line">&#123;Zabbix恢复：</span><br><span class="line">Warning 主机:&#123;HOST.NAME&#125;</span><br><span class="line">Host:&#123;HOST.IP&#125;</span><br><span class="line">监控项目:&#123;ITEM.NAME&#125;</span><br><span class="line">监控取值:&#123;ITEM.LASTVALUE&#125;</span><br><span class="line">报警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;</span><br><span class="line">报警信息:&#123;TRIGGER.NAME&#125;</span><br><span class="line">报警data:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">恢复时间:&#123;EVENT.RECOVERY.DATE&#125; &#123;EVENT.RECOVERY.TIME&#125;</span><br><span class="line">持续时间:&#123;EVENT.AGE&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证报警"><a href="#验证报警" class="headerlink" title="验证报警"></a>验证报警</h2><p>将被监控虚机关机，再开机，就会收到邮件提醒。<br>（大部分出问题再用户组权限出，要有对某个组的读写的权限）<br>报表 =&gt; 触发器 TOP100 可查看出现哪些问题<br>报表 =&gt; 动作日志 可查看是否发送邮件</p><h1 id="钉钉报警"><a href="#钉钉报警" class="headerlink" title="钉钉报警"></a>钉钉报警</h1><h2 id="创建钉钉机器人"><a href="#创建钉钉机器人" class="headerlink" title="创建钉钉机器人"></a>创建钉钉机器人</h2><p>自行百度创建，拿到Webhook地址</p><h2 id="升级服务器Python版本"><a href="#升级服务器Python版本" class="headerlink" title="升级服务器Python版本"></a>升级服务器Python版本</h2><p>升级Python3 <a href="/python_upgrate">升级参考</a>，安装必要的组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server alertscripts]<span class="comment"># wget https://bootstrap.pypa.io/pip/3.6/get-pip.py</span></span><br><span class="line">[root@zabbix-server alertscripts]<span class="comment"># python get-pip.py</span></span><br><span class="line">[root@zabbix-server alertscripts]<span class="comment"># pip install requests</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建钉钉报警脚本"><a href="#创建钉钉报警脚本" class="headerlink" title="创建钉钉报警脚本"></a>创建钉钉报警脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看脚本存放位置</span></span><br><span class="line">[root@zabbix-server zabbix]<span class="comment"># grep ^AlertScriptsPath /etc/zabbix/zabbix_server.conf</span></span><br><span class="line">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br><span class="line">[root@zabbix-server zabbix]<span class="comment"># cd /usr/lib/zabbix/alertscripts</span></span><br><span class="line">[root@zabbix-server zabbix]<span class="comment"># vi dingding.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="comment">#zabbix钉钉报警  ./dingding.py(0) 钉钉号(1) test(2) &quot;这个条测试信息,忽略 ID&quot;(3) </span></span><br><span class="line">import requests,json,sys,os,datetime</span><br><span class="line">webhook=<span class="string">&quot;https://oapi.dingtalk.com/robot/send?access_token=************************&quot;</span></span><br><span class="line">user=sys.argv[1]</span><br><span class="line">text=sys.argv[3]</span><br><span class="line">data=&#123;</span><br><span class="line">    <span class="string">&quot;msgtype&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">    <span class="string">&quot;text&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;content&quot;</span>: text</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;at&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;atMobiles&quot;</span>: [</span><br><span class="line">            user</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;isAtAll&quot;</span>: False</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">x=requests.post(url=webhook,data=json.dumps(data),headers=headers)</span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&quot;/var/log/zabbix/dingding.log&quot;</span>):</span><br><span class="line">    f=open(<span class="string">&quot;/var/log/zabbix/dingding.log&quot;</span>,<span class="string">&quot;a+&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    f=open(<span class="string">&quot;/var/log/zabbix/dingding.log&quot;</span>,<span class="string">&quot;w+&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;--&quot;</span>*30)</span><br><span class="line"><span class="keyword">if</span> x.json()[<span class="string">&quot;errcode&quot;</span>] == 0:</span><br><span class="line">    f.write(<span class="string">&quot;\n&quot;</span>+str(datetime.datetime.now())+<span class="string">&quot;    &quot;</span>+str(user)+<span class="string">&quot;    &quot;</span>+<span class="string">&quot;发送成功&quot;</span>+<span class="string">&quot;\n&quot;</span>+str(text))</span><br><span class="line">    f.close()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    f.write(<span class="string">&quot;\n&quot;</span>+str(datetime.datetime.now()) + <span class="string">&quot;    &quot;</span> + str(user) + <span class="string">&quot;    &quot;</span> + <span class="string">&quot;发送失败&quot;</span> + <span class="string">&quot;\n&quot;</span> + str(text))</span><br><span class="line">    <span class="built_in">print</span>(x.json())</span><br><span class="line">    f.close()</span><br><span class="line">[root@zabbix-server alertscripts]<span class="comment"># chmod +x dingding.py </span></span><br></pre></td></tr></table></figure><p>创建日志文件夹/文件：/var/log/zabbix/dingding.log</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server zabbix]<span class="comment"># touch /var/log/zabbix/dingding.log</span></span><br><span class="line">[root@zabbix-server zabbix]<span class="comment"># chown -R zabbix.zabbix /var/log/zabbix/dingding.log</span></span><br></pre></td></tr></table></figure><p>测试报警信息 （钉钉群中有这个手机号或者钉钉号）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./dingding.py  185xxxxxxxx <span class="built_in">test</span> <span class="string">&quot;这个条测试信息,忽略&quot;</span> </span><br><span class="line">./dingding.py  钉钉号 <span class="built_in">test</span> <span class="string">&quot;这个条测试信息,忽略 ID&quot;</span> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> 告警 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
            <tag> agent </tag>
            
            <tag> 告警 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控4-告警发送</title>
      <link href="/zabbix_show/"/>
      <url>/zabbix_show/</url>
      
        <content type="html"><![CDATA[<p>Zabbix预警信息发送：Email和钉钉。</p><h1 id="Email告警"><a href="#Email告警" class="headerlink" title="Email告警"></a>Email告警</h1><h2 id="媒介配置Email"><a href="#媒介配置Email" class="headerlink" title="媒介配置Email"></a>媒介配置Email</h2><p>管理 &gt; 报警媒介类型，选择Email<br><img src="https://qiufuqi.github.io/img/hexo/20230614160152.png"></p><p>填写邮箱相关信息（我用的是126的邮箱，请根据自己邮箱设置来填写）<br><img src="https://qiufuqi.github.io/img/hexo/20230614160721.png"><br>编辑消息模板，告警时会调用这里的模板信息<br><img src="https://qiufuqi.github.io/img/hexo/20230614165349.png"></p><p>配置好相关邮箱信息后，可进行邮箱发送测试（我的邮箱成功收到邮件）<br><img src="https://qiufuqi.github.io/img/hexo/20230614160836.png"></p><h2 id="收件人配置"><a href="#收件人配置" class="headerlink" title="收件人配置"></a>收件人配置</h2><p>管理 &gt; 用户，选择Zabbix用户编辑，添加/编辑[报警媒介]<br><img src="https://qiufuqi.github.io/img/hexo/20230614161059.png"><br>编辑报警媒介，填写收件人（出现问题会给指定邮箱发送告警邮件）<br><img src="https://qiufuqi.github.io/img/hexo/20230614161151.png"></p><h2 id="警报动作"><a href="#警报动作" class="headerlink" title="警报动作"></a>警报动作</h2><p>配置 &gt; 动作 &gt; 创建动作<br><img src="https://qiufuqi.github.io/img/hexo/20230614161435.png"><br>输入告警名称，默认操作步骤持续时间改为60s，操作/回复操作 点击添加按钮 （可提前创建用户组/用户，创建用户时 要勾选报警媒介，填写接收邮件地址）<br>发送消息可以按照个人，也可以按照组来发送，消息内容自定义。</p><p>故障操作：<br><img src="https://qiufuqi.github.io/img/hexo/20230614163020.png"><br>自定义消息内容 或者使用报警媒介那边的消息模板</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">主题：Host:&#123;HOST.NAME&#125;: &#123;TRIGGER.NAME&#125;故障</span><br><span class="line">消息：</span><br><span class="line">&#123;Zabbix告警：</span><br><span class="line">Warning 主机:&#123;HOST.NAME&#125;</span><br><span class="line">Host:&#123;HOST.IP&#125;</span><br><span class="line">监控项目:&#123;ITEM.NAME&#125;</span><br><span class="line">监控取值:&#123;ITEM.LASTVALUE&#125;</span><br><span class="line">报警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;</span><br><span class="line">报警信息:&#123;TRIGGER.NAME&#125;</span><br><span class="line">报警data:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恢复操作：<br><img src="https://qiufuqi.github.io/img/hexo/20230614162602.png"><br>自定义消息内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">主题：Host:&#123;HOST.NAME&#125;: &#123;TRIGGER.NAME&#125;已恢复!</span><br><span class="line">消息：</span><br><span class="line">&#123;Zabbix恢复：</span><br><span class="line">Warning 主机:&#123;HOST.NAME&#125;</span><br><span class="line">Host:&#123;HOST.IP&#125;</span><br><span class="line">监控项目:&#123;ITEM.NAME&#125;</span><br><span class="line">监控取值:&#123;ITEM.LASTVALUE&#125;</span><br><span class="line">报警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;</span><br><span class="line">报警信息:&#123;TRIGGER.NAME&#125;</span><br><span class="line">报警data:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">恢复时间:&#123;EVENT.RECOVERY.DATE&#125; &#123;EVENT.RECOVERY.TIME&#125;</span><br><span class="line">持续时间:&#123;EVENT.AGE&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证报警"><a href="#验证报警" class="headerlink" title="验证报警"></a>验证报警</h2>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> 告警 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
            <tag> agent </tag>
            
            <tag> 告警 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控1-Server和Proxy</title>
      <link href="/zabbix_install/"/>
      <url>/zabbix_install/</url>
      
        <content type="html"><![CDATA[<h1 id="Zabbix简介"><a href="#Zabbix简介" class="headerlink" title="Zabbix简介"></a>Zabbix简介</h1><p><a href="https://www.zabbix.com/">zabbix官网</a><br>zabbix是一个基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案。<br>zabbix能监视各种网络参数，保证服务器系统的安全运营；并提供灵活的通知机制以让系统管理员快速定位/解决存在的各种问题。<br>zabbix由2部分构成，zabbix server与可选组件zabbix agent。<br>zabbix server可以通过SNMP，zabbix agent，ping，端口监视等方法提供对远程服务器/网络状态的监视，数据收集等功能，它可以运行在Linux，Solaris，HP-UX，AIX，Free BSD，Open BSD，OS X等平台上。<br>zabbix主要做到以下监控：</p><ul><li>CPU负荷</li><li>内存使用</li><li>磁盘使用</li><li>网络状况</li><li>端口监视</li><li>日志监视</li></ul><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>提前环境准备，参考zabbix官网来，我的环境用的是CentOS7.6 ，Zabbix-server用的是5.0 LTS Nginx版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Zabbix Server 10.11.7.63</span><br><span class="line">Zabbix Proxy  10.11.7.64/10.11.8.99</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20230613145108.png"><br>这里zabbix server和zabbix proxy是同一个网段下，zabbix proxy有两块网卡，一个是7，一个是8网段 ，8网段的agent数据收集通过proxy代理进行收集信息，在一定时间内，批量上传至server，这样可以避免频繁访问server端，对服务器造成压力</p><h2 id="zabbix-server安装"><a href="#zabbix-server安装" class="headerlink" title="zabbix-server安装"></a>zabbix-server安装</h2><p>本次选择zabbix-server 5.0 LTS Nginx版本。<a href="https://www.zabbix.com/cn/download?zabbix=5.0&os_distribution=centos&os_version=7&components=server_frontend_agent&db=mysql&ws=nginx">官网地址</a><br>官网推荐通过二进制包来安装,<strong>具体命令参考官网地址即可</strong><br><img src="https://qiufuqi.github.io/img/hexo/20230613153000.png"></p><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><p>关闭防火墙，selinux，安装依赖包等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># systemctl disable firewalld</span></span><br><span class="line">[root@zabbix-server ~]<span class="comment"># vi /etc/sysconfig/selinux</span></span><br><span class="line">[root@zabbix-server ~]<span class="comment"># yum -y install epel-release net-tools</span></span><br></pre></td></tr></table></figure><h3 id="获取zabbix仓库"><a href="#获取zabbix仓库" class="headerlink" title="获取zabbix仓库"></a>获取zabbix仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span></span><br><span class="line">[root@zabbix-server ~]<span class="comment"># yum clean all</span></span><br></pre></td></tr></table></figure><h3 id="安装zabbix-server"><a href="#安装zabbix-server" class="headerlink" title="安装zabbix-server"></a>安装zabbix-server</h3><p>安装Zabbix server，Web前端，agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># yum -y install zabbix-server-mysql zabbix-agent</span></span><br></pre></td></tr></table></figure><h3 id="安装zabbix前端包"><a href="#安装zabbix前端包" class="headerlink" title="安装zabbix前端包"></a>安装zabbix前端包</h3><p>安装zabbix前端包，编辑配置文件 /etc/yum.repos.d/zabbix.repo ，确保zabbix-frontend repository.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># yum -y install centos-release-scl</span></span><br><span class="line">[root@zabbix-server ~]<span class="comment"># vi /etc/yum.repos.d/zabbix.repo</span></span><br><span class="line">·········</span><br><span class="line">[zabbix-frontend]</span><br><span class="line">·········</span><br><span class="line">enabled=1</span><br><span class="line">·········</span><br><span class="line">[root@zabbix-server ~]<span class="comment"># yum -y install zabbix-web-mysql-scl zabbix-nginx-conf-scl</span></span><br></pre></td></tr></table></figure><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><p>我这里选用的是Mysql数据库，数据库可以是本机安装，也可以是其他现有的数据库（配置zabbix-server时数据库参数对应修改）。确保Mysql正确安装且运行，<a href="/centos_mysql5.7">数据库安装参考。</a><br>执行以下代码，创建zabbix数据库，并创建zabbix账户，密码是：server-63</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">password</span><br><span class="line">mysql&gt; create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; create user zabbix@localhost identified by <span class="string">&#x27;server-63&#x27;</span>;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@localhost;</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global log_bin_trust_function_creators = 1;</span><br><span class="line">mysql&gt; quit;</span><br></pre></td></tr></table></figure><p>导入初始架构和数据，系统将提示您输入新创建的密码。执行成功后关闭mysql的 log_bin_trust_function_creators 参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span></span><br><span class="line"></span><br><span class="line">[root@zabbix-server ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">password</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global log_bin_trust_function_creators = 0;</span><br><span class="line">mysql&gt; quit;</span><br></pre></td></tr></table></figure><h3 id="配置zabbix-server数据库"><a href="#配置zabbix-server数据库" class="headerlink" title="配置zabbix-server数据库"></a>配置zabbix-server数据库</h3><p>编辑配置文件 /etc/zabbix/zabbix_server.conf，大概124行<br>如果上一步的数据库不是安装在本机，则修改对应的参数（DBHost，DBName）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># vi /etc/zabbix/zabbix_server.conf</span></span><br><span class="line">DBPassword=server-63</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者修改为</span></span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=server-63</span><br><span class="line">Server=10.11.7.63</span><br><span class="line">Hostname=zabbix-server</span><br></pre></td></tr></table></figure><h3 id="配置zabbix的前端PHP"><a href="#配置zabbix的前端PHP" class="headerlink" title="配置zabbix的前端PHP"></a>配置zabbix的前端PHP</h3><p>编辑配置文件 /etc/opt/rh/rh-nginx116/nginx/conf.d/zabbix.conf，设置端口和域名（自己指定，不一定一样）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># vi /etc/opt/rh/rh-nginx116/nginx/conf.d/zabbix.conf</span></span><br><span class="line">listen 80;</span><br><span class="line">server_name zabbix.yurun.com;</span><br></pre></td></tr></table></figure><p>编辑配置文件 /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf，设置acl_users </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># vi /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf</span></span><br><span class="line">·····</span><br><span class="line">listen.acl_users = apache,nginx</span><br><span class="line">php_value[date.timezone] = Asia/Shanghai</span><br></pre></td></tr></table></figure><h3 id="启动zabbix-server和agent进程"><a href="#启动zabbix-server和agent进程" class="headerlink" title="启动zabbix-server和agent进程"></a>启动zabbix-server和agent进程</h3><p>启动Zabbix server和agent进程，并为它们设置开机自启，无法启动时参考最后的<strong>启动问题处理。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-server ~]<span class="comment"># systemctl restart zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span></span><br><span class="line">[root@zabbix-server ~]<span class="comment"># systemctl enable zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库自启动，如果数据库在同一台服务器</span></span><br><span class="line">[root@zabbix-server ~]<span class="comment"># systemctl enable mysqld</span></span><br></pre></td></tr></table></figure><h3 id="访问zabbix"><a href="#访问zabbix" class="headerlink" title="访问zabbix"></a>访问zabbix</h3><p>通过设置的域名访问zabbix：<a href="http://zabbix.yurun.com/setup.php%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%B2%A1%E8%AE%BE%E7%BD%AE%E5%B0%B1%E7%9B%B4%E6%8E%A5%E7%94%A8IP%E8%AE%BF%E9%97%AE%EF%BC%8C%E6%8C%89%E7%85%A7%E6%AD%A5%E9%AA%A4%E5%AE%8C%E6%88%90%E5%90%8E%E7%BB%AD%E5%AE%89%E8%A3%85%E3%80%82">http://zabbix.yurun.com/setup.php，如果没设置就直接用IP访问，按照步骤完成后续安装。</a><br><img src="https://qiufuqi.github.io/img/hexo/20230613164415.png"><br>完成后默认登录账号：Admin 密码：zabbix</p><h2 id="zabbix-proxy安装"><a href="#zabbix-proxy安装" class="headerlink" title="zabbix-proxy安装"></a>zabbix-proxy安装</h2><p>zabbix proxy可以代替zabbix server检索客户端的数据，然后把数据汇报给zabbix server，并且在一定程度上分担了zabbix server的压力.zabbix proxy可以非常简便的实现了集中式、分布式监控。<a href="https://www.zabbix.com/cn/download?zabbix=5.0&os_distribution=centos&os_version=7&components=proxy&db=mysql&ws=">安装参考文档</a>和zabbix-server版本要统一。<br>zabbix-proxy使用场景:</p><ul><li>监控远程区域设备</li><li>监控本地网络不稳定区域</li><li>当zabbix监控上千设备时，使用它来减轻server的压力</li><li>简化zabbix的维护</li></ul><h3 id="基础配置-1"><a href="#基础配置-1" class="headerlink" title="基础配置"></a>基础配置</h3><p>关闭防火墙，selinux，安装依赖包等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># systemctl disable firewalld</span></span><br><span class="line">[root@zabbix-proxy ~]<span class="comment"># vi /etc/sysconfig/selinux</span></span><br><span class="line">[root@zabbix-proxy ~]<span class="comment"># yum -y install epel-release net-tools</span></span><br></pre></td></tr></table></figure><h3 id="获取zabbix仓库-1"><a href="#获取zabbix仓库-1" class="headerlink" title="获取zabbix仓库"></a>获取zabbix仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span></span><br><span class="line">[root@zabbix-proxy ~]<span class="comment"># yum clean all</span></span><br></pre></td></tr></table></figure><h3 id="安装zabbix-proxy"><a href="#安装zabbix-proxy" class="headerlink" title="安装zabbix-proxy"></a>安装zabbix-proxy</h3><p>安装Zabbix proxy，Web前端，agent</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># yum -y install zabbix-proxy-mysql</span></span><br></pre></td></tr></table></figure><h3 id="数据库操作-1"><a href="#数据库操作-1" class="headerlink" title="数据库操作"></a>数据库操作</h3><p>我这里选用的是Mysql数据库，数据库可以是本机安装，也可以是其他现有的数据库（配置zabbix-proxy时数据库参数对应修改）。确保Mysql正确安装且运行，<a href="/centos_mysql5.7">数据库安装参考。</a><br>执行以下代码，创建zabbix数据库，并创建zabbix账户，密码是：proxy-64</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">password</span><br><span class="line">mysql&gt; create database zabbix_proxy character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; create user zabbix@localhost identified by <span class="string">&#x27;proxy-64&#x27;</span>;</span><br><span class="line">mysql&gt; grant all privileges on zabbix_proxy.* to zabbix@localhost;</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global log_bin_trust_function_creators = 1;</span><br><span class="line">mysql&gt; quit;</span><br></pre></td></tr></table></figure><p>导入初始架构和数据，系统将提示您输入新创建的密码。执行成功后关闭mysql的 log_bin_trust_function_creators 参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># zcat /usr/share/doc/zabbix-proxy-mysql*/schema.sql.gz | mysql -uzabbix -p zabbix_proxy</span></span><br><span class="line"></span><br><span class="line">[root@zabbix-proxy ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">password</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global log_bin_trust_function_creators = 0;</span><br><span class="line">mysql&gt; quit;</span><br></pre></td></tr></table></figure><h3 id="配置zabbix-proxy数据库"><a href="#配置zabbix-proxy数据库" class="headerlink" title="配置zabbix-proxy数据库"></a>配置zabbix-proxy数据库</h3><p>编辑配置文件 /etc/zabbix/zabbix_proxy.conf，大概196行<br>如果上一步的数据库不是安装在本机，则修改对应的参数（DBHost，DBName）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># vi /etc/zabbix/zabbix_proxy.conf</span></span><br><span class="line">DBPassword=proxy-64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者 修改为下列参数</span></span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=proxy-64</span><br><span class="line">Server=10.11.7.63     <span class="comment"># proxy向server发送数据</span></span><br><span class="line">Hostname=Zabbix proxy</span><br></pre></td></tr></table></figure><h3 id="启动zabbix-proxy进程"><a href="#启动zabbix-proxy进程" class="headerlink" title="启动zabbix-proxy进程"></a>启动zabbix-proxy进程</h3><p>启动Zabbix proxy并为它们设置开机自启，无法启动时参考最后的<strong>启动问题处理。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># systemctl restart zabbix-proxy</span></span><br><span class="line">[root@zabbix-proxy ~]<span class="comment"># systemctl enable zabbix-proxy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库自启动，如果数据库在同一台服务器</span></span><br><span class="line">[root@zabbix-proxy ~]<span class="comment"># systemctl enable mysqld</span></span><br></pre></td></tr></table></figure><h2 id="zabbix配置代理"><a href="#zabbix配置代理" class="headerlink" title="zabbix配置代理"></a>zabbix配置代理</h2><p>登录到zabbix-server网址后，设置代理，路径如下：<br>Administration =&gt; Proxies =&gt; Create proxy (右上角)，填写zabbix-proxy的相关信息。<br>注意：<strong>agent代理程序名称要和配置 /etc/zabbix/zabbix_proxy.conf 的Hostname一致，否则会报错</strong><br><img src="https://qiufuqi.github.io/img/hexo/20230614091213.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230614091444.png"></p><p>中文：管理 =&gt; agent代理程序 =&gt; 创建代理 (右上角) ，代理名称要和proxy.conf配置里的hostname一致。<br><img src="https://qiufuqi.github.io/img/hexo/20230614140645.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># tail -f /var/log/zabbix/zabbix_proxy.log </span></span><br><span class="line"> 27095:20230614:111711.813 cannot send proxy data to server at <span class="string">&quot;10.11.7.63&quot;</span>: proxy <span class="string">&quot;Zabbix proxy&quot;</span> not found</span><br><span class="line"> 27095:20230614:111712.814 cannot send proxy data to server at <span class="string">&quot;10.11.7.63&quot;</span>: proxy <span class="string">&quot;Zabbix proxy&quot;</span> not found</span><br></pre></td></tr></table></figure><h2 id="zabbix-agent安装"><a href="#zabbix-agent安装" class="headerlink" title="zabbix-agent安装"></a>zabbix-agent安装</h2><p>zabbix-agent多端，linux或者window都可以，<a href="/zabbix_agent">安装参考。</a>，端口一般10050，可以关闭防火墙或者放行。<br>zabbix-agent监控方式可分为主动和被动<br>在zabbix web页面Monitoring-&gt;Configuration-&gt;Hosts 页面更改Host name和zabbix_agentd.conf里面的Hostname一样。(建议直接写IP) </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># vi /etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">Server=10.11.8.64</span><br><span class="line">ServerActive=10.11.8.64</span><br><span class="line">Hostname=10.11.8.68   <span class="comment"># 或者当前被监控IP</span></span><br><span class="line"></span><br><span class="line">[root@zabbix-proxy ~]<span class="comment"># systemctl restart zabbix-agent</span></span><br></pre></td></tr></table></figure><h1 id="强制更新缓存"><a href="#强制更新缓存" class="headerlink" title="强制更新缓存"></a>强制更新缓存</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 强制更新zabbix_server缓存</span></span><br><span class="line">zabbix_server -R config_cache_reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制更新zabbix proxy缓存</span></span><br><span class="line">zabbix_proxy -c /etc/zabbix/zabbix_proxy.conf --runtime-control config_cache_reload</span><br></pre></td></tr></table></figure><h1 id="启动问题处理"><a href="#启动问题处理" class="headerlink" title="启动问题处理"></a>启动问题处理</h1><p>zabbix-server，zabbix-proxy无法启动问题，发现缺失libmysqlclient.so.18，<a href="https://blog.csdn.net/LT_Future/article/details/103648662">处理参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment">#  journalctl -xe</span></span><br><span class="line">·········</span><br><span class="line">Jun 13 16:26:35 zabbix-server zabbix_server[16346]: /usr/sbin/zabbix_server: error <span class="keyword">while</span> loading shared libraries: libmysqlclient.so.18: cannot open shared obj</span><br><span class="line">·········</span><br></pre></td></tr></table></figure><p>错误原因：安装mysql5.7时，手动卸载了系统自带的mariadb-libs-5.5.56-2.el7.x86_64，安装mysql之后只有libmysqlclient.so.20，所以找不到libmysqlclient.so.18文件<br>安装mysql-community-libs-compat-5.7.31-1.el7.x86_64.rpm，这个安装包中会包括所需版本的libmysqlclient.so（跟数据库版本一致），<a href="https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/">下载地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix-proxy ~]<span class="comment"># wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-libs-compat-5.7.31-1.el7.x86_64.rpm</span></span><br><span class="line">[root@zabbix-proxy ~]<span class="comment"># rpm -ivh mysql-community-libs-compat-5.7.31-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="comment"># 此时缺失的文件已存在</span></span><br><span class="line">[root@zabbix-proxy ~]<span class="comment"># ll /usr/lib64/mysql/</span></span><br><span class="line">total 15276</span><br><span class="line">lrwxrwxrwx  1 root root      20 Jun 13 16:36 libmysqlclient_r.so.18 -&gt; libmysqlclient.so.18</span><br><span class="line">lrwxrwxrwx  1 root root      24 Jun 13 16:36 libmysqlclient_r.so.18.1.0 -&gt; libmysqlclient.so.18.1.0</span><br><span class="line">lrwxrwxrwx  1 root root      24 Jun 13 16:36 libmysqlclient.so.18 -&gt; libmysqlclient.so.18.1.0</span><br><span class="line">-rwxr-xr-x  1 root root 5983544 Jun  2  2020 libmysqlclient.so.18.1.0</span><br><span class="line">lrwxrwxrwx  1 root root      25 Jun 13 15:49 libmysqlclient.so.20 -&gt; libmysqlclient.so.20.3.18</span><br><span class="line">-rwxr-xr-x  1 root root 9652456 Jun  2  2020 libmysqlclient.so.20.3.18</span><br><span class="line">drwxr-xr-x  4 root root      28 Jun 13 15:52 mecab</span><br><span class="line">drwxr-xr-x. 3 root root    4096 Jun 13 15:52 plugin</span><br></pre></td></tr></table></figure><p>此时重启zabbix-server或者zabbix-proxy即可</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
          <category> server/proxy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
            <tag> Server </tag>
            
            <tag> Proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS系统安装</title>
      <link href="/centos_install/"/>
      <url>/centos_install/</url>
      
        <content type="html"><![CDATA[<p><strong>CentOS系统安装</strong><br>在本机VMware Workstation Pro或者服务器虚拟化环境中创建虚拟机，并挂载镜像，安装建议安装英文版，本次实验使用中文版方便对照</p><h2 id="启动镜像"><a href="#启动镜像" class="headerlink" title="启动镜像"></a>启动镜像</h2><p>启动镜像，选择安装CentOS7<br><img src="https://qiufuqi.github.io/img/hexo/20230607144644.png"></p><h2 id="选择语言"><a href="#选择语言" class="headerlink" title="选择语言"></a>选择语言</h2><p>这里选择 Chineses 中文简体语言，然后点击 Continue：（建议English）<br><img src="https://qiufuqi.github.io/img/hexo/20230607144848.png"></p><h2 id="安装信息配置"><a href="#安装信息配置" class="headerlink" title="安装信息配置"></a>安装信息配置</h2><h3 id="本地化"><a href="#本地化" class="headerlink" title="本地化"></a>本地化</h3><h4 id="设置日期和时间"><a href="#设置日期和时间" class="headerlink" title="设置日期和时间"></a>设置日期和时间</h4><p>点击”日期和时间“，这里选择 亚洲 上海<br><img src="https://qiufuqi.github.io/img/hexo/20230607145703.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230607145906.png"></p><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><h4 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h4><p>软件安装默认是最小安装，可根据自己需要选择要安装的组件<br><img src="https://qiufuqi.github.io/img/hexo/20230607150203.png"></p><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><h4 id="安装位置"><a href="#安装位置" class="headerlink" title="安装位置"></a>安装位置</h4><p>系统安装位置是一定要选择<br>方式一：自动分区 安装程序提供默认分区，自动分区的根目录一般默认最多50G<br>自动分区则选中 “自动配置分区” 点击完成即可</p><p>方式二：手动分区 当用户根目录大小有要求，或者创建指定的目录名称时<br>手动分区则选中 “我要配置分区” 点击完成可跳转到手动分区<br><img src="https://qiufuqi.github.io/img/hexo/20230607150813.png"><br>到达手动分区，可以手动一个一个创建新的挂载点，也可以自动创建(自动创建相当于自动分区，但可以调整大小，推荐)<br><img src="https://qiufuqi.github.io/img/hexo/20230607150853.png"><br>接受更改即可<br><img src="https://qiufuqi.github.io/img/hexo/20230607151142.png"></p><h4 id="设置网络和主机名"><a href="#设置网络和主机名" class="headerlink" title="设置网络和主机名"></a>设置网络和主机名</h4><p>先设置网络，IP相关信息可联系网络组。<br>点击”网络和主机名“<br><img src="https://qiufuqi.github.io/img/hexo/20230607145015.png"><br>点击”配置“<br><img src="https://qiufuqi.github.io/img/hexo/20230607145108.png"><br>选择 IPv4设置，方法：手动；Add添加地址并填写具体地址信息<br><img src="https://qiufuqi.github.io/img/hexo/20230607145338.png"></p><p>设置好网络并打开网络连接，编辑主机名，点击完成<br><img src="https://qiufuqi.github.io/img/hexo/20230607145507.png"></p><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p>设置root密码和创建用户，完整完成后重启服务器<br><img src="https://qiufuqi.github.io/img/hexo/20230607151320.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230607151301.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 系统 </category>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian系统安装</title>
      <link href="/debian_install/"/>
      <url>/debian_install/</url>
      
        <content type="html"><![CDATA[<p>Debian系统安装<br>在本机VMware Workstation Pro或者服务器虚拟化环境中创建虚拟机，并挂载镜像，安装建议安装英文版，本次实验使用中文版方便对照</p><h2 id="启动镜像"><a href="#启动镜像" class="headerlink" title="启动镜像"></a>启动镜像</h2><p>启动镜像，选择图形安装界面，回车：<br><img src="https://qiufuqi.github.io/img/hexo/20230606165953.png"></p><h2 id="选择语言"><a href="#选择语言" class="headerlink" title="选择语言"></a>选择语言</h2><p>这里选择 Chineses 中文简体语言，然后点击 Continue：（建议English）<br><img src="https://qiufuqi.github.io/img/hexo/20230606170131.png"></p><h2 id="选择地区"><a href="#选择地区" class="headerlink" title="选择地区"></a>选择地区</h2><p>地区选择中国<br><img src="https://qiufuqi.github.io/img/hexo/20230606170229.png"></p><h2 id="选择键盘"><a href="#选择键盘" class="headerlink" title="选择键盘"></a>选择键盘</h2><p>默认 中文，可以更改American English，然后点击 Continue：<br><img src="https://qiufuqi.github.io/img/hexo/20230606170355.png"></p><h2 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h2><p><img src="https://qiufuqi.github.io/img/hexo/20230606170541.png"><br>选择手动网络设置<br><img src="https://qiufuqi.github.io/img/hexo/20230606170622.png"><br>输入指定的IP/掩码，网关，域名服务器（根据自身情况来）<br><img src="https://qiufuqi.github.io/img/hexo/20230606170715.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230606170731.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230606170801.png"><br>输入主机名，域名<br><img src="https://qiufuqi.github.io/img/hexo/20230606170849.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230606170922.png"></p><h2 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a>设置root密码</h2><p>两次密码需要保持一致，设置完 root 密码，点击 Continue：<br><img src="https://qiufuqi.github.io/img/hexo/20230606171007.png"></p><h2 id="设置普通用户和密码"><a href="#设置普通用户和密码" class="headerlink" title="设置普通用户和密码"></a>设置普通用户和密码</h2><p><img src="https://qiufuqi.github.io/img/hexo/20230606171051.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230606171118.png"></p><h2 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h2><p>磁盘分区，可以使用向导或者手动分区，推荐使用第二种方式<br><img src="https://qiufuqi.github.io/img/hexo/20230606171223.png"></p><h3 id="方式一：使用整个磁盘"><a href="#方式一：使用整个磁盘" class="headerlink" title="方式一：使用整个磁盘"></a>方式一：使用整个磁盘</h3><p>选中该选项，回车，选中该磁盘<br><img src="https://qiufuqi.github.io/img/hexo/20230606171401.png"><br>设置分区，区分不同分区存放位置，本次选择/home放在单独分区<br><img src="https://qiufuqi.github.io/img/hexo/20230606171501.png"></p><p>进行分区确认信息，如果确认，选中<strong>结束分区设定并将修改写入磁盘</strong><br><img src="https://qiufuqi.github.io/img/hexo/20230606171601.png"></p><h3 id="方式二：使用整个磁盘配置LVM"><a href="#方式二：使用整个磁盘配置LVM" class="headerlink" title="方式二：使用整个磁盘配置LVM"></a>方式二：使用整个磁盘配置LVM</h3><p>选中“分区向导”，可重新选择分区方式<br>选中该选项，回车，选中该磁盘<br><img src="https://qiufuqi.github.io/img/hexo/20230606171401.png"><br>设置分区，区分不同分区存放位置，本次选择/home放在单独分区<br><img src="https://qiufuqi.github.io/img/hexo/20230606171501.png"><br>设置LVM需要写入磁盘，并设置LVM最大空间<br><img src="https://qiufuqi.github.io/img/hexo/20230606172229.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230606172416.png"></p><p>进行分区确认信息，如果确认，选中<strong>结束分区设定并将修改写入磁盘</strong><br><img src="https://qiufuqi.github.io/img/hexo/20230606172448.png"></p><p>PS：选中某个分区，回车可进行修改：<strong>用途，挂载点（名称/home）等信息，或者删除重新挂载</strong><br><img src="https://qiufuqi.github.io/img/hexo/20230606172658.png"></p><h3 id="方式三：手动分区"><a href="#方式三：手动分区" class="headerlink" title="方式三：手动分区"></a>方式三：手动分区</h3><p>手动分区可参考以下容量进行，/根目录一般大一点<br><img src="https://qiufuqi.github.io/img/hexo/20230609091434.png"></p><p>以上三种方式都可以设置磁盘分区，最终确定分区方案，确认信息<br><img src="https://qiufuqi.github.io/img/hexo/20230606173759.png"></p><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>保存完磁盘分区即开始安装基本操作系统，等待安装完成<br><img src="https://qiufuqi.github.io/img/hexo/20230606174021.png"></p><h2 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h2><p>选择 no，不搜索其他安装介质，点击 Continue<br><img src="https://qiufuqi.github.io/img/hexo/20230606174424.png"><br>选择 no，不使用网络镜像(慢)<br><img src="https://qiufuqi.github.io/img/hexo/20230606174449.png"><br>选择 no，不参加软件包流行度调查<br><img src="https://qiufuqi.github.io/img/hexo/20230606174722.png"></p><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>可根据需要进行安装<br><img src="https://qiufuqi.github.io/img/hexo/20230606174808.png"></p><h2 id="安装-grub-引导程序"><a href="#安装-grub-引导程序" class="headerlink" title="安装 grub 引导程序"></a>安装 grub 引导程序</h2><p>这里需要选择 Yes，不然进入不了系统<br><img src="https://qiufuqi.github.io/img/hexo/20230606180420.png"><br>选择 grub 引导程序安装位置<br><img src="https://qiufuqi.github.io/img/hexo/20230606180435.png"><br>完成系统安装<br><img src="https://qiufuqi.github.io/img/hexo/20230606180539.png"></p><h2 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h2><h3 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h3><p>debian默认从镜像源更新，由于我们光驱中并没有放置安装光盘，因此需要修改镜像源<br>apt-get update<br>替换镜像源，注释掉原有的镜像源，这里存放了阿里云、腾讯云、网易三个镜像源，只启用阿里云的镜像源，如下修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">root@debian:~<span class="comment"># cat /etc/apt/sources.list</span></span><br><span class="line"><span class="comment"># deb cdrom:[Debian GNU/Linux 11.3.0 _Bullseye_ - Official amd64 DVD Binary-1 20220326-11:23]/ bullseye contrib main</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#deb cdrom:[Debian GNU/Linux 11.3.0 _Bullseye_ - Official amd64 DVD Binary-1 20220326-11:23]/ bullseye contrib main</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#deb http://security.debian.org/debian-security bullseye-security main contrib</span></span><br><span class="line"><span class="comment">#deb-src http://security.debian.org/debian-security bullseye-security main contrib</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># bullseye-updates, to get updates before a point release is made;</span></span><br><span class="line"><span class="comment"># see https://www.debian.org/doc/manuals/debian-reference/ch02.en.html#_updates_and_backports</span></span><br><span class="line"><span class="comment"># A network mirror was not selected during install.  The following entries</span></span><br><span class="line"><span class="comment"># are provided as examples, but you should amend them as appropriate</span></span><br><span class="line"><span class="comment"># for your mirror of choice.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># deb http://deb.debian.org/debian/ bullseye-updates main contrib</span></span><br><span class="line"><span class="comment"># deb-src http://deb.debian.org/debian/ bullseye-updates main contrib</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#Aliyun Apt Source 阿里云镜像源</span></span><br><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye main contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye main contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye-updates main contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye-updates main contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye-backports main contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye-backports main contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye-proposed-updates main contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye-proposed-updates main contrib</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#Tencent Apt Source 腾讯云镜像源</span></span><br><span class="line"><span class="comment">#deb https://mirrors.tencent.com/debian/ bullseye main non-free contrib</span></span><br><span class="line"><span class="comment">#deb-src https://mirrors.tencent.com/debian/ bullseye main non-free contrib</span></span><br><span class="line"><span class="comment">#deb https://mirrors.tencent.com/debian-security/ bullseye-security main</span></span><br><span class="line"><span class="comment">#deb-src https://mirrors.tencent.com/debian-security/ bullseye-security main</span></span><br><span class="line"><span class="comment">#deb https://mirrors.tencent.com/debian/ bullseye-updates main non-free contrib</span></span><br><span class="line"><span class="comment">#deb-src https://mirrors.tencent.com/debian/ bullseye-updates main non-free contrib</span></span><br><span class="line"><span class="comment">#deb https://mirrors.tencent.com/debian/ bullseye-backports main non-free contrib</span></span><br><span class="line"><span class="comment">#deb-src https://mirrors.tencent.com/debian/ bullseye-backports main non-free contrib</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#163 Apt Source 网易镜像源</span></span><br><span class="line"><span class="comment">#deb https://mirrors.163.com/debian/ bullseye main non-free contrib</span></span><br><span class="line"><span class="comment">#deb-src https://mirrors.163.com/debian/ bullseye main non-free contrib</span></span><br><span class="line"><span class="comment">#deb https://mirrors.163.com/debian-security/ bullseye-security main</span></span><br><span class="line"><span class="comment">#deb-src https://mirrors.163.com/debian-security/ bullseye-security main</span></span><br><span class="line"><span class="comment">#deb https://mirrors.163.com/debian/ bullseye-updates main non-free contrib</span></span><br><span class="line"><span class="comment">#deb-src https://mirrors.163.com/debian/ bullseye-updates main non-free contrib</span></span><br><span class="line"><span class="comment">#deb https://mirrors.163.com/debian/ bullseye-backports main non-free contrib</span></span><br><span class="line"><span class="comment">#deb-src https://mirrors.163.com/debian/ bullseye-backports main non-free contrib</span></span><br></pre></td></tr></table></figure><p>重新更新镜像源缓存  update是更新软件列表，upgrade是更新软件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># update是更新软件列表，upgrade是更新软件。</span></span><br><span class="line">root@debian:~<span class="comment"># apt-get update</span></span><br><span class="line">root@debian:~<span class="comment"># apt-get upgrade</span></span><br></pre></td></tr></table></figure><h3 id="root无法登录"><a href="#root无法登录" class="headerlink" title="root无法登录"></a>root无法登录</h3><p>debian10向上版本创建虚拟机时我们设置了root账户密码，然而在登入时却在未列出中无法登入root账户</p><ol><li>普通账号登录后打开终端窗口，输入su - root，切换root身份</li><li>vi  /etc/pam.d/gdm-password，找到”auth  required  pam_succeed_if.so user !=root quiet_success”，修改登录pam文件，在行最前面加#<br>保存退出后就可以使用root账号登录了</li></ol><h3 id="SSH设置root允许登录"><a href="#SSH设置root允许登录" class="headerlink" title="SSH设置root允许登录"></a>SSH设置root允许登录</h3><p>全新安装系统后，默认情况下将禁用Debian Linux上的root登录。当您尝试以root用户身份登录Debian Jessie Linux服务器时，访问将被拒绝。<br>要在Debian Linux系统上为root用户启用SSH登录，您需要首先配置SSH服务器。打开/etc/ssh/sshd_config并更改以下行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装ssh</span></span><br><span class="line">apt-get install -y ssh</span><br></pre></td></tr></table></figure><p>从：<br>PermitRootLogin without-password<br>至：<br>PermitRootLogin yes<br>完成上述更改后，请重新启动SSH服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/init.d/ssh restart</span></span><br><span class="line">[ ok ] Restarting ssh (via systemctl): ssh.service.</span><br></pre></td></tr></table></figure><p>从现在开始，您将能够以root用户身份使用ssh登录</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 系统 </category>
          
          <category> Debian </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 系统 </tag>
            
            <tag> Debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux字符处理</title>
      <link href="/centos_char/"/>
      <url>/centos_char/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux字符处理"><a href="#Linux字符处理" class="headerlink" title="Linux字符处理"></a>Linux字符处理</h1><p>93页</p><h2 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h2><p>| 把上一个命令的输出内容当作下一个命令的输入内容，两个命令之间通过管道符连接即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将输出的内容作为下一个命令more的输入</span></span><br><span class="line">[root@localhost hard]<span class="comment"># ls -l /etc/init.d | more</span></span><br></pre></td></tr></table></figure><h2 id="grep搜索文本"><a href="#grep搜索文本" class="headerlink" title="grep搜索文本"></a>grep搜索文本</h2><p>grep文本搜索工具，显示符合条件的所在行。用法如下：<br>grep [-ivnc] ‘需要匹配的字符’ 文件名<br>-i ：不区分大小写<br>-c ：统计包含匹配的行数<br>-n ：输出行号<br>-v ：反向匹配</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat cat.txt </span></span><br><span class="line">The <span class="built_in">cat</span><span class="string">&#x27;s name is Tom, what&#x27;</span>s the mouse<span class="string">&#x27;s name?</span></span><br><span class="line"><span class="string">The mouse&#x27;</span>s NAME is Jerry</span><br><span class="line">They are good friends</span><br><span class="line">[root@localhost home]<span class="comment"># grep -i &#x27;name&#x27; cat.txt     # 不区分大小写</span></span><br><span class="line">The <span class="built_in">cat</span><span class="string">&#x27;s name is Tom, what&#x27;</span>s the mouse<span class="string">&#x27;s name?</span></span><br><span class="line"><span class="string">The mouse&#x27;</span>s NAME is Jerry</span><br><span class="line">[root@localhost home]<span class="comment"># grep -vi &#x27;name&#x27; cat.txt    # 不区分大小写和反向匹配</span></span><br><span class="line">They are good friends</span><br><span class="line">[root@localhost home]<span class="comment"># cat cat.txt |grep -vi &#x27;name&#x27; # 或者使用管道符</span></span><br><span class="line">They are good friends</span><br></pre></td></tr></table></figure><h2 id="sort排序"><a href="#sort排序" class="headerlink" title="sort排序"></a>sort排序</h2><p>sort对无序的数据进行排序，用法如下：<br>sort [-ntkr] 文件名<br>-n : 采用数字排序<br>-t : 指定分隔符<br>-k : 指定第几列<br>-r : 反向排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat cat.txt </span></span><br><span class="line">b:3</span><br><span class="line">c:2</span><br><span class="line">a:4</span><br><span class="line">e:5</span><br><span class="line">d:1</span><br><span class="line">f:11</span><br><span class="line"><span class="comment"># 指定分隔符：，指定列2，反向排序，数字排序</span></span><br><span class="line">[root@localhost home]<span class="comment"># cat cat.txt | sort -t &quot;:&quot; -k 2 -r -n</span></span><br><span class="line">f:11</span><br><span class="line">e:5</span><br><span class="line">a:4</span><br><span class="line">b:3</span><br><span class="line">c:2</span><br><span class="line">d:1</span><br></pre></td></tr></table></figure><h2 id="uniq删除重复内容"><a href="#uniq删除重复内容" class="headerlink" title="uniq删除重复内容"></a>uniq删除重复内容</h2><p>uniq删除重复的行(重复的行需要连续，所以一般和sort连用)，还可以统计出完全相同行出现的总次数,用法如下：<br>uniq [-ic]<br>-i : 忽略大小写<br>-c : 计算重复行数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat cat.txt </span></span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line">456</span><br><span class="line">[root@localhost home]<span class="comment"># cat cat.txt | uniq   # 重复行不连续，所以不删除</span></span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line">456</span><br><span class="line">[root@localhost home]<span class="comment"># cat cat.txt | sort |uniq -c  # 重复行删除，且计算行数</span></span><br><span class="line">      1 123</span><br><span class="line">      1 456</span><br><span class="line">      2 abc</span><br></pre></td></tr></table></figure><h2 id="cut截取文本"><a href="#cut截取文本" class="headerlink" title="cut截取文本"></a>cut截取文本</h2><p>cut的处理对象时一行文本，从中选取需要的部分，用法如下：<br>cut -f 指定的列 -d ‘分隔符’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以：作为分隔符，打印出第1列，第6-7列</span></span><br><span class="line">[root@localhost home]<span class="comment"># cat /etc/passwd| cut -f 1,6-7 -d &#x27;:&#x27;</span></span><br><span class="line">root:/root:/bin/bash</span><br><span class="line">bin:/bin:/sbin/nologin</span><br><span class="line">daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:/var/spool/lpd:/sbin/nologin</span><br></pre></td></tr></table></figure><p>cut -c 指定列的字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印出每列1-5和7-10个字符的内容</span></span><br><span class="line">[root@localhost home]<span class="comment"># cat /etc/passwd| cut -c1-5,7-10</span></span><br><span class="line">root::0:0</span><br><span class="line">bin:x1:1:</span><br><span class="line">daemo:x:2</span><br><span class="line">adm:x3:4:</span><br><span class="line">lp:x::7:l</span><br><span class="line"><span class="built_in">sync</span>::5:0</span><br></pre></td></tr></table></figure><h2 id="tr文本转换"><a href="#tr文本转换" class="headerlink" title="tr文本转换"></a>tr文本转换</h2><p>tr命令用于文本转换或删除，用法如下：<br>tr ‘转换前’ ‘转换后’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 小写转大写</span></span><br><span class="line">[root@localhost home]<span class="comment"># cat /etc/passwd | tr &#x27;[a-z]&#x27; &#x27;[A-Z]&#x27;</span></span><br><span class="line">ROOT:X:0:0:ROOT:/ROOT:/BIN/BASH</span><br><span class="line">BIN:X:1:1:BIN:/BIN:/SBIN/NOLOGIN</span><br><span class="line">DAEMON:X:2:2:DAEMON:/SBIN:/SBIN/NOLOGIN</span><br></pre></td></tr></table></figure><p>tr -d ‘被删除内容’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat /etc/passwd | tr -d &#x27;:&#x27;</span></span><br><span class="line">rootx00root/root/bin/bash</span><br><span class="line">binx11bin/bin/sbin/nologin</span><br><span class="line">daemonx22daemon/sbin/sbin/nologin</span><br></pre></td></tr></table></figure><h2 id="paste文本合并"><a href="#paste文本合并" class="headerlink" title="paste文本合并"></a>paste文本合并</h2><p>paste将文件按照行进行合并，中间默认使用tab隔开，可用-d指定分隔符<br>paste -d 指定字符  文件1 文件2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat a.txt </span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">[root@localhost home]<span class="comment"># cat b.txt </span></span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">[root@localhost home]<span class="comment"># paste a.txt b.txt </span></span><br><span class="line">1a</span><br><span class="line">2b</span><br><span class="line">3c</span><br><span class="line">[root@localhost home]<span class="comment"># paste -d: a.txt b.txt </span></span><br><span class="line">1:a</span><br><span class="line">2:b</span><br><span class="line">3:c</span><br></pre></td></tr></table></figure><h2 id="split分割大文件"><a href="#split分割大文件" class="headerlink" title="split分割大文件"></a>split分割大文件</h2><p>split支持按照行数分割和按照大小分割这两种模式。二进制文件没有行的概念，只能按照大小进行分割。<br>按照行数：split -l 500 文件名 文件名_<br>按照大小：split -b 50k 文件名 文件名_</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># split -l 1 a.txt a_</span></span><br><span class="line">[root@localhost home]<span class="comment"># ls</span></span><br><span class="line">a_aa  a_ab  a_ac</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
          <category> 字符处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Shell </tag>
            
            <tag> 字符处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件系统</title>
      <link href="/centos_file_system/"/>
      <url>/centos_file_system/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件系统"><a href="#Linux文件系统" class="headerlink" title="Linux文件系统"></a>Linux文件系统</h1><p>79页<br>Linux使用树形文件存储结构，在磁盘上存储文件的时候，使用的是目录加文件的形式。文件系统+虚拟文件系统VFS<br>Linux支持不同的文件系统，包括ext2，ext3，ext4，zfs，iso9660，vfat，msdos，smbfs，nfs等。</p><ul><li>超级块：文件系统的总体信息，是文件系统的核心 （存在多个超级块）</li><li>i节点：存储所有与文件有关的元数据，所有者，权限等属性数据</li><li>数据块：真是存放文件数据的部分</li><li>目录快：文件名和文件在目录中的位置</li></ul><h2 id="磁盘分区、创建文件系统、挂载"><a href="#磁盘分区、创建文件系统、挂载" class="headerlink" title="磁盘分区、创建文件系统、挂载"></a>磁盘分区、创建文件系统、挂载</h2><p>磁盘分区分为两类：主分区和扩展分区</p><h3 id="创建文件系统"><a href="#创建文件系统" class="headerlink" title="创建文件系统"></a>创建文件系统</h3><p>fdisk 创建分区，格式化文件系统<br>mkfs -t ext3 /dev/sdb1 或者 mkfs.ext3 /dev/sdb1 两个命令hi一样的。</p><h3 id="磁盘挂载"><a href="#磁盘挂载" class="headerlink" title="磁盘挂载"></a>磁盘挂载</h3><p>mount 挂载设备后文件系统的分区才能使用<br>mount /dev/sdb1 newdisk   # 挂载到newdisk目录下<br>mount                     # 没有参数的mount会显示所有挂载</p><h3 id="启动自动挂载"><a href="#启动自动挂载" class="headerlink" title="启动自动挂载"></a>启动自动挂载</h3><p>/etc/fstab 开机自动挂载磁盘，将/dev/sdb1挂载到/root/newDisk，文件系统时ext3<br>echo “/dev/sdb1 /root/newDisk ext3 defaults 0 0” &gt;&gt;/etc/fstab</p><h3 id="磁盘检验"><a href="#磁盘检验" class="headerlink" title="磁盘检验"></a>磁盘检验</h3><p>fsck检测磁盘，badblocks检测磁盘物理坏道<br>当磁盘出现逻辑错误时，可以使用fsck来尝试修复（突然掉电）,fsck检查磁盘时，需要磁盘是为挂载的状态，否则可能造成文件损坏<br>当系统的跟文件系统需要fsck时，只能重启，系统会自动检测。<br>用法：fsck -t TYPE /DEVICE/PATH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解除挂载</span></span><br><span class="line">umount /dev/sdb1 </span><br><span class="line">unmount /root/newDisk</span><br><span class="line"></span><br><span class="line">fsck -t ext3 /dev/sdb1</span><br></pre></td></tr></table></figure><p>badblocks主要用来检测磁盘的物理坏道，一般怀疑磁盘有坏道时才使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">badblocks -v /dev/sdb1</span><br></pre></td></tr></table></figure><h2 id="制作逻辑卷"><a href="#制作逻辑卷" class="headerlink" title="制作逻辑卷"></a>制作逻辑卷</h2><h3 id="创建物理卷"><a href="#创建物理卷" class="headerlink" title="创建物理卷"></a>创建物理卷</h3><p>pvcreate将分区创建为PV，可使用pvsacn查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/sdb1</span><br></pre></td></tr></table></figure><p>pvdisplay可更详细的显示PV的使用状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvdisplay</span><br></pre></td></tr></table></figure><h3 id="创建卷组"><a href="#创建卷组" class="headerlink" title="创建卷组"></a>创建卷组</h3><p>有了PV就可以创建卷组了,vgcreate来创建卷组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgcreate VG_NAME DEVICE1 DEVICE2</span><br></pre></td></tr></table></figure><p>vgdisplay显示当前系统所有的VG</p><h3 id="扩容卷组"><a href="#扩容卷组" class="headerlink" title="扩容卷组"></a>扩容卷组</h3><p>使用中需要扩到VG_NAME，可以使用vgextend随时扩大VG的容量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vgextend VG_NAME DEVICE1 DEVICE2</span><br><span class="line"></span><br><span class="line"><span class="comment">#示例 将/dev/sdc3 做出PV，再扩容到VG中</span></span><br><span class="line">pvcreate /dev/sdc3</span><br><span class="line">vgextend vg_ame /dev/sdc3</span><br></pre></td></tr></table></figure><h3 id="创建逻辑卷"><a href="#创建逻辑卷" class="headerlink" title="创建逻辑卷"></a>创建逻辑卷</h3><p>有了卷组，就可以创建逻辑卷：lvcreate</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -L指定逻辑卷大小50G， -n逻辑卷名字， VG_NAME指定从什么卷组中分配空间</span></span><br><span class="line">lvcreate -L SIZE -n LV_NAME VG_NAME</span><br></pre></td></tr></table></figure><p>lvdisplay显示当前系统所有的逻辑卷</p><h3 id="创建文件系统并挂载"><a href="#创建文件系统并挂载" class="headerlink" title="创建文件系统并挂载"></a>创建文件系统并挂载</h3><p>逻辑卷创建好后需要创建文件系统，挂载后爱能使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext3 /dev/卷组名/逻辑卷名</span><br><span class="line">mount /dev/卷组名/逻辑卷名 /root/文件夹</span><br></pre></td></tr></table></figure><h2 id="硬链接和软连接"><a href="#硬链接和软连接" class="headerlink" title="硬链接和软连接"></a>硬链接和软连接</h2><h3 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h3><p>通过索引节点来进行链接。多个文件名指向同一个索引节点是被允许的，这个就是硬链接。<br>硬链接允许一个文件拥有多个有效路径名，删除其中一个连接不影响其他，只有删除最后一个链接时，资源才会被释放。<br>ln 文件 快捷方式</p><ul><li>不允许给目录创建硬链接</li><li>只有同一个文件系统的文件之间才能创建链接。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hard01的inode为70 第一列inode，第三列源文件关联数</span></span><br><span class="line">[root@localhost hard]<span class="comment"># ls -li</span></span><br><span class="line">总用量 0</span><br><span class="line">70 -rw-r--r--. 1 root root 0 5月  30 16:27 hard01</span><br><span class="line">[root@localhost hard]<span class="comment"># ln hard01 hard_likn</span></span><br><span class="line">[root@localhost hard]<span class="comment"># ls -li       # 源文件关联数 2 了</span></span><br><span class="line">总用量 0</span><br><span class="line">70 -rw-r--r--. 2 root root 0 5月  30 16:27 hard01</span><br><span class="line">70 -rw-r--r--. 2 root root 0 5月  30 16:27 hard_likn</span><br></pre></td></tr></table></figure><h3 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h3><p>软链接时一个包含了另一个文件路径名的文件，可以指向任意文件或目录，也可以跨不同的文件系统。<br>删除软链接不会删除其指向的源文件，如果删除了源文件则软链接会出现断链。<br>ln -s 文件 快捷方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hard]<span class="comment"># ln -s hard01 hh</span></span><br><span class="line">[root@localhost hard]<span class="comment"># ls -li   # 拥有自己的inode</span></span><br><span class="line">总用量 0</span><br><span class="line">70 -rw-r--r--. 2 root root 0 5月  30 16:27 hard01</span><br><span class="line">70 -rw-r--r--. 2 root root 0 5月  30 16:27 hard_likn</span><br><span class="line">69 lrwxrwxrwx. 1 root root 6 5月  30 16:42 hh -&gt; hard01</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
          <category> 文件系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Shell </tag>
            
            <tag> 文件系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux进程管理</title>
      <link href="/centos_jincheng/"/>
      <url>/centos_jincheng/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux进程管理"><a href="#Linux进程管理" class="headerlink" title="Linux进程管理"></a>Linux进程管理</h1><p>108页</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
          <category> 进程管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Shell </tag>
            
            <tag> 进程管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux用户管理</title>
      <link href="/centos_user/"/>
      <url>/centos_user/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux用户管理"><a href="#Linux用户管理" class="headerlink" title="Linux用户管理"></a>Linux用户管理</h1><p>Linux用户按照使用方式分为三种：一是跟用户，二是系统用户，三是普通用户</p><h2 id="新增删除用户"><a href="#新增删除用户" class="headerlink" title="新增删除用户"></a>新增删除用户</h2><h3 id="新增用户"><a href="#新增用户" class="headerlink" title="新增用户"></a>新增用户</h3><p>useradd用于添加新的用户，通常情况下在该命令后跟上新增的用户名，比如useradd john即可。<br>后台创建步骤：</p><ul><li>一般会在/etc/passwd和/etc/shadow末尾追加一条记录，同时分配给该用户一个UID</li><li>为该用户创建家目录，创建路径在/home目录中</li><li>复制/etc/skel下所有文件至家目录中</li><li>创建一个与该用户名一样的用户组，示例中创建john的用户时也会同时创建john的用户组</li></ul><p>创建用户其他参数: -u -g -d</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># useradd -u 555 user1          #系统指定分配一个UID，该UID不能与其他用户冲突</span></span><br><span class="line">[root@localhost ~]<span class="comment"># useradd -g user1 user2        #创建用户user2时 指定用户所属group是user1</span></span><br><span class="line">[root@localhost ~]<span class="comment"># useradd -d /home/mydir user3  # 创建user3时指定家目录/home/mydir</span></span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>passwd用于修改用户密码，在不设置密码的情况下，/etc/shadow中该用户的记录第二列显示为两个感叹号!!<br>root用户passwd可以修改密码，普通用户只能修改自己用户密码，输入两次相同的密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># passwd john </span></span><br></pre></td></tr></table></figure><h3 id="修改用户"><a href="#修改用户" class="headerlink" title="修改用户"></a>修改用户</h3><p>usermod用于对用户进行操作，本质上就是对/etc/passwd和/etc/shadow文件做一些修改。<br>-d 指定目录<br>-m 指定用户<br>-L 冻结用户<br>-U 解冻用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># john的家目录修改为john_new</span></span><br><span class="line">[root@localhost ~]<span class="comment"># usermod -d /home/john_new -m john</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /etc/passwd|grep john</span></span><br><span class="line">john:x:1000:1000::/home/john_new:/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 冻结用户 &amp;&amp; 解冻用户</span></span><br><span class="line">[root@localhost ~]<span class="comment"># usermod -L john</span></span><br><span class="line">[root@localhost ~]<span class="comment"># usermod -U john</span></span><br></pre></td></tr></table></figure><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p>userdel用于删除某个用户，删除用户时并不会删除原来的家目录，如果要删除家目录添加参数-r</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># userdel john        # 保留家目录</span></span><br><span class="line">[root@localhost ~]<span class="comment"># userdel -r john     # 删除家目录</span></span><br></pre></td></tr></table></figure><h2 id="新增和删除用户组"><a href="#新增和删除用户组" class="headerlink" title="新增和删除用户组"></a>新增和删除用户组</h2><h3 id="增加用户组"><a href="#增加用户组" class="headerlink" title="增加用户组"></a>增加用户组</h3><p>groupadd用于创建用户组，后接用户组名作为其参数，记录在/etc/group</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建用户组，用户组GID为1000</span></span><br><span class="line">[root@localhost ~]<span class="comment"># groupadd john</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /etc/group|grep john</span></span><br><span class="line">john:x:1000:</span><br></pre></td></tr></table></figure><h3 id="删除用户组"><a href="#删除用户组" class="headerlink" title="删除用户组"></a>删除用户组</h3><p>groupdel用户删除用户组，后接用户组名作为其参数，该组下没有用户才可以删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># groupdel john</span></span><br></pre></td></tr></table></figure><h2 id="检查用户信息"><a href="#检查用户信息" class="headerlink" title="检查用户信息"></a>检查用户信息</h2><h3 id="查看用户"><a href="#查看用户" class="headerlink" title="查看用户"></a>查看用户</h3><p>users,who,w 查看当前系统有哪些用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># users</span></span><br><span class="line">root root</span><br><span class="line"></span><br><span class="line"><span class="comment"># who 用户名 终端 登录时间</span></span><br><span class="line">[root@localhost ~]<span class="comment"># who               </span></span><br><span class="line">root     tty1         2023-05-24 16:31</span><br><span class="line">root     pts/0        2023-05-26 10:55 (10.12.172.12)</span><br><span class="line"></span><br><span class="line"><span class="comment"># w 第一行  当前时间  系统运行时间  已登录用户数量  系统负载</span></span><br><span class="line"><span class="comment"># w 第二行  用户名  终端  来源  登录时间  闲置时间  运行进程消耗CPU时间总量 闲置进程消耗CPU时间总亮 当前运行进程</span></span><br><span class="line">[root@localhost ~]<span class="comment"># w</span></span><br><span class="line"> 17:03:35 up 2 days, 32 min,  2 <span class="built_in">users</span>,  load average: 0.00, 0.01, 0.05</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     tty1                      三16   23:44m  0.02s  0.02s -bash</span><br><span class="line">root     pts/0    10.12.172.12     10:55    7.00s  0.31s  0.01s w</span><br></pre></td></tr></table></figure><h3 id="调查用户"><a href="#调查用户" class="headerlink" title="调查用户"></a>调查用户</h3><p>finger 用户：显示某个用户详细信息，默认显示系统登录用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># finger</span></span><br><span class="line">Login     Name       Tty      Idle  Login Time   Office     Office Phone   Host</span><br><span class="line">root      root       tty1    23:52  May 24 16:31           </span><br><span class="line">root      root       pts/0          May 26 10:55                           (10.12.172.12)</span><br><span class="line">[root@localhost ~]<span class="comment"># finger ntp</span></span><br><span class="line">Login: ntp            Name: </span><br><span class="line">Directory: /etc/ntp                 Shell: /sbin/nologin</span><br><span class="line">Never logged <span class="keyword">in</span>.</span><br><span class="line">No mail.</span><br><span class="line">No Plan.</span><br></pre></td></tr></table></figure><h2 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h2><p>linux用户分为根用户，普通用户，系统用户 3种，其中根用户和普通用户是可以登录到系统中。</p><h3 id="切换其他用户"><a href="#切换其他用户" class="headerlink" title="切换其他用户"></a>切换其他用户</h3><p>su 用户：切换用户的意思，默认是切换到root用户下（需要输入root密码），exit可回到之前用户<br>su - 切换到root时还能应用到root的用户环境，到/root目录下</p><h3 id="其他身份sudo"><a href="#其他身份sudo" class="headerlink" title="其他身份sudo"></a>其他身份sudo</h3><p>sudo + 命令：使用root的身份执行命令。系统会检查/etc/sudoers，判断该用户是否有执行sudo的权限，有的话输入自己用户密码即可执行。<br>编辑/etc/sudoers文件，可使用vi/vim，或者visudo（保存退出时会自动检查语法）<br>修改后john就可以使用sudo操作命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># visudo</span></span><br><span class="line">·········</span><br><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">john    ALL=(ALL)       ALL             <span class="comment"># john用户（第一列） 任何地方登录（第二列） 执行任何人（第三列） 任何命令（第四列）</span></span><br><span class="line">%john    ALL=(ALL)       ALL            <span class="comment"># john用户组（第一列） 任何地方登录（第二列） 执行任何人（第三列） 任何命令（第四列）</span></span><br><span class="line">%john    ALL=(ALL)       NOPASSWD:ALL   <span class="comment"># 不需要输入密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后一列 ALL非常危险 可指定命令 sudo /sbin/reboot</span></span><br><span class="line">john    ALL=(ALL)       NOPASSWD:/sbin/reboot, /usr/bin/reboot  <span class="comment"># 用户可冲洗或者关闭服务器</span></span><br><span class="line">·········</span><br></pre></td></tr></table></figure><h2 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h2><p>某些指定时间执行指定任务</p><h3 id="单一时刻任务"><a href="#单一时刻任务" class="headerlink" title="单一时刻任务"></a>单一时刻任务</h3><p>at 在指定的时间执行任务，默认所有用户都可以使用at来调度自己的任务，禁用某个用户则将用户名添加到/etc/at.deny中</p><h3 id="周期性任务"><a href="#周期性任务" class="headerlink" title="周期性任务"></a>周期性任务</h3><p>cron</p><p>57页</p><ul><li>6 * * * find /root/home/zhang/* ctime 1 -exec rm -rf {} ;</li></ul><p>表示每天早上六点删除/root/home/zhang目录下一天前创建的所有文件，不删除文件夹zhang，如果这个文件夹也要删除的话用* 6 * * * find /root/home/zhang ctime 1 -exec rm -rf {} ;</p><ul><li>6 * * *</li></ul><p>第一个*号表示时间中的 分钟  取值范围：0-59</p><p>第二个*号表示时间中的 小时  取值范围：0-23</p><p>第三个*号表示一个月中的第几天，取值范围：1-31</p><p>第四个*号表示一年中的第几个月，取值范围：1-12</p><p>第五个*号表示一个星期中的第几天，以星期天开始依次的取值为0～7，0、7都表示星期天</p><p>ctime 表示创建时间，1 表示一天前，其实Linux中不存在文件创建时间，只有访问时间(atime)、修改时间(mtime)、状态改动时间(ctime)</p><p>可以通过命令 stat + 文件路径  查看时间</p><p>也可通过命令 touch -t 201212212359 aa (建立文件aa,时间是2012年12月21日23时59分)修改时间</p><p>若是删除目录下的指定文件可以用：find 对应目录 -mtime +天数 -name “文件名” -exec rm -rf {} ;</p><p>写好了命令，下面就是启动定时任务了。</p><h2 id="统计工具"><a href="#统计工具" class="headerlink" title="统计工具"></a>统计工具</h2><p>wc 命令用于计算字数。<br>参数：<br>-c, –bytes：统计字节数。<br>-m, –chars：统计字符数。<br>-w, –words：统计字数。<br>-l, –lines：统计行数。<br>-L, –max-line-length：统计最长行的长度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost shell]<span class="comment"># wc -l init.sh </span></span><br><span class="line">23 init.sh</span><br></pre></td></tr></table></figure><h2 id="amp"><a href="#amp" class="headerlink" title="&amp;"></a>&amp;</h2><p>加在一个命令的最后，可以把这个命令放到后台执行</p><h2 id="文本操作"><a href="#文本操作" class="headerlink" title="文本操作"></a>文本操作</h2><p>Linux 文本操作的三大神器：grep、sed、awk，各自的最佳应用场景：</p><ul><li>grep：使用正则表达式搜索文本，并把匹配的行打印出来，是强大的文本搜索工具；</li><li>sed：用于编辑匹配到的文本，是一种流编辑器；</li><li>awk：能够对文本进行复杂的格式处理，是一种处理文本的语言<a href="/centos_awk">具体介绍</a></li></ul><p>基本命令格式：awk ‘{pattern + action}’  {filenames}<br>pattern表示在数据中要查找的内容，action表示要执行的一系列命令。<br>awk 通过指定分隔符，将一行分为多个字段，依次用 $1、$2 … $n 表示第一个字段、第二个字段… 第n个字段。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Linux </category>
          
          <category> 用户管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Shell </tag>
            
            <tag> 用户管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下fail2ban</title>
      <link href="/centos_fail2ban/"/>
      <url>/centos_fail2ban/</url>
      
        <content type="html"><![CDATA[<h1 id="fail2ban简介"><a href="#fail2ban简介" class="headerlink" title="fail2ban简介"></a>fail2ban简介</h1><p>Fail2Ban 是一款入侵防御软件，可以保护服务器免受暴力攻击。 它是用 Python 编程语言编写的。<br>Fail2Ban 基于auth 日志文件工作，默认情况下它会扫描所有 auth 日志文件，如 /var/log/auth.log、/var/log/apache/access.log 等，并禁止带有恶意标志的IP，比如密码失败太多，寻找漏洞等等标志。<br>通常，Fail2Ban 用于更新防火墙规则，用于在指定的时间内拒绝 IP 地址。 它也会发送邮件通知。<br>Fail2Ban 为各种服务提供了许多过滤器，如 ssh、apache、nginx、squid、named、mysql、nagios 等。<br>Fail2Ban 能够降低错误认证尝试的速度，但是它不能消除弱认证带来的风险。</p><h1 id="安装fail2ban"><a href="#安装fail2ban" class="headerlink" title="安装fail2ban"></a>安装fail2ban</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum -y install epel-release</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum -y update</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum -y install fail2ban-firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 业务参考</span></span><br><span class="line"> <span class="built_in">cat</span> /etc/fail2ban/jail.conf               <span class="comment">## 根据指引，修改配置应在 jail.d/ 下新建文件进行</span></span><br><span class="line"> vim /etc/fail2ban/jail.d/sshd.local                 <span class="comment">## 修改配置</span></span><br><span class="line"> <span class="built_in">cd</span> /etc/fail2ban/jail.d</span><br><span class="line"> vim /etc/fail2ban/action.d/mail-whois.conf         <span class="comment">## 定义 action</span></span><br><span class="line"> fail2ban-client reload                              <span class="comment">## 让配置生效 </span></span><br></pre></td></tr></table></figure><p>/etc/fail2ban/filter.d/ — 监狱规则存放处<br>/etc/fail2ban/jail.d/ — 启用规则</p><h2 id="启用邮件提醒功能"><a href="#启用邮件提醒功能" class="headerlink" title="启用邮件提醒功能"></a>启用邮件提醒功能</h2><p>安装部署对应邮件发送软件—如不需要可不做</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum -y install sendmail mailx</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl status sendmail # 查看sendmail运行状态</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl start sendmail # 启动</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl enable sendmail # 设置开机自启</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl is-enabled sendmail # 查看是否设置开机自启</span></span><br></pre></td></tr></table></figure><p>邮件提醒配置，126和163邮箱都可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/mail.rc</span></span><br><span class="line"><span class="built_in">set</span> from=XXXXX@126.com</span><br><span class="line"><span class="built_in">set</span> smtp=smtps://smtp.126.com:465</span><br><span class="line"><span class="built_in">set</span> smtp-auth-user=XXXXX@126.com</span><br><span class="line"><span class="built_in">set</span> smtp-auth-password=XXXXXXXXXXX</span><br><span class="line"><span class="built_in">set</span> smtp-auth=login</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> ssl-verify=ignore                 <span class="comment">##忽略证书警告</span></span><br><span class="line"><span class="built_in">set</span> nss-config-dir=/etc/pki/nssdb     <span class="comment">## 证书所在目录</span></span><br></pre></td></tr></table></figure><p>发送测试邮件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># echo &quot;content&quot; | mail -s &quot;title&quot; xxxxx@qq.com</span></span><br></pre></td></tr></table></figure><h1 id="配置fail2ban-sshd"><a href="#配置fail2ban-sshd" class="headerlink" title="配置fail2ban-sshd"></a>配置fail2ban-sshd</h1><p>安装后，最好将默认的配置文件jail.conf另外拷贝一份。<br>借助 Fail2Ban 可以筛选出发送这些请求的 IP 地址来进行拦截屏蔽处理</p><h2 id="编辑sshd规则"><a href="#编辑sshd规则" class="headerlink" title="编辑sshd规则"></a>编辑sshd规则</h2><p>最佳做法是使用* .local文件覆盖系统默认值，而不是直接修改jail.config</p><p>如果同时存在/etc/fail2ban/jail.local和/etc/fail2ban/jail.d/sshd.local文件，<strong>关于对ssh的约束，后者的优先级是高于前者的</strong></p><p>在最后10分钟内尝试5次后，IP将被阻止10分钟</p><ul><li>ignoreip：永远不会被禁止的IP地址白名单。他们拥有永久的“摆脱监狱”的特权。本地主机的IP地址127.0.0.1是在列表中默认情况下，IPv6的本机地址是::1。如果确认永远不应禁止的其它IP地址，请将它们添加到此列表中，并在每个IP地址之间留一个空格</li><li>bantime：禁止IP地址的时长，m代表分钟、h表示时。如果配置的数值不带m或h，则将其视为秒。值 -1将永久禁止IP地址。要非常小心，不要将自己的计算机给关了起来，这是非常有可能发生的低级错误。</li><li>findtime： 尝试失败的连接次数过多会导致IP地址进“监狱”的时间。</li><li>maxretry: 尝试失败次数过多”的数值。</li><li>backend :指定用于获取文件修改的后端。 如果您使用的是 CentOS 或 Fedora，则需要将后端设置为 systemd。 对于其他操作系统，默认值 auto 就足够了。</li></ul><p>要设置区别于全局配置文件jail.local的特定配置，必须在/etc/fail2ban/jail.d目录下创建一个相应的“ jail”文件。 对于SSHD，请创建一个名为sshd.local的新文件，然后在其中输入服务过滤说明, 下面就是配置ssh加固的配置文件,该配置的意思是在最后1分钟内尝试5次后，IP将被阻止一年：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定位到285行左右，添加一行 enabled = true</span></span><br><span class="line">[root@localhost fail2ban]<span class="comment"># cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成之后修改sshd策略</span></span><br><span class="line">[root@localhost fail2ban]<span class="comment"># vi /etc/fail2ban/jail.d/sshd.local</span></span><br><span class="line"></span><br><span class="line">[sshd]</span><br><span class="line">enabled = <span class="literal">true</span>    <span class="comment"># 极端情况下，此行即可</span></span><br><span class="line">port = ssh        <span class="comment"># 当我们更改ssh的端口时使用此选项，sshd的默认端口为22，</span></span><br><span class="line"><span class="comment">#action = firewallcmd-ipset</span></span><br><span class="line">logpath = %(sshd_log)s</span><br><span class="line">maxretry = 5      <span class="comment"># 最大尝试次数</span></span><br><span class="line">bantime = 1800  <span class="comment">#封禁时间，单位s。-1为永久封禁</span></span><br></pre></td></tr></table></figure><h2 id="重启fail2ban"><a href="#重启fail2ban" class="headerlink" title="重启fail2ban"></a>重启fail2ban</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl restart fail2ban</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl status fail2ban</span></span><br><span class="line">[root@localhost ~]<span class="comment"># fail2ban-client status </span></span><br><span class="line">Status</span><br><span class="line">|- Number of jail:1</span><br><span class="line">`- Jail list:sshd</span><br></pre></td></tr></table></figure><h2 id="测试fail2ban-sshd"><a href="#测试fail2ban-sshd" class="headerlink" title="测试fail2ban-sshd"></a>测试fail2ban-sshd</h2><p>尝试错误登录服务器5次，发现再也登录不上了，服务器返回连接超时</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fail2ban-client status sshd</span></span><br><span class="line">Status <span class="keyword">for</span> the jail: sshd</span><br><span class="line">|- Filter</span><br><span class="line">|  |- Currently failed:0</span><br><span class="line">|  |- Total failed:5</span><br><span class="line">|  `- Journal matches:_SYSTEMD_UNIT=sshd.service + _COMM=sshd</span><br><span class="line">`- Actions</span><br><span class="line">   |- Currently banned:0</span><br><span class="line">   |- Total banned:1</span><br><span class="line">   `- Banned IP list:10.12.172.12</span><br></pre></td></tr></table></figure><h2 id="释放被封禁的IP"><a href="#释放被封禁的IP" class="headerlink" title="释放被封禁的IP"></a>释放被封禁的IP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fail2ban-client set sshd unbanip 0.12.172.12</span></span><br></pre></td></tr></table></figure><h1 id="配置fail2ban-nginx"><a href="#配置fail2ban-nginx" class="headerlink" title="配置fail2ban-nginx"></a>配置fail2ban-nginx</h1><h2 id="编辑nginx访问规则"><a href="#编辑nginx访问规则" class="headerlink" title="编辑nginx访问规则"></a>编辑nginx访问规则</h2><p>打开编辑 nginx-not-found.conf 监狱规则文件，注意一定要在/etc/fail2ban/filter.d/目录内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost fail2ban]<span class="comment"># vi /etc/fail2ban/filter.d/nginx-not-found.conf</span></span><br><span class="line">[Definition]</span><br><span class="line">failregex = ^&lt;HOST&gt;.*<span class="string">&quot;(GET|POST).*&quot;</span> (404|444|403|400) .*$</span><br><span class="line">ignoreregex =</span><br></pre></td></tr></table></figure><p>打开编辑 jail.local 启用这个监狱规则。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost fail2ban]<span class="comment"># vi /etc/fail2ban/jail.d/nginxno404.local</span></span><br><span class="line">[nginxno404]</span><br><span class="line"><span class="comment">#处理 nginx 下的恶意 404 结果扫描</span></span><br><span class="line">enabled = <span class="literal">true</span></span><br><span class="line">port = http,https</span><br><span class="line">filter = nginx-not-found  <span class="comment"># 使用规则 --- filter.d文件夹下</span></span><br><span class="line">action = iptables[name=nginxno404, port=http, protocol=tcp]</span><br><span class="line"><span class="comment">#Fail2Ban 要监控的站点日志文件，大家可以根据自己站点来灵活调整。</span></span><br><span class="line">logpath  = /usr/local/nginx/logs/access.log</span><br><span class="line">           /usr/local/nginx/logs/error.log</span><br><span class="line">bantime = 3600 <span class="comment">#默认是屏蔽 IP 地址 10 分钟</span></span><br><span class="line"><span class="comment">#下面这两个是说 60 秒内 5 次 404 失败请求就开始屏蔽这个 IP 地址</span></span><br><span class="line">findtime = 60</span><br><span class="line">maxretry = 5</span><br></pre></td></tr></table></figure><p><strong>重启fail2ban</strong><br>我们换需要验证一下 nginx-not-found.conf 这个监狱规则是否能够生效也就是真正的发现日志文件中返回码是：404、444、403、400 中任意一个的记录，我们可以使用 fail2ban-regex 命令来验证这个规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl restart fail2ban</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl status fail2ban</span></span><br><span class="line">[root@localhost ~]<span class="comment"># fail2ban-regex /usr/local/nginx/logs/error.log /etc/fail2ban/filter.d/nginx-not-found.conf</span></span><br><span class="line">Running tests</span><br><span class="line">=============</span><br><span class="line">Use   failregex filter file : nginx-not-found, basedir: /etc/fail2ban</span><br><span class="line">Use         <span class="built_in">log</span> file : /usr/local/nginx/logs/error.log</span><br><span class="line">Use         encoding : UTF-8</span><br><span class="line">Results</span><br><span class="line">=======</span><br><span class="line">Failregex: 0 total</span><br><span class="line">Ignoreregex: 0 total</span><br><span class="line">Date template hits:</span><br><span class="line">|- [<span class="comment"># of hits] date format</span></span><br><span class="line">|  [32] &#123;^LN-BEG&#125;ExYear(?P&lt;_sep&gt;[-/.])Month(?P=_sep)Day(?:T|  ?)24hour:Minute:Second(?:[.,]Microseconds)?(?:\s*Zone offset)?</span><br><span class="line">`-</span><br><span class="line">Lines: 32 lines, 0 ignored, 0 matched, 32 missed</span><br><span class="line">[processed <span class="keyword">in</span> 0.01 sec]</span><br><span class="line">Missed line(s): too many to <span class="built_in">print</span>.  Use --print-all-missed to <span class="built_in">print</span> all 32 lines</span><br></pre></td></tr></table></figure><h2 id="测试fail2ban-nginx"><a href="#测试fail2ban-nginx" class="headerlink" title="测试fail2ban-nginx"></a>测试fail2ban-nginx</h2><p>快速访问不存在的文件，会封禁IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost fail2ban]<span class="comment"># fail2ban-client status nginxno404</span></span><br><span class="line">Status <span class="keyword">for</span> the jail: nginxno404</span><br><span class="line">|- Filter</span><br><span class="line">|  |- Currently failed:0</span><br><span class="line">|  |- Total failed:0</span><br><span class="line">|  `- File list:/usr/local/nginx/logs/error.log /usr/local/nginx/logs/access.log</span><br><span class="line">`- Actions</span><br><span class="line">   |- Currently banned:0</span><br><span class="line">   |- Total banned:0</span><br><span class="line">   `- Banned IP list: 10.12.172.12</span><br></pre></td></tr></table></figure><h2 id="释放被封禁的IP-1"><a href="#释放被封禁的IP-1" class="headerlink" title="释放被封禁的IP"></a>释放被封禁的IP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fail2ban-client set nginxno404  unbanip 10.12.172.12</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#手动封禁某个ip</span></span><br><span class="line">[root@localhost ~]<span class="comment"># fail2ban-client set nginxno404 banip 10.12.172.12</span></span><br></pre></td></tr></table></figure><h1 id="忽略某个iP"><a href="#忽略某个iP" class="headerlink" title="忽略某个iP"></a>忽略某个iP</h1><p>set <JAIL> addignoreip <IP>    设置某个监控（监狱）可以忽略的ip<br>set <JAIL> delignoreip <IP>    删除某个监控（监狱）可以忽略的ip</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> fail2ban </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> fail2ban </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS开机优化脚本</title>
      <link href="/centos_init/"/>
      <url>/centos_init/</url>
      
        <content type="html"><![CDATA[<p><strong>CentOS 7 开机优化脚本</strong><br><a href="https://baijiahao.baidu.com/s?id=1736051962230868964&wfr=spider&for=pc">配置参考</a><br>CentOS 7系统优化脚本<br>主要实现系统的各类优化，比如常用的修改字符集、关闭selinux、关闭防火墙、安装常用工具和加快ssh登录等功能。<br>将其保存为init.sh，然后赋予执行权限后执行即可。<br>chmod +x init.sh &amp;&amp; ./init.sh<br>源码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"><span class="built_in">export</span> LANG=zh_CN.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment">#一级菜单</span></span><br><span class="line"><span class="function"><span class="title">menu1</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">        clear</span><br><span class="line">        <span class="built_in">cat</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">----------------------------------------</span></span><br><span class="line"><span class="string">|****   欢迎使用cetnos7.6优化脚本   ****|</span></span><br><span class="line"><span class="string">----------------------------------------</span></span><br><span class="line"><span class="string">1. 一键优化</span></span><br><span class="line"><span class="string">2. 自定义优化</span></span><br><span class="line"><span class="string">3. 退出</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;please enter your choice[1-3]:&quot;</span> num1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#二级菜单</span></span><br><span class="line"><span class="function"><span class="title">menu2</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> clear</span><br><span class="line"> <span class="built_in">cat</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">----------------------------------------</span></span><br><span class="line"><span class="string">|****Please Enter Your Choice:[0-13]****|</span></span><br><span class="line"><span class="string">----------------------------------------</span></span><br><span class="line"><span class="string">1. 修改字符集</span></span><br><span class="line"><span class="string">2. 关闭selinux</span></span><br><span class="line"><span class="string">3. 关闭firewalld</span></span><br><span class="line"><span class="string">4. 精简开机启动</span></span><br><span class="line"><span class="string">5. 修改文件描述符</span></span><br><span class="line"><span class="string">6. 安装常用工具及修改yum源</span></span><br><span class="line"><span class="string">7. 优化系统内核</span></span><br><span class="line"><span class="string">8. 加快ssh登录速度</span></span><br><span class="line"><span class="string">9. 禁用ctrl+alt+del重启</span></span><br><span class="line"><span class="string">10.设置时间同步</span></span><br><span class="line"><span class="string">11.history优化</span></span><br><span class="line"><span class="string">12.返回上级菜单</span></span><br><span class="line"><span class="string">13.退出</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> <span class="built_in">read</span> -p <span class="string">&quot;please enter your choice[1-13]:&quot;</span> num2</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.修改字符集</span></span><br><span class="line"><span class="function"><span class="title">localeset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;========================修改字符集=========================&quot;</span></span><br><span class="line"> <span class="built_in">cat</span> &gt; /etc/locale.conf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">LANG=&quot;zh_CN.UTF-8&quot;</span></span><br><span class="line"><span class="string">#LANG=&quot;en_US.UTF-8&quot;</span></span><br><span class="line"><span class="string">SYSFONT=&quot;latarcyrheb-sun16&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> <span class="built_in">source</span> /etc/locale.conf</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;#cat /etc/locale.conf&quot;</span></span><br><span class="line"> <span class="built_in">cat</span> /etc/locale.conf</span><br><span class="line"> action <span class="string">&quot;完成修改字符集&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.关闭selinux</span></span><br><span class="line"><span class="function"><span class="title">selinuxset</span></span>() </span><br><span class="line">&#123;</span><br><span class="line"> selinux_status=`grep <span class="string">&quot;SELINUX=disabled&quot;</span> /etc/sysconfig/selinux | <span class="built_in">wc</span> -l`</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;========================禁用SELINUX========================&quot;</span></span><br><span class="line"> <span class="keyword">if</span> [ <span class="variable">$selinux_status</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">  sed  -i <span class="string">&quot;s#SELINUX=enforcing#SELINUX=disabled#g&quot;</span> /etc/sysconfig/selinux</span><br><span class="line">  setenforce 0</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;#grep SELINUX=disabled /etc/sysconfig/selinux&#x27;</span></span><br><span class="line">  grep SELINUX=disabled /etc/sysconfig/selinux</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;#getenforce&#x27;</span></span><br><span class="line">  getenforce</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;SELINUX已处于关闭状态&#x27;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;#grep SELINUX=disabled /etc/sysconfig/selinux&#x27;</span></span><br><span class="line">                grep SELINUX=disabled /etc/sysconfig/selinux</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&#x27;#getenforce&#x27;</span></span><br><span class="line">                getenforce</span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line">  action <span class="string">&quot;完成禁用SELINUX&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.关闭firewalld</span></span><br><span class="line"><span class="function"><span class="title">firewalldset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;=======================禁用firewalld========================&quot;</span></span><br><span class="line"> systemctl stop firewalld.service &amp;&gt; /dev/null</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&#x27;#firewall-cmd  --state&#x27;</span></span><br><span class="line"> firewall-cmd  --state</span><br><span class="line"> systemctl <span class="built_in">disable</span> firewalld.service &amp;&gt; /dev/null</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&#x27;#systemctl list-unit-files | grep firewalld&#x27;</span></span><br><span class="line"> systemctl list-unit-files | grep firewalld</span><br><span class="line"> action <span class="string">&quot;完成禁用firewalld，生产环境下建议启用！&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.精简开机启动</span></span><br><span class="line"><span class="function"><span class="title">chkset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;=======================精简开机启动========================&quot;</span></span><br><span class="line"> systemctl <span class="built_in">disable</span> auditd.service</span><br><span class="line"> systemctl <span class="built_in">disable</span> postfix.service</span><br><span class="line"> systemctl <span class="built_in">disable</span> dbus-org.freedesktop.NetworkManager.service</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&#x27;#systemctl list-unit-files | grep -E &quot;auditd|postfix|dbus-org\.freedesktop\.NetworkManager&quot;&#x27;</span></span><br><span class="line"> systemctl list-unit-files | grep -E <span class="string">&quot;auditd|postfix|dbus-org\.freedesktop\.NetworkManager&quot;</span></span><br><span class="line"> action <span class="string">&quot;完成精简开机启动&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.修改文件描述符</span></span><br><span class="line"><span class="function"><span class="title">limitset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;======================修改文件描述符=======================&quot;</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&#x27;* - nofile 65535&#x27;</span>&gt;/etc/security/limits.conf</span><br><span class="line"> <span class="built_in">ulimit</span> -SHn 65535</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;#cat /etc/security/limits.conf&quot;</span></span><br><span class="line"> <span class="built_in">cat</span> /etc/security/limits.conf</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;#ulimit -Sn ; ulimit -Hn&quot;</span></span><br><span class="line"> <span class="built_in">ulimit</span> -Sn ; <span class="built_in">ulimit</span> -Hn</span><br><span class="line"> action <span class="string">&quot;完成修改文件描述符&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.安装常用工具及修改yum源</span></span><br><span class="line"><span class="function"><span class="title">yumset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;=================安装常用工具及修改yum源===================&quot;</span></span><br><span class="line"> yum install wget -y &amp;&gt; /dev/null</span><br><span class="line"> <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line">  \<span class="built_in">cp</span> CentOS-Base.repo CentOS-Base.repo.$(<span class="built_in">date</span> +%F)</span><br><span class="line">  ping -c 1 mirrors.aliyun.com &amp;&gt; /dev/null</span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">   wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo &amp;&gt; /dev/null</span><br><span class="line">   yum clean all &amp;&gt; /dev/null</span><br><span class="line">   yum makecache &amp;&gt; /dev/null</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;无法连接网络&quot;</span></span><br><span class="line">       <span class="built_in">exit</span> $?</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;wget安装失败&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> $?</span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"> yum -y install ntpdate lsof net-tools telnet vim lrzsz tree nmap nc sysstat &amp;&gt; /dev/null</span><br><span class="line"> action <span class="string">&quot;完成安装常用工具及修改yum源&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#7. 优化系统内核</span></span><br><span class="line"><span class="function"><span class="title">kernelset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;======================优化系统内核=========================&quot;</span></span><br><span class="line"> chk_nf=`<span class="built_in">cat</span> /etc/sysctl.conf | grep conntrack |<span class="built_in">wc</span> -l`</span><br><span class="line"> <span class="keyword">if</span> [ <span class="variable">$chk_nf</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">cat</span> &gt;&gt;/etc/sysctl.conf&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">net.ipv4.tcp_fin_timeout = 2</span></span><br><span class="line"><span class="string">net.ipv4.tcp_tw_reuse = 1</span></span><br><span class="line"><span class="string">net.ipv4.tcp_tw_recycle = 1</span></span><br><span class="line"><span class="string">net.ipv4.tcp_syncookies = 1</span></span><br><span class="line"><span class="string">net.ipv4.tcp_keepalive_time = 600</span></span><br><span class="line"><span class="string">net.ipv4.ip_local_port_range = 4000 65000</span></span><br><span class="line"><span class="string">net.ipv4.tcp_max_syn_backlog = 16384</span></span><br><span class="line"><span class="string">net.ipv4.tcp_max_tw_buckets = 36000</span></span><br><span class="line"><span class="string">net.ipv4.route.gc_timeout = 100</span></span><br><span class="line"><span class="string">net.ipv4.tcp_syn_retries = 1</span></span><br><span class="line"><span class="string">net.ipv4.tcp_synack_retries = 0</span></span><br><span class="line"><span class="string">net.core.somaxconn = 16384</span></span><br><span class="line"><span class="string">net.core.netdev_max_backlog = 16384</span></span><br><span class="line"><span class="string">net.ipv4.tcp_max_orphans = 16384</span></span><br><span class="line"><span class="string">net.netfilter.nf_conntrack_max = 25000000</span></span><br><span class="line"><span class="string">net.netfilter.nf_conntrack_tcp_timeout_established = 180</span></span><br><span class="line"><span class="string">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span></span><br><span class="line"><span class="string">net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60</span></span><br><span class="line"><span class="string">net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> sysctl -p</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;优化项已存在。&quot;</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"> action <span class="string">&quot;内核调优完成&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#8.加快ssh登录速度</span></span><br><span class="line"><span class="function"><span class="title">sshset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;======================加快ssh登录速度======================&quot;</span></span><br><span class="line"> sed -i <span class="string">&#x27;s#^GSSAPIAuthentication yes$#GSSAPIAuthentication no#g&#x27;</span> /etc/ssh/sshd_config</span><br><span class="line"> sed -i <span class="string">&#x27;s/#UseDNS yes/UseDNS no/g&#x27;</span> /etc/ssh/sshd_config</span><br><span class="line"> systemctl restart sshd.service</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;#grep GSSAPIAuthentication /etc/ssh/sshd_config&quot;</span></span><br><span class="line"> grep GSSAPIAuthentication /etc/ssh/sshd_config</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;#grep UseDNS /etc/ssh/sshd_config&quot;</span></span><br><span class="line"> grep UseDNS /etc/ssh/sshd_config</span><br><span class="line"> action <span class="string">&quot;完成加快ssh登录速度&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#9. 禁用ctrl+alt+del重启</span></span><br><span class="line"><span class="function"><span class="title">restartset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===================禁用ctrl+alt+del重启====================&quot;</span></span><br><span class="line"> <span class="built_in">rm</span> -rf /usr/lib/systemd/system/ctrl-alt-del.target</span><br><span class="line"> action <span class="string">&quot;完成禁用ctrl+alt+del重启&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#10. 设置时间同步</span></span><br><span class="line"><span class="function"><span class="title">ntpdateset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;=======================设置时间同步========================&quot;</span></span><br><span class="line"> yum -y install ntpdate &amp;&gt; /dev/null</span><br><span class="line"> <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">  /usr/sbin/ntpdate time.windows.com</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;*/5 * * * * /usr/sbin/ntpdate ntp1.aliyun.com &amp;&gt;/dev/null&quot;</span> &gt;&gt; /var/spool/cron/root</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;ntpdate安装失败&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> $?</span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"> action <span class="string">&quot;完成设置时间同步&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#11. history优化</span></span><br><span class="line"><span class="function"><span class="title">historyset</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;========================history优化========================&quot;</span></span><br><span class="line"> chk_his=`<span class="built_in">cat</span> /etc/profile | grep HISTTIMEFORMAT |<span class="built_in">wc</span> -l`</span><br><span class="line"> <span class="keyword">if</span> [ <span class="variable">$chk_his</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment">#设置history格式</span></span><br><span class="line"><span class="built_in">export</span> HISTTIMEFORMAT=<span class="string">&quot;[%Y-%m-%d %H:%M:%S] [`whoami`] [`who am i|awk &#x27;&#123;print <span class="variable">$NF</span>&#125;&#x27;|sed -r &#x27;s#[()]##g&#x27;`]: &quot;</span></span><br><span class="line"><span class="comment">#记录shell执行的每一条命令</span></span><br><span class="line"><span class="built_in">export</span> PROMPT_COMMAND=<span class="string">&#x27;\</span></span><br><span class="line"><span class="string">if [ -z &quot;$OLD_PWD&quot; ];then</span></span><br><span class="line"><span class="string">    export OLD_PWD=$PWD;</span></span><br><span class="line"><span class="string">fi;</span></span><br><span class="line"><span class="string">if [ ! -z &quot;$LAST_CMD&quot; ] &amp;&amp; [ &quot;$(history 1)&quot; != &quot;$LAST_CMD&quot; ]; then</span></span><br><span class="line"><span class="string">    logger -t `whoami`_shell_dir &quot;[$OLD_PWD]$(history 1)&quot;;</span></span><br><span class="line"><span class="string">fi;</span></span><br><span class="line"><span class="string">export LAST_CMD=&quot;$(history 1)&quot;;</span></span><br><span class="line"><span class="string">export OLD_PWD=$PWD;&#x27;</span></span><br><span class="line">EOF</span><br><span class="line">  <span class="built_in">source</span> /etc/profile</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;优化项已存在。&quot;</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"> action <span class="string">&quot;完成history优化&quot;</span> /bin/true</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;===========================================================&quot;</span></span><br><span class="line"> <span class="built_in">sleep</span> 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#控制函数</span></span><br><span class="line"><span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"> menu1</span><br><span class="line"> <span class="keyword">case</span> <span class="variable">$num1</span> <span class="keyword">in</span></span><br><span class="line">  1)</span><br><span class="line">   localeset</span><br><span class="line">   selinuxset</span><br><span class="line">   firewalldset</span><br><span class="line">   chkset</span><br><span class="line">   limitset</span><br><span class="line">   yumset</span><br><span class="line">   kernelset</span><br><span class="line">   sshset</span><br><span class="line">   restartset</span><br><span class="line">   ntpdateset</span><br><span class="line">   historyset</span><br><span class="line">   ;;</span><br><span class="line">  2)</span><br><span class="line">   menu2</span><br><span class="line">   <span class="keyword">case</span> <span class="variable">$num2</span> <span class="keyword">in</span></span><br><span class="line">1)</span><br><span class="line">localeset</span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line">selinuxset</span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">firewalldset</span><br><span class="line">;;</span><br><span class="line">4)</span><br><span class="line">chkset</span><br><span class="line">;;</span><br><span class="line">5)</span><br><span class="line">limitset</span><br><span class="line">;;</span><br><span class="line">6)     </span><br><span class="line">yumset</span><br><span class="line">;;</span><br><span class="line">7)</span><br><span class="line">kernelset</span><br><span class="line">;;</span><br><span class="line">8)</span><br><span class="line">sshset</span><br><span class="line">;;</span><br><span class="line">9)</span><br><span class="line">restartset</span><br><span class="line">;;</span><br><span class="line">10)</span><br><span class="line">ntpdateset</span><br><span class="line">;;</span><br><span class="line">11)</span><br><span class="line">  historyset</span><br><span class="line">  ;;</span><br><span class="line">12)</span><br><span class="line">  main</span><br><span class="line">  ;;</span><br><span class="line">13)</span><br><span class="line">  <span class="built_in">exit</span></span><br><span class="line">  ;;</span><br><span class="line">*)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;Please select a number from [1-13].&#x27;</span></span><br><span class="line">  ;;</span><br><span class="line">   <span class="keyword">esac</span></span><br><span class="line">   ;;</span><br><span class="line">  3)</span><br><span class="line">   <span class="built_in">exit</span></span><br><span class="line">   ;;</span><br><span class="line">  *)</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&#x27;Err:Please select a number from [1-3].&#x27;</span></span><br><span class="line">   <span class="built_in">sleep</span> 3</span><br><span class="line">   main</span><br><span class="line">   ;;</span><br><span class="line"> <span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line">main $*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Init </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Init </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cisco路由器access-list访问控制</title>
      <link href="/cisco_access/"/>
      <url>/cisco_access/</url>
      
        <content type="html"><![CDATA[<p>什么是ACL？<br>访问控制列表（Access Control List，ACL） 是路由器和交换机接口的指令列表，用来控制端口进出的数据包。ACL适用于所有的被路由协议，如IP、IPX、AppleTalk等。这张表中包含了匹配关系、条件和查询语句，表只是一个框架结构，其目的是为了对某种访问进行控制。<br>list number的范围在0～99之间，这表明该access-list语句是一个普通的标准型IP访问列表语句。</p><p><strong>华为默认最后未被匹配的路由都permit ，思科 默认最后都未被匹配的路由是deny</strong></p><p>标准型IP访问列表的格式<br>—- 标准型IP访问列表的格式如下：<br>—- access-list[list number][permit|deny][source address][address][wildcard mask][log]<br>—- 下面解释一下标准型IP访问列表的关键字和参数。首先，在access和list这2个关键字之间必须有一个连字符”-“；</p><p>允许指定特定的主机，可以增加一个通配符掩码0.0.0.0或者使用host（host代表通配符），any则代表所有的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定主机</span></span><br><span class="line">access-list 1 permit 192.168.3.10 0.0.0.0 </span><br><span class="line">access-list 1 permit host 192.168.3.10 　</span><br><span class="line">access-list 1 permit any any</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">access-list 1 permit 192.168.1.33 0.0.0.0     <span class="comment">#其中1表示ACL的序号, 匹配和允许来 自192.168.1.33的流量</span></span><br><span class="line"><span class="comment"># 指定网络地址</span></span><br><span class="line">access-list 1 permit 192.168.1.0 0.0.0.255    <span class="comment">#匹配和允许来自192.168.1.0/24网段的流量, 注意这里使用的是反掩码, 0 表示比配, 1 表示任意</span></span><br><span class="line"></span><br><span class="line">access-list 1 deny 172.10.0.0 0.0.255.255     <span class="comment">#禁止172.10.0.0/16 网段的流量</span></span><br><span class="line">access-list 1 permit 0.0.0.0 255.255.255.255  <span class="comment">#允许所有的流量注意:</span></span><br><span class="line"></span><br><span class="line">** 每一个access-list之后，思科都会在你配置后加上一句 access-list 1 deny any any 即拒绝所有**</span><br><span class="line">例1:<span class="comment">#access-list 1 permit 192.168.1.33 0.0.0.0 如果你只配置了上面这条命令, 那么在思科的路由器中, 表示抓取 192.168.1.33这条路由, 并拒绝这条路由之外的全部路由</span></span><br><span class="line">例2:如果你想要拒绝一条路由, 放过所有的其他路由, 需要按照下面的方式配置</span><br><span class="line"><span class="comment">#access-list 1 deny 192.168.1.33 0.0.0.0 </span></span><br><span class="line"><span class="comment">#access-list 1 permit any any</span></span><br><span class="line">在来看看扩展的ACL<span class="comment">#access-list 100 deny ip 192.168.1.0 0.0.0.255 192.168.2.0 0.0.0.255 // 其中192.168.1.0 代表源IP, 192.168.2.0代表目的IP</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>试验拓扑，具体接口配置如拓扑所示<br><img src="https://qiufuqi.github.io/img/hexo/20230519160426.png"></p><p>实验结果1：<br>在router 0上配置ACL 应用到Fa0/0接口<br>access-list 20 permit host 172.16.30.3 </p><p>interface FastEthernet0/0<br>ip address 172.16.30.1 255.255.255.0<br>duplex auto<br>speed auto<br>ip access-group 20 in<br>则 只有172.16.30.3 的主机能够访问 192.168.10.2 的主机，172.16.30.2 的主机不能访问。</p><p>实验结果2：<br>在router 0上配置ACL 应用到Fa1/0接口<br>access-list 20 permit host 172.16.30.3 </p><p>interface FastEthernet1/0<br>ip address 192.168.10.1 255.255.255.0<br>ip access-group 20 in （在该接口本应该为out ,配置为in 后 对应的控制方向就是控制源地址192.168.10.2的路由，而access-list中配置源为172.16.30.3 显然不匹配<br>故PC1(IP为192.168.10.1 )出去的流量都被拒绝）<br>duplex auto<br>speed auto<br>则 PC1 (IP为192.168.10.1 )ping PC0 与Laptop0都不通。</p><p>实验结果3：<br>在router 0上配置ACL 应用到Fa0/1接口<br>access-list 20 permit host 172.16.30.3<br>access-list 20 permit host 192.168.10.2</p><p>interface FastEthernet1/0<br>ip address 192.168.10.1 255.255.255.0<br>ip access-group 20 in </p><p>放开源 192.168.10.2 后， PC1(IP为192.168.10.1 )ping PC0 与Laptop0都通。</p><p>示例参考：<br>配置的访问列表是允许来自网络172.16.2.0的流量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Router<span class="comment"># </span></span><br><span class="line">Router<span class="comment">#configure terminal </span></span><br><span class="line">Router(config)<span class="comment"># </span></span><br><span class="line">Router(config)<span class="comment">#access-list 1 permit 172.16.2.0 0.0.0.255</span></span><br></pre></td></tr></table></figure><p>禁止来自网络172.16.3.0的流量!!!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Router<span class="comment">#configure terminal </span></span><br><span class="line">Router(config)<span class="comment"># </span></span><br><span class="line">Router(config)<span class="comment">#access-list 2 deny 172.16.3.0 0.0.0.255 </span></span><br><span class="line">Router(config)<span class="comment">#access-list 2 permit any </span></span><br><span class="line">Router(config)<span class="comment">#int s0 </span></span><br><span class="line">Router(config-if)<span class="comment">#ip access-group 2 out </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 交换机 </category>
          
          <category> Cisco </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交换机 </tag>
            
            <tag> Cisco </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下awk命令</title>
      <link href="/centos_awk/"/>
      <url>/centos_awk/</url>
      
        <content type="html"><![CDATA[<p>Linux下awk基本命令</p><h1 id="文本操作"><a href="#文本操作" class="headerlink" title="文本操作"></a>文本操作</h1><p>Linux 文本操作的三大神器：grep、sed、awk，各自的最佳应用场景：</p><ul><li>grep：使用正则表达式搜索文本，并把匹配的行打印出来，是强大的文本搜索工具；</li><li>sed：用于编辑匹配到的文本，是一种流编辑器；</li><li>awk：能够对文本进行复杂的格式处理，是一种处理文本的语言。</li></ul><h2 id="awk使用方法"><a href="#awk使用方法" class="headerlink" title="awk使用方法"></a>awk使用方法</h2><ul><li>命令行方式</li><li>shell脚本方式</li><li>将所有的awk命令插入一个单独文件，然后调用：</li></ul><p><a href="https://blog.csdn.net/qq_15245487/article/details/100144279">https://blog.csdn.net/qq_15245487/article/details/100144279</a></p><h2 id="awk-基本操作"><a href="#awk-基本操作" class="headerlink" title="awk 基本操作"></a>awk 基本操作</h2><p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。<br>通常，<strong>awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。</strong></p><p>基本命令格式：awk ‘{pattern + action}’  {filenames}<br>pattern表示在数据中要查找的内容，action表示要执行的一系列命令。<br>awk 通过指定分隔符，将一行分为多个字段，依次用 $1、$2 … $n 表示第一个字段、第二个字段… 第n个字段。<br><strong>awk的默认分隔符是空格和制表符</strong><br>比如有一log文件，若只想获取 vel、acc、steer 的值，则可以通过下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat cat.log </span></span><br><span class="line">vel: 2.8, acc: 0.5, steer: 1.5</span><br><span class="line">vel: 3.8, acc: 1.5, steer: 2.5</span><br><span class="line">vel: 4.8, acc: 2.5, steer: 3.5</span><br><span class="line">vel: 5.8, acc: 3.5, steer: 4.5</span><br><span class="line">vel: 6.8, acc: 4.5, steer: 5.5</span><br><span class="line"><span class="comment"># awk 默认分隔符是空格和制表符 (vel:) (6.8,) (acc:) (4.5,) (steer:) (5.5)</span></span><br><span class="line">[root@localhost home]<span class="comment"># awk &#x27;&#123;print $2, $4, $6&#125;&#x27; cat.log </span></span><br><span class="line">2.8, 0.5, 1.5</span><br><span class="line">3.8, 1.5, 2.5</span><br><span class="line">4.8, 2.5, 3.5</span><br><span class="line">5.8, 3.5, 4.5</span><br><span class="line">6.8, 4.5, 5.5</span><br></pre></td></tr></table></figure><h2 id="awk-的分隔符"><a href="#awk-的分隔符" class="headerlink" title="awk 的分隔符"></a>awk 的分隔符</h2><p>awk的默认分隔符是空格和制表符，上面的例子中，若希望把逗号去掉，则可以使用 -F 参数来指定分隔符，命令如下：<br>awk -F ‘:|,’ ‘{print $2, $4, $6}’ log<br>这里指定冒号(:)和逗号(,)同时作为分隔符。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat cat.log </span></span><br><span class="line">vel: 2.8, acc: 0.5, steer: 1.5</span><br><span class="line">vel: 3.8, acc: 1.5, steer: 2.5</span><br><span class="line">vel: 4.8, acc: 2.5, steer: 3.5</span><br><span class="line">vel: 5.8, acc: 3.5, steer: 4.5</span><br><span class="line">vel: 6.8, acc: 4.5, steer: 5.5</span><br><span class="line"><span class="comment"># 冒号(:)和逗号(,)同时作为分隔符。 (vel): (6.8), (acc): (4.5), (steer): (5.5)</span></span><br><span class="line">[root@localhost home]<span class="comment"># awk -F &#x27;:|,&#x27; &#x27;&#123;print $2, $4, $6&#125;&#x27; cat.log </span></span><br><span class="line"> 2.8  0.5  1.5</span><br><span class="line"> 3.8  1.5  2.5</span><br><span class="line"> 4.8  2.5  3.5</span><br><span class="line"> 5.8  3.5  4.5</span><br><span class="line"> 6.8  4.5  5.5</span><br></pre></td></tr></table></figure><h2 id="awk-的内置变量"><a href="#awk-的内置变量" class="headerlink" title="awk 的内置变量"></a>awk 的内置变量</h2><p>除了 $1、$2 … $n，awk 还有一些内置变量，常用的如下：</p><ul><li>$0：表示当前整行，$1表示第一个字段，$2表示第二个字段，$n 表示第n个字段；</li><li>NR：表示当前已读的行数；</li><li>NF：表示当前行被分割的列数，NF表示最后一个字段，NF-1 表示倒数第二个字段；</li><li>FILENAME：表示当前文件的名称</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat cat.log </span></span><br><span class="line">vel: 2.8, acc: 0.5, steer: 1.5</span><br><span class="line">vel: 3.8, acc: 1.5, steer: 2.5</span><br><span class="line">vel: 4.8, acc: 2.5, steer: 3.5</span><br><span class="line">vel: 5.8, acc: 3.5, steer: 4.5</span><br><span class="line">vel: 6.8, acc: 4.5, steer: 5.5</span><br><span class="line">[root@localhost home]<span class="comment"># awk &#x27;&#123;print FILENAME, NR, NF, $0&#125;&#x27; cat.log </span></span><br><span class="line">cat.log 1 6 vel: 2.8, acc: 0.5, steer: 1.5</span><br><span class="line">cat.log 2 6 vel: 3.8, acc: 1.5, steer: 2.5</span><br><span class="line">cat.log 3 6 vel: 4.8, acc: 2.5, steer: 3.5</span><br><span class="line">cat.log 4 6 vel: 5.8, acc: 3.5, steer: 4.5</span><br><span class="line">cat.log 5 6 vel: 6.8, acc: 4.5, steer: 5.5</span><br></pre></td></tr></table></figure><h2 id="awk-条件判断"><a href="#awk-条件判断" class="headerlink" title="awk 条件判断"></a>awk 条件判断</h2><p>awk 的 pattern 也支持使用条件判断，比如只打印 vel 小于 4.0 的行，命令如下<br>awk ‘$2 &lt; 4.0 {print $0}’ log</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat cat.log </span></span><br><span class="line">vel: 2.8, acc: 0.5, steer: 1.5</span><br><span class="line">vel: 3.8, acc: 1.5, steer: 2.5</span><br><span class="line">vel: 4.8, acc: 2.5, steer: 3.5</span><br><span class="line">vel: 5.8, acc: 3.5, steer: 4.5</span><br><span class="line">vel: 6.8, acc: 4.5, steer: 5.5</span><br><span class="line">[root@localhost home]<span class="comment"># awk &#x27;$2 &lt; 4.0 &#123;print $0&#125;&#x27; cat.log </span></span><br><span class="line">vel: 2.8, acc: 0.5, steer: 1.5</span><br><span class="line">vel: 3.8, acc: 1.5, steer: 2.5</span><br></pre></td></tr></table></figure><h2 id="awk-统计值计算"><a href="#awk-统计值计算" class="headerlink" title="awk 统计值计算"></a>awk 统计值计算</h2><p>awk 还可以快速计算出一些统计值，比如最大值，最小值，平均值等。<br>比如计算 vel 的最大值，acc 的最小值，steer 的平均值，命令如下：<br>awk -F ‘:|,’ ‘BEGIN {max=0} {if($2&gt;max) max=$2} END {print “max vel:”, max}’ cat.log<br>awk -F ‘:|,’ ‘BEGIN {min=10} {if($4&lt;min) min=$4} END {print “min acc:”, min}’ cat.log<br>awk -F ‘:|,’ ‘BEGIN {sum=0} {sum+=$6} END {print “steer avg:”, sum/NR}’ cat.log<br>命令中的 BEGIN 和 END 都是awk的关键字：</p><ul><li>BEGIN：表示在awk程序开始前执行一次；</li><li>END：表示在awk程序结束后执行一次</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat cat.log </span></span><br><span class="line">vel: 2.8, acc: 0.5, steer: 1.5</span><br><span class="line">vel: 3.8, acc: 1.5, steer: 2.5</span><br><span class="line">vel: 4.8, acc: 2.5, steer: 3.5</span><br><span class="line">vel: 5.8, acc: 3.5, steer: 4.5</span><br><span class="line">vel: 6.8, acc: 4.5, steer: 5.5</span><br><span class="line">[root@localhost home]<span class="comment"># awk -F &#x27;:|,&#x27; &#x27;BEGIN &#123;max=0&#125; &#123;if($2&gt;max) max=$2&#125; END &#123;print &quot;max vel:&quot;, max&#125;&#x27; cat.log </span></span><br><span class="line">max vel:  6.8</span><br><span class="line">[root@localhost home]<span class="comment"># awk -F &#x27;:|,&#x27; &#x27;BEGIN &#123;min=10&#125; &#123;if($4&lt;min) min=$4&#125; END &#123;print &quot;min acc:&quot;, min&#125;&#x27; cat.log </span></span><br><span class="line">min acc:  0.5</span><br><span class="line">[root@localhost home]<span class="comment"># awk -F &#x27;:|,&#x27; &#x27;BEGIN &#123;sum=0&#125; &#123;sum+=$6&#125; END &#123;print &quot;steer avg:&quot;, sum/NR&#125;&#x27; cat.log </span></span><br><span class="line">steer avg: 3.5</span><br></pre></td></tr></table></figure><h2 id="awk的print和printf"><a href="#awk的print和printf" class="headerlink" title="awk的print和printf"></a>awk的print和printf</h2><p>awk 同时支持 print 和 printf 两种打印输出的函数。</p><ul><li>print：其参数可以是变量、数值或字符串，字符串必须用双引号，参数用逗号分开；</li><li>printf：其用法与C语言的printf相似，可以格式化输出。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cat cat.log </span></span><br><span class="line">vel: 2.8, acc: 0.5, steer: 1.5</span><br><span class="line">vel: 3.8, acc: 1.5, steer: 2.5</span><br><span class="line">vel: 4.8, acc: 2.5, steer: 3.5</span><br><span class="line">vel: 5.8, acc: 3.5, steer: 4.5</span><br><span class="line">vel: 6.8, acc: 4.5, steer: 5.5</span><br><span class="line">[root@localhost home]<span class="comment"># awk -F &#x27;:|,&#x27; &#x27;&#123;printf(&quot;%.2f %.2f %.2f\n&quot;, $2, $4, $6)&#125;&#x27; cat.log </span></span><br><span class="line">2.80 0.50 1.50</span><br><span class="line">3.80 1.50 2.50</span><br><span class="line">4.80 2.50 3.50</span><br><span class="line">5.80 3.50 4.50</span><br><span class="line">6.80 4.50 5.50</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> awk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux免密登录</title>
      <link href="/centos_ssh/"/>
      <url>/centos_ssh/</url>
      
        <content type="html"><![CDATA[<p>免密登录命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.进入.ssh目录：  </span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"><span class="comment"># 2.生成一对密钥： </span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="comment"># 3.发送公钥：</span></span><br><span class="line">ssh-copy-id 192.168.xx.xxx</span><br><span class="line"><span class="comment"># 4.免密登录测试： </span></span><br><span class="line">ssh 192.168.xx.xxx</span><br></pre></td></tr></table></figure><h1 id="免密登录原理"><a href="#免密登录原理" class="headerlink" title="免密登录原理"></a>免密登录原理</h1><p>免密登录原理通过RSA公开密钥算法的一种应用。RSA是公开密钥密码体制的一种使用不同的加密密钥与解密密钥，“由已知加密密钥推导出解密密钥在计算上是不可行的”密码体制(非对称加密) 。在公开密钥密码体制中，加密密钥（即公开密钥）PK是公开信息，而解密密钥（即秘密密钥）SK是需要保密的。加密算法E和解密算法D也都是公开的。虽然解密密钥SK是由公开密钥PK决定的。</p><p><strong>通俗的来说就是同时生成公钥和私钥，私钥自己保存，公钥发给其他人。</strong></p><h1 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h1><p>进入.ssh目录，生成密钥ssh-keygen -t rsa</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd .ssh/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成一对密钥，使用rsa通用密钥算法，这时需要有三次回车；</span></span><br><span class="line">[root@localhost .ssh]<span class="comment"># ssh-keygen -t rsa</span></span><br><span class="line">[root@localhost .ssh]<span class="comment"># ls</span></span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub  known_hosts</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">Align <code>left</code></th><th align="center">center align</th><th align="right">Align right</th></tr></thead><tbody><tr><td align="left"><code>left</code>-aligned</td><td align="center">centered</td><td align="right">right-aligned</td></tr><tr><td align="left"><code>左</code>对齐</td><td align="center">中对齐</td><td align="right">右对齐</td></tr></tbody></table><table><thead><tr><th align="left">Align <code>left</code></th><th align="left">center align</th></tr></thead><tbody><tr><td align="left">known_hosts</td><td align="left">记录ssh访问过计算机的公钥（public key）</td></tr><tr><td align="left">id_rsa</td><td align="left">生成的私钥</td></tr><tr><td align="left">id_rsa.pub</td><td align="left">生成的公钥</td></tr><tr><td align="left">authorized_keys</td><td align="left">存放授权过的无密登录服务器公钥（后面会提到）</td></tr></tbody></table><h1 id="发送公钥"><a href="#发送公钥" class="headerlink" title="发送公钥"></a>发送公钥</h1><p>将公钥发送给目标IP(需要输入密码)，目标IP则可以免密码登录<br>命令：ssh-copy-id 10.11.8.63<br>命令：ssh-copy-id -i .ssh/id_dsa.pub <a href="mailto:&#x72;&#111;&#x6f;&#116;&#64;&#x31;&#x30;&#46;&#49;&#x31;&#46;&#56;&#46;&#54;&#51;">&#x72;&#111;&#x6f;&#116;&#64;&#x31;&#x30;&#46;&#49;&#x31;&#46;&#56;&#46;&#54;&#51;</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost .ssh]<span class="comment"># ssh-copy-id 10.11.8.63</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 后期就可以直接登录</span></span><br><span class="line">[root@localhost .ssh]<span class="comment"># ssh 10.11.8.63</span></span><br><span class="line">Last login: Tue Apr 18 14:14:41 2023 from 10.11.8.68</span><br><span class="line">[root@devqiu ~]<span class="comment"># </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 免密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 免密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装配置NFS</title>
      <link href="/centos_nfs/"/>
      <url>/centos_nfs/</url>
      
        <content type="html"><![CDATA[<p>两台CentOS7虚拟机，分别记为A（服务端10.128.0.96） B（客户端192.168.0.101）</p><h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><h2 id="安装nfs"><a href="#安装nfs" class="headerlink" title="安装nfs"></a>安装nfs</h2><p>在A服务端安装对应nfs服务，并修改对应端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum -y install rpcbind nfs-utils</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/sysconfig/nfs</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置各种*port=...参数</span></span><br><span class="line"><span class="comment"># TCP port rpc.lockd should listen on.</span></span><br><span class="line">LOCKD_TCPPORT=32803</span><br><span class="line"><span class="comment"># UDP port rpc.lockd should listen on.</span></span><br><span class="line">LOCKD_UDPPORT=32769</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Port rpc.statd should listen on.</span></span><br><span class="line">STATD_PORT=662</span><br><span class="line"><span class="comment"># Outgoing port statd should used. The default is port</span></span><br><span class="line"><span class="comment"># is random</span></span><br><span class="line">STATD_OUTGOING_PORT=2020</span><br></pre></td></tr></table></figure><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>设置开机启动并启动对应服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">开机自动启动</span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs-lock</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs-idmap</span><br><span class="line"> </span><br><span class="line">启动服务</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs</span><br><span class="line">systemctl start nfs-lock</span><br><span class="line">systemctl start nfs-idmap</span><br></pre></td></tr></table></figure><h2 id="端口管理"><a href="#端口管理" class="headerlink" title="端口管理"></a>端口管理</h2><p>查看端口占用，并通过防火墙 或者暂时关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpcinfo -p</span></span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100005    1   udp  20048  mountd</span><br><span class="line">    100005    1   tcp  20048  mountd</span><br><span class="line">    100005    2   udp  20048  mountd</span><br><span class="line">    100005    2   tcp  20048  mountd</span><br><span class="line">    100005    3   udp  20048  mountd</span><br><span class="line">    100005    3   tcp  20048  mountd</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    3   tcp   2049  nfs_acl</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100227    3   udp   2049  nfs_acl</span><br><span class="line">    100021    1   udp  55264  nlockmgr</span><br><span class="line">    100021    3   udp  55264  nlockmgr</span><br><span class="line">    100021    4   udp  55264  nlockmgr</span><br><span class="line">    100021    1   tcp  43310  nlockmgr</span><br><span class="line">    100021    3   tcp  43310  nlockmgr</span><br><span class="line">    100021    4   tcp  43310  nlockmgr</span><br><span class="line">    100024    1   udp  47115  status</span><br><span class="line">    100024    1   tcp  47466  status</span><br><span class="line"> </span><br><span class="line">开启以下端口</span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --add-port=111/tcp --permanent</span></span><br><span class="line">[root@localhost /]<span class="comment"># firewall-cmd --zone=public --list-ports</span></span><br><span class="line">20048/udp 20048/tcp 2049/udp 2049/tcp 111/udp 111/tcp</span><br></pre></td></tr></table></figure><h2 id="设置共享目录"><a href="#设置共享目录" class="headerlink" title="设置共享目录"></a>设置共享目录</h2><p>设置需要共享的目录（以/home目录为例），并加载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/exports</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#填入以下内容 ip为B客户端网段</span></span><br><span class="line">/home 192.168.0.101/24(rw,root_squash,all_squash,<span class="built_in">sync</span>,anonuid=1000,anongid=1000)</span><br><span class="line"><span class="comment">#或者是网段</span></span><br><span class="line">/home 192.168.0.0/24(rw,<span class="built_in">sync</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 每次添加新的IP段，需要执行以下命令重新挂载</span></span><br><span class="line">[root@localhost ~]<span class="comment"># exportfs -r</span></span><br></pre></td></tr></table></figure><h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><h2 id="挂载硬盘"><a href="#挂载硬盘" class="headerlink" title="挂载硬盘"></a>挂载硬盘</h2><p>挂载分享的硬盘，可以看到已经挂载成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mkdir /data</span></span><br><span class="line">[root@localhost /]<span class="comment"># mount -t nfs 10.128.0.96:/home /data</span></span><br><span class="line">[root@localhost /]<span class="comment"># df -h</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs                 1.9G     0  1.9G   0% /dev</span><br><span class="line">tmpfs                    1.9G     0  1.9G   0% /dev/shm</span><br><span class="line">tmpfs                    1.9G  8.5M  1.9G   1% /run</span><br><span class="line">tmpfs                    1.9G     0  1.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   50G  1.4G   49G   3% /</span><br><span class="line">/dev/vda1               1014M  150M  865M  15% /boot</span><br><span class="line">/dev/mapper/centos-home   46G   33M   46G   1% /home</span><br><span class="line">tmpfs                    379M     0  379M   0% /run/user/0</span><br><span class="line">10.128.0.96:/home         46G   32M   46G   1% /data</span><br></pre></td></tr></table></figure><h2 id="自动挂载"><a href="#自动挂载" class="headerlink" title="自动挂载"></a>自动挂载</h2><p>开机自动挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># vi /etc/rc.local</span></span><br><span class="line"><span class="comment"># 添加以下</span></span><br><span class="line">mount -t nfs 10.128.0.96:/home /data</span><br><span class="line">[root@localhost ~]<span class="comment"># chmod +x /etc/rc.local</span></span><br></pre></td></tr></table></figure><h1 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h1><p>搭建好nfs服务后，在client端进行挂载时，提示：<br>mount.nfs: access denied by server while mounting 192.168.0.124:/server/tools/repo<br>出现此类错误原因大致为：</p><ul><li>权限问题</li><li>防火墙机制问题</li><li>共享配置文件问题</li></ul><p><a href="https://www.cnblogs.com/su-root/p/11355486.html">参考解决</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> NFS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> NFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux的CPU占用过高</title>
      <link href="/centos_cpu/"/>
      <url>/centos_cpu/</url>
      
        <content type="html"><![CDATA[<p>某台服务器上的一个应用总是隔一段时间就自己挂掉 用top看了看 从重新部署应用开始没有多长时间CPU占用上升得很快<br>参考：<a href="https://www.cnblogs.com/you-men/p/13382659.html">https://www.cnblogs.com/you-men/p/13382659.html</a></p><h1 id="排查步骤"><a href="#排查步骤" class="headerlink" title="排查步骤"></a>排查步骤</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.使用top 定位到占用CPU高的进程PID</span></span><br><span class="line">top</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.通过ps aux | grep PID命令</span></span><br><span class="line">获取线程信息，并找到占用CPU高的线程</span><br><span class="line">ps -mp pid -o THREAD,tid,time | <span class="built_in">sort</span> -rn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.将需要的线程ID转换为16进制格式</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%x\n&quot;</span> tid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.打印线程的堆栈信息 到了这一步具体看堆栈的日志来定位问题了</span></span><br><span class="line">jstack pid |grep tid -A 30</span><br></pre></td></tr></table></figure><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="TOP查看进程"><a href="#TOP查看进程" class="headerlink" title="TOP查看进程"></a>TOP查看进程</h2><p>top可以看到PID733进程的占用172%<br><img src="https://qiufuqi.github.io/img/hexo/20230418150959.png"></p><h2 id="获取线程信息"><a href="#获取线程信息" class="headerlink" title="获取线程信息"></a>获取线程信息</h2><p>查找进程733下的线程 可以看到TID 线程775占用了96%且持有了很长时间 其实到这一步基本上能猜测到应该是 肯定是那段代码发生了死循环<br>ps -mp 733 -o THREAD,tid,time | sort -rn<br><img src="https://qiufuqi.github.io/img/hexo/20230418151127.png"></p><h2 id="线程ID转换"><a href="#线程ID转换" class="headerlink" title="线程ID转换"></a>线程ID转换</h2><p>线程ID转换为16进制格式<br>printf “%x\n” 775<br><img src="https://qiufuqi.github.io/img/hexo/20230418151203.png"></p><h2 id="查看java的堆栈信息"><a href="#查看java的堆栈信息" class="headerlink" title="查看java的堆栈信息"></a>查看java的堆栈信息</h2><p>jstack 733 |grep 307 -A 30<br><img src="https://qiufuqi.github.io/img/hexo/20230418151347.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> CPU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/1/"/>
      <url>/1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.dinghui.org/category/veeam">https://www.dinghui.org/category/veeam</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自动化运维汇总</title>
      <link href="/automation_info/"/>
      <url>/automation_info/</url>
      
        <content type="html"><![CDATA[<p><strong>动化运维是指通过运维工具来解决生产中大量、繁杂的事务，监控生产环境变化、自动响应并处置事件等问题，从而提升运维效率、降低重大问题发生的概率、更全面的保障生产环境。</strong><br><a href="https://www.cnblogs.com/echo-valley/p/12711731.html">参考</a></p><h1 id="Spug"><a href="#Spug" class="headerlink" title="Spug"></a>Spug</h1><h2 id="Spug介绍"><a href="#Spug介绍" class="headerlink" title="Spug介绍"></a>Spug介绍</h2><p>Spug是面向中小型企业设计的无 Agent的自动化运维平台，整合了主机管理、主机批量执行、主机在线终端、应用发布、任务计划、配置中心、监控、报警等一系列功能。<br>演示地址：<a href="https://demo.spug.cc/">https://demo.spug.cc</a><br>官网地址：<a href="https://www.spug.cc/">https://www.spug.cc/</a><br>使用文档：<a href="https://www.spug.cc/docs/about-spug/">https://www.spug.cc/docs/about-spug/</a><br>常见问题：<a href="https://www.spug.cc/docs/faq/">https://www.spug.cc/docs/faq/</a></p><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>批量执行: 主机命令在线批量执行<br>在线终端: 主机支持浏览器在线终端登录<br>文件管理: 主机文件在线上传下载<br>任务计划: 灵活的在线任务计划<br>发布部署: 支持自定义发布部署流程<br>配置中心: 支持 KV、文本、json 等格式的配置<br>监控中心: 支持站点、端口、进程、自定义等监控<br>报警中心: 支持短信、邮件、钉钉、微信等报警方式<br>优雅美观: 基于 Ant Design 的 UI 界面<br>开源免费: 前后端代码完全开源</p><h1 id="CODO"><a href="#CODO" class="headerlink" title="CODO"></a>CODO</h1><h2 id="codo介绍"><a href="#codo介绍" class="headerlink" title="codo介绍"></a>codo介绍</h2><p>CODO是一款为用户提供企业多混合云、自动化运维、完全开源的云管理平台。<br>CODO前端基于Vue iview开发、为用户提供友好的操作界面，增强用户体验。<br>CODO后端基于Python Tornado开发，其优势为轻量、简洁清晰、异步非阻塞。<br>CODO开源多云管理平台为用户提供多功能：ITSM、基于RBAC权限系统、Web Terminnal登陆日志审计、录像回放、强大的作业调度系统、CMDB、监控报警系统等<br><a href="https://docs.opendevops.cn/zh/guide/#microservice">https://docs.opendevops.cn/zh/guide/#microservice</a><br>地址：<a href="https://demo.opendevops.cn/login">https://demo.opendevops.cn/login</a><br>用户：demo<br>密码：2ZbFYNv9WibWcR7GB6kcEY</p><h2 id="功能介绍-1"><a href="#功能介绍-1" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>任务模版<br>任务发布<br>定时任务<br>代码仓库<br>监控告警<br>资产管理<br>配置中心<br>用户管理<br>系统管理</p><h1 id="蓝鲸智云"><a href="#蓝鲸智云" class="headerlink" title="蓝鲸智云"></a>蓝鲸智云</h1><p>腾讯蓝鲸智云，简称蓝鲸，是腾讯互动娱乐事业群（Interactive Entertainment Group，简称 IEG）自研自用的一套用于构建企业研发运营一体化体系的 PaaS 开发框架，提供了 aPaaS（DevOps 流水线、运行环境托管、前后台框架）和 iPaaS（持续集成、CMDB、作业平台、容器管理、数据平台、AI 等原子平台）等模块，帮助企业技术人员快速构建基础运营 PaaS。<br>传统的 Linux 等单机操作系统已发展数十年，随着云时代的到来，企业所需资源数暴增，操作节点（物理或虚拟服务器及容器）数量普遍达到数千个，大型互联网公司甚至达到百万级别，混合云模式成为常态，虽然 IaaS 供应商的出现从一定程度上解决了资源切割调度问题，但并未很好的解决资源与应用的融合，企业需要一种介于 IaaS 与应用（SaaS）之间的层级，用于屏蔽及控制 IaaS，快速开发及托管 SaaS，我们将其称之为基础 PaaS 层，并着重发展用于研发及托管企业内技术运营类 SaaS 的基础运营 PaaS，并将其作为区别于传统 OS 的下一代企业级分布式运营操作系统。</p><p>企业 IT 应用的全生命周期可划分为研发、运维、运营三段，在各行业进行互联网化转型的过程中，融入敏捷思维，即形成持续集成、持续部署、持续运营的概念（CI-CD-CO）。</p><p>为降低转型成本，不以增加人力数量为转型前提，腾讯 IEG 以运维团队作为转型起点，充分利用这一群体低价值重复性工作量占比高的特点，从 CD 领域切入，以 PaaS 技术进行运维自动化领域的烟囱治理，形成运维 PaaS 体系。将自动化所释放的人力资源，转型为运维开发团队，利用 PaaS 的自增长属性，将运维 PaaS 逐步向 CI 及 CO 拓展，最终完成企业级研发 - 运维 - 运营基础 PaaS 构建，落地企业研发运营一体化。</p><p>腾讯蓝鲸智云秉承开放共赢的理念，招募及联合国内优质合作伙伴，以改变中国运维行业为起点，致力于推动国内企业借助研发运营一体化，低成本实现企业 IT 经营管理模式升级和自主化。<br><a href="https://bk.tencent.com/index/">https://bk.tencent.com/index/</a></p><h2 id="功能介绍-2"><a href="#功能介绍-2" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>1,管控平台<br>2，配置平台<br>3，作业平台<br>4，paas平台<br>5，数据平台基础服务<br>6，数据平台-datahub<br>7，数据平台modelfow<br>8,容器管理平台<br>9，移动平台<br>10，故障自愈<br>11，标准运维<br>12，蓝鲸监控<br>13，日志检索<br>14，蓝鲸devops<br>15,wman<br>16,网络管理</p><h1 id="bigops"><a href="#bigops" class="headerlink" title="bigops"></a>bigops</h1><h2 id="bigops介绍"><a href="#bigops介绍" class="headerlink" title="bigops介绍"></a>bigops介绍</h2><p>如何让运维可以轻松配合开发和测试，管理好业务，已经成了运维最大的挑战。<br>运维的价值到底是什么？运维的挑战又是什么？<br>为了解决运维可视化、自动化及未来智能化的问题，我们开发了这款自动化运维软件，起名叫BigOps–比格运维。</p><p>如果获得BigOps软件？</p><p>项目首页：<a href="http://www.bigops.com/">http://www.bigops.com/</a><br>项目文档：<a href="http://docs.bigops.com/">http://docs.bigops.com/</a><br>开源地址：<a href="https://github.com/yunweibang">https://github.com/yunweibang</a><br>范例地址：<a href="http://demo.bigops.com/">http://demo.bigops.com/</a></p><h2 id="功能介绍-3"><a href="#功能介绍-3" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>一、统一认证<br>已经整合了Zabbix、Jira、Confluence、Jenkins和Gitlab，如果你现在也在使用这些开源软件，那么恭喜你，可以和BigOps无缝整合，只需要打个Patch即可轻松接入。<br>二、如果你已经有了LDAP，我们也可以接入你的认证系统<br>三、个人桌面，为每个用户定制自己的桌面，千人千面，相当每个人拥有了一个MAC OS的操作系统。<br>四、消息，管理员可以给普通用户发消息，系统也可以给管理员或者普通用户发消息。<br>五、工单。工单不光是审批，也可以做到审批后直接执行，节省运维工作量。（马上支持）<br>六、资源管理（CMDB），主机配置全自动化更新，准确率99%，并可以进行资产的全生命周期管理。<br>资源使用模型和实例的方式进行管理，随心所欲定制资源表单。<br>资源实例，支持导入、导出、，自定义显示列，批量修改和删除等操作<br>资源详情，清晰的显示资源所有信息及变更信息，主机和硬件可以自动化更新，无需人工参与。<br>七、强大的IP地址管理，让你轻松掌握IP使用情况<br>八、主机自动发现，自动发现公有云和指定网段新接入的主机。<br>九、公有云导入，支持阿里云、腾讯云、Ucloud、金山云自动导入和手动导入<br>十、hostmin，包括主机系统管理和系统备份等<br>十一、全面整合Zabbix,自动和zabbix主机关联<br>十二、监控大屏、包括主机状态、IP状态和zbx接口<br>已开发的功能还包括会话管理、硬件端口管理、硬件位置管理、用户权限、主机系统管理、主机系统备份等功能、等等20多个功能等你慢慢发掘。<br>正在开发的功能包括发布系统、告警系统、堡垒机等</p><h1 id="easyops"><a href="#easyops" class="headerlink" title="easyops"></a>easyops</h1><h2 id="easyops介绍"><a href="#easyops介绍" class="headerlink" title="easyops介绍"></a>easyops介绍</h2><p>EasyDevOps —DevOps解决方案，基于EasyOps平台强大的CI/CD和平台能力，深化DevOps开发运维一体化的应用，帮助企业落地从开发到测试、再到运维自动化、场景化，同时还致力于支撑敏捷团队的精益和协同，助力企业快速、稳定、持续的业务交付。<br>优维的DevOps解决方案已在多家金融机构、大型企业成功落地。</p><p>官网首页：<a href="https://www.uwintech.cn/">https://www.uwintech.cn/</a></p><h2 id="功能介绍-4"><a href="#功能介绍-4" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>CI/CD，快速交付，持续迭代，多云部署，支持容器</p><p>完善的制品库管理，并支持Docker镜像；<br>容器化CI流水线；<br>多云部署平台，支持多云K8S集群；<br>标准及高度定制的持续交付流水线，加快交付效率；<br>内置多种内外部开源工具，插件式开发；<br>灰度发布、蓝绿部署，轻松拥有；<br>DevOps交付看板，持续驱动IT优化。</p><h1 id="阿里云云效"><a href="#阿里云云效" class="headerlink" title="阿里云云效"></a>阿里云云效</h1><p>阿里云云效，云原生时代新 DevOps 平台，支持公共云、专有云和混合云多种部署形态，通过云原生新技术和研发新模式，助力创新创业和数字化转型企业快速实现研发敏捷和组织敏捷，打造“双敏”组织，实现 10 倍效能提升。</p><p>官方文档：<a href="https://help.aliyun.com/document_detail/153739.html?spm=a2c4g.11186623.6.542.74bf75c20EQWub">https://help.aliyun.com/document_detail/153739.html?spm=a2c4g.11186623.6.542.74bf75c20EQWub</a></p><h2 id="功能介绍-5"><a href="#功能介绍-5" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>阿里云云效，云原生时代新 DevOps 平台，支持公共云、专有云和混合云多种部署形态，通过云原生新技术和研发新模式，助力创新创业和数字化转型企业快速实现研发敏捷和组织敏捷，打造“双敏”组织，实现 10 倍效能提升。</p><p>我们的工作充满着大大小小的「项目」、「任务」：活动策划、工程实施、IT 研发、风险投资等等。使用云效做「项目化」管理，团队规划工作事目标更清晰，执行更到位，而且完成过程也十分轻松，成员将有全新的协作体验。</p><p>可视化的项目进展和协作<br>简洁优雅的「看板」呈现着项目的各个关键阶段，随时看见「谁」，在「何时」，要完成「什么」，团队成员不必再在协同工作进展上耗费时间。更棒的是，你可以打破部门边界，基于项目组合成员，跨部门协同也不再是难题。</p><p>了解如何进行项目协作：</p><p>了解项目 &gt;&gt;</p><p>井然有序的任务管理<br>如何让团队配合更默契？答案是：更明确的分工。将项目拆分为具体的可执行的任务，分工明确，井然有序。云效的「任务详情页」好像是一个容器，任务的执行过程和结果，都结构化地沉淀在这个容器里，帮助每个人准确掌握自己在任务中的职责，更好的做任务管理和展现，高效驱动每一项任务得到落实。</p><p>了解如何善用任务：</p><p>深入任务 &gt;&gt;</p><p>多元视角团队协作更佳<br>云效是连接团队的桥梁。打破部门边界，市场运营、产品经理和工程师可以共享同一个工作台。以「协作」的方式，多样化的工具整合，展现更紧密的跨部门协作，创造更多业务增长。多元视角赋能每一位成员，让企业、团队和个人以更高效的协作方式围绕目标 创造成果。</p><p>了解多样的工具整合：</p><p>实践敏捷研发全流程<br>每一个市场都在赛跑， 使用云效打造一体化研发协作流程，借助专业工具，让团队表现更优异，产品更快响应需求变化。</p><p>全面支持「看板」和「Scrum」敏捷方法，你可以围绕产品目标灵活规划每个迭代冲刺。实时数据反馈，让计划调整更及时，团队成员积极应对变化，持续交付价值。</p><p>前台业务部门和后台研发团队不应该是割裂的，云效正是连接前后台的桥梁。打破部门边界，市场运营、产品经理和工程师可以共享同一个工作台。更紧密的跨部门协作，能够创造更多业务增长。</p><p>你的产品交付，可以远超预期。</p><h1 id="StackStorm"><a href="#StackStorm" class="headerlink" title="StackStorm"></a>StackStorm</h1><p>StackStorm 是一个自动化平台。<br>这个自动化平台将您现有的基础设施和应用程序环境联系在一起来让你更容易地实现自动化。</p><p>官方网站：<a href="https://stackstorm.com/">https://stackstorm.com/</a></p><h2 id="功能介绍-6"><a href="#功能介绍-6" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>StackStorm 的主要用途有哪些 ？<br>更加便利的排除故障（Facilitated Troubleshooting） - StackStorm 可以用来处理 Nagios，Sensu，New Relic 和其他监控系统捕获的系统故障，然后在物理节点、OpenStack 或Amazon Instances 和应用程序组件上运行一系列诊断检查，并将结果发布到HipChat, Jira 等共享通信环境中。<br>自动修复（Automated remediation） - 识别和验证 OpenStack 计算节点上的硬件故障，并正确清空实例和向管理员发送关于潜在停机时间的电子邮件，在运行中如果出现任何问题，就会冻结这个 workflow 通过 PagerDuty 工具来通知技术人员来手动修复。<br>持续部署 （Continuous deployment）- 与 Jenkins 一起合作来进行构建和测试，配置新的AWS集群，使用基于 NewRelic 的应用程序性能数据来激活负载均衡的一些流量负载功能，并执行配置前滚或回滚的操作。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>磁盘inode节点被占满问题</title>
      <link href="/centos_inode/"/>
      <url>/centos_inode/</url>
      
        <content type="html"><![CDATA[<p>问题：</p><p>Linux服务器，查看日志发现程序无法继续写文件，但是用df -h查看磁盘容量还有剩余。<br>排查思路：怀疑是机器的inode节点被占满，使用df -i查看磁盘inode节点使用情况，果然是inode节点满了。</p><p>进行如下步骤进行排查：<br>1，df -i查看磁盘节点使用情况，查看到inode节点已满。<br>2，进入到可能的目录，运行for i in ./*; do echo i;findi | wc -l; done统计当前目录使用节点的情况<br>3，发现/tmp目录下被大量的小文件占满，联系开发发现是程序bug导致不断生成大量小文件，下周改进，在此之前写一个定时清理的脚本删除文件。</p><p>总结：解决inode节点满的一般方法就是删除占用inode节点的异常文件</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> inode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> inode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux虚拟IP配置</title>
      <link href="/centos_virtual_ip/"/>
      <url>/centos_virtual_ip/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟IP介绍"><a href="#虚拟IP介绍" class="headerlink" title="虚拟IP介绍"></a>虚拟IP介绍</h1><p>虚拟IP地址(VIP) 是一个不与特定计算机或一个计算机中的网络接口卡(NIC)相连的IP地址。数据包被发送到这个VIP地址，但是所有的数据还是经过真实的网络接口。</p><ul><li>真实IP又被称为管理IP，一般是配置在物理网卡上的实际IP，管理IP是不对外提供用户访问服务的，而作为管理服务器用，如SSH可以通过这个管理IP连接服务器。</li><li>虚拟IP即VIP，这只是一个概念而已，可能会误导你，实际上就是heartbeat临时绑定在物理网卡上的别名(heartbeat3以上页采用了辅助IP)，你可以在一块网卡上绑定多个别名。这个VIP可以看作是你上网的QQ网名、昵称、外号等。在实际生产环境中，需要在DNS配置中把网站域名地址解析到这个VIP地址，由这个VIP对用户提供服务。如：把<a href="http://www.zhangcong.top解析到vip/">www.zhangcong.top解析到VIP</a> 1.1.1.1 上。</li></ul><h1 id="虚拟IP作用"><a href="#虚拟IP作用" class="headerlink" title="虚拟IP作用"></a>虚拟IP作用</h1><p>大部分虚拟ip基本上都用于高可用的架构上边。主机启用虚拟ip，所有访问的请求都会到主机。当主机宕机的时候，高可用软件会将主机的虚拟ip down掉，然后在备机上启用虚拟ip。这样就完成了主备切换。从而保证业务的可用性。</p><h1 id="创建虚拟IP"><a href="#创建虚拟IP" class="headerlink" title="创建虚拟IP"></a>创建虚拟IP</h1><p>在linux中创建虚拟ip有两种方法，分别是：辅助IP和别名IP。 (别名IP将被遗弃，用辅助IP替代)</p><h2 id="辅助IP"><a href="#辅助IP" class="headerlink" title="辅助IP"></a>辅助IP</h2><p>辅助ip是由linux的ip命令去创建和操作的。</p><h3 id="创建辅助IP"><a href="#创建辅助IP" class="headerlink" title="创建辅助IP"></a>创建辅助IP</h3><p>创建命令：ip addr add IP/掩码 dev 网卡名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@lj-master ~]<span class="comment"># ip a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">  ·········</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">  ·········</span><br><span class="line">[root@lj-master ~]<span class="comment"># ip addr add 10.11.7.240/24 dev ens192</span></span><br></pre></td></tr></table></figure><h3 id="查看辅助ip"><a href="#查看辅助ip" class="headerlink" title="查看辅助ip"></a>查看辅助ip</h3><p>使用命令ip a就可以查看，但是不能使用ifconfig –a去查看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@lj-master ~]<span class="comment"># ip addr</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">·········</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 00:50:56:8d:75:a2 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.11.7.232/24 brd 10.11.7.255 scope global ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 10.11.7.240/24 scope global ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::250:56ff:fe8d:75a2/64 scope <span class="built_in">link</span> </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h3 id="删除辅助ip"><a href="#删除辅助ip" class="headerlink" title="删除辅助ip"></a>删除辅助ip</h3><p>删除命令：ip addr del IP dev 网卡名 (将add改为del即可。)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lj-master ~]<span class="comment"># ip addr del 10.11.7.240/24 dev ens192</span></span><br></pre></td></tr></table></figure><h3 id="永久生效"><a href="#永久生效" class="headerlink" title="永久生效"></a>永久生效</h3><p>这种方式创建的虚拟ip，可以将生成虚拟ip的命令写到/etc/rc.local中去，开机即可自动加载。</p><h2 id="别名IP"><a href="#别名IP" class="headerlink" title="别名IP"></a>别名IP</h2><p>别名ip是由linux的ifconfig命令去创建和操作的。</p><h3 id="创建别名IP"><a href="#创建别名IP" class="headerlink" title="创建别名IP"></a>创建别名IP</h3><p>创建命令：ifconfig 网关名:1 IP netmask 子网掩码 up</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lj-master ~]<span class="comment"># ifconfig</span></span><br><span class="line">ens192: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">  ·········</span><br><span class="line">[root@lj-master ~]<span class="comment"># ifconfig ens192:1 10.11.7.240 netmask 255.255.255.0 up</span></span><br></pre></td></tr></table></figure><h3 id="查看别名IP"><a href="#查看别名IP" class="headerlink" title="查看别名IP"></a>查看别名IP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@lj-master ~]<span class="comment"># ifconfig</span></span><br><span class="line">ens192: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.11.7.232  netmask 255.255.255.0  broadcast 10.11.7.255</span><br><span class="line">        ·········</span><br><span class="line">ens192:1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.11.7.240  netmask 255.255.255.0  broadcast 10.11.7.255</span><br><span class="line">        ether 00:50:56:8d:75:a2  txqueuelen 1000  (Ethernet)</span><br></pre></td></tr></table></figure><h3 id="删除别名IP"><a href="#删除别名IP" class="headerlink" title="删除别名IP"></a>删除别名IP</h3><p>删除命令：ifconfig 网关名:1 IP netmask 子网掩码 down (只要将后边的up改为down就可以了)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lj-master ~]<span class="comment"># ifconfig ens192:1 10.11.7.240 netmask 255.255.255.0 down</span></span><br></pre></td></tr></table></figure><h3 id="永久有效"><a href="#永久有效" class="headerlink" title="永久有效"></a>永久有效</h3><p>开机就有虚拟ip，可以在网卡的配置目录中去建立一个新的网卡的配置文件<br>centos和红帽都是在这个目录下/etc/sysconfig/network-scripts<br>cp ifcfg-eth0 ifcfg-eth0:1<br>然后更改其中的ip即可，重启网卡就行。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 虚拟IP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 虚拟IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装NTP校时</title>
      <link href="/centos_ntp/"/>
      <url>/centos_ntp/</url>
      
        <content type="html"><![CDATA[<p><strong>CentOS 7 部署NTP校时服务器</strong><br><a href="https://blog.csdn.net/weixin_45756094/article/details/122017774">配置参考</a><br>提前准备CentOS 7服务器（2C 4G 50G，核心安装即可）</p><p>网络时间协议NTP（Network TimeProtocol）是时间同步的技术基础，是用来使计算机时间同步的一种协议。它可以使计算机对其服务器或时钟源做同步化，它可以提供高精准度的时间校正（LAN上与标准间差小于1毫秒，WAN上几十毫秒）</p><p>linux的时间分为系统时间和硬件时间。</p><ul><li><p>系统时间:<br>通常在开机时复制硬件时间，之后独立运行并保存了时间、时区和夏令时设置。通过date命令设置。</p></li><li><p>硬件时间:<br>(RTC、Real-Time Clock),CMOS时间，在主板上靠电池供电，仅保存时期时间数值。通过hwclock命令设置，在这里，我们用系统时间同步硬件时间：hwclock -w</p></li></ul><h1 id="时间时区设定"><a href="#时间时区设定" class="headerlink" title="时间时区设定"></a>时间时区设定</h1><h2 id="当前日期和时间"><a href="#当前日期和时间" class="headerlink" title="当前日期和时间"></a>当前日期和时间</h2><p>查看当前系统日期和时间：date</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># hostnamectl set-hostname ntp-server</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># date</span></span><br><span class="line">Sat Apr 15 14:22:01 CST 2023</span><br></pre></td></tr></table></figure><h2 id="更改时区"><a href="#更改时区" class="headerlink" title="更改时区"></a>更改时区</h2><p>在中国时区是CST，如果显示时区不正确，修改：tzselect</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入数字选择 5 9 1</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># tzselect</span></span><br></pre></td></tr></table></figure><h2 id="拷贝时区"><a href="#拷贝时区" class="headerlink" title="拷贝时区"></a>拷贝时区</h2><p>将时区信息拷贝，覆盖原来的时区信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br></pre></td></tr></table></figure><h1 id="NTP服务端"><a href="#NTP服务端" class="headerlink" title="NTP服务端"></a>NTP服务端</h1><h2 id="安装ntp服务"><a href="#安装ntp服务" class="headerlink" title="安装ntp服务"></a>安装ntp服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># yum -y install ntp</span></span><br></pre></td></tr></table></figure><h2 id="更改配置文件"><a href="#更改配置文件" class="headerlink" title="更改配置文件"></a>更改配置文件</h2><p>centos7的ntp配置文件存放路径为：/etc/ntp.conf。</p><p>restrict 控制相关权限<br>语法为： <strong>restrict IP地址 mask 子网掩码 参数</strong><br>其中IP地址也可以是default ，default 就是指所有的IP。</p><p>配置文件中一般有restrict default语句，注释掉第二种或选择第一种<br>restrict default nomodify notrap noquery    #  默认允许所有可连接客户端ntpdate到本机<br>restrict default ignore                     #  默认所有客户端禁止ntpdate到本机</p><p>配置与上级互联网服务端连续性同步时间，prefer表示优先，如无可不设置<br>server 上级ntp服务器IP或者域名 [prefer]<br>ntp1.aliyun.com 或者 ntp.ntsc.ac.cn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第21-24行可以注释掉： 修改为国内公网上的时间服务器（26、27 行）；当外部时间不可用时，采用本地时间（28、29行）</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># cp /etc/ntp.conf /etc/ntp.conf.bak</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># vi /etc/ntp.conf</span></span><br><span class="line"><span class="comment"># 新增日志记录文件</span></span><br><span class="line">logfile /var/log/ntpd.log</span><br><span class="line">·········</span><br><span class="line">21 <span class="comment">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line">22 <span class="comment">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line">25 </span><br><span class="line">26 server ntp1.aliyun.com prefer</span><br><span class="line">26 server ntp.ntsc.ac.cn</span><br><span class="line">27 server 127.0.0.1</span><br><span class="line">28 fudge 127.0.0.1 stratum 10</span><br><span class="line">·········</span><br></pre></td></tr></table></figure><p>PS: 授权特定网段的主机可以从此时间服务器上查询和同步时间：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">restrict 192.168.100.0 mask 255.255.255.0 nomodify notrap</span><br></pre></td></tr></table></figure><h2 id="启动NTP服务"><a href="#启动NTP服务" class="headerlink" title="启动NTP服务"></a>启动NTP服务</h2><p>启动NTP服务，并开机自启，同步硬件时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># systemctl restart ntpd &amp;&amp; systemctl enable ntpd</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="NTP同步时间"><a href="#NTP同步时间" class="headerlink" title="NTP同步时间"></a>NTP同步时间</h2><p>设置硬件时间 hwclock -w<br>或者在/etc/sysconfig/ntpd文件中，添加【SYNC_HWCLOCK=yes】这样，就可以让硬件时间与系统时间一起同步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># hwclock -w</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># ntpdate -u ntp1.aliyun.com</span></span><br><span class="line">15 Apr 14:54:02 ntpdate[16056]: adjust time server 120.25.115.20 offset 0.000856 sec</span><br></pre></td></tr></table></figure><h2 id="NTP状态"><a href="#NTP状态" class="headerlink" title="NTP状态"></a>NTP状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># ntpq -p</span></span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line">*114.118.7.163   123.139.33.3     2 u   11   64  257   32.798    9.368  16.194</span><br><span class="line">+120.25.115.20   10.137.53.7      2 u   10   64  377   48.803   -0.626   3.561</span><br><span class="line"> localhost       .INIT.          16 l    - 1024    0    0.000    0.000   0.000</span><br><span class="line"></span><br><span class="line">[root@ntp-server ~]<span class="comment"># ntpstat</span></span><br><span class="line">synchronised to NTP server (114.118.7.163) at stratum 3</span><br><span class="line">   time correct to within 203 ms</span><br><span class="line">   polling server every 64 s</span><br></pre></td></tr></table></figure><h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><p>关闭防火墙 或者 放行端口123/udp端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启防火墙</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># firewall-cmd --zone=public --add-port=123/udp --permanent</span></span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># firewall-cmd --add-service=ntp --permanent</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># firewall-cmd --list-all</span></span><br><span class="line">public (active)</span><br><span class="line">  ·········</span><br><span class="line">  services: ssh dhcpv6-client ntp</span><br><span class="line">  ports: </span><br><span class="line">  ·········</span><br></pre></td></tr></table></figure><p>关闭selinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># vi /etc/sysconfig/selinux</span></span><br><span class="line">·········</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><p>使用域名nginx代理转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost nginx]<span class="comment"># cat /etc/nginx/nginx.conf</span></span><br><span class="line">·········</span><br><span class="line">stream &#123;</span><br><span class="line">    upstream ntp_123 &#123;</span><br><span class="line">        server 10.11.7.22:123;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 123 udp; <span class="comment">#由于ntp使用udp协议，这里采用udp协议</span></span><br><span class="line">        proxy_pass ntp_123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">·········</span><br></pre></td></tr></table></figure><h2 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h2><h3 id="无法自启动问题"><a href="#无法自启动问题" class="headerlink" title="无法自启动问题"></a>无法自启动问题</h3><p>ntp已经设置开机自启，但是开机启动并未成功。一般引起这个问题的最为常见的原因是系统上安装了一个与NTP相冲突的工具：chrony</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># systemctl status ntpd</span></span><br><span class="line">● ntpd.service - Network Time Service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">[root@ntp-server ~]<span class="comment"># systemctl is-enabled ntpd</span></span><br><span class="line">enabled</span><br></pre></td></tr></table></figure><p>查询chrony是否被设置为enabled，并关闭自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># systemctl is-enabled chronyd</span></span><br><span class="line">enabled</span><br><span class="line">[root@ntp-server ~]<span class="comment"># systemctl disable chronyd</span></span><br><span class="line">Removed symlink /etc/systemd/system/multi-user.target.wants/chronyd.service.</span><br></pre></td></tr></table></figure><h3 id="无法提供服务"><a href="#无法提供服务" class="headerlink" title="无法提供服务"></a>无法提供服务</h3><p>服务端正常启动但是无法提供服务，timedatectl查询状态<br>查看系统时间状态时，其中NTP enabled参数的控制指令为：<strong>timedatectl set-ntp yes/no</strong> 一般不用<br>在没开启NTP enabled情况下，NTP synchronized参数一般为no，表示还没有进行过时间同步，在时间同步后会由no变为yes。当然，如果使用过ntpdate手工同步过，该参数也会是yes状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># timedatectl</span></span><br><span class="line">      Local time: Sat 2023-04-15 16:40:04 CST</span><br><span class="line">  Universal time: Sat 2023-04-15 08:40:04 UTC</span><br><span class="line">        RTC time: Sat 2023-04-15 08:40:04</span><br><span class="line">       Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: no</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC <span class="keyword">in</span> <span class="built_in">local</span> TZ: no</span><br><span class="line">      DST active: n/a</span><br><span class="line">[root@ntp-server ~]<span class="comment"># ntpstat</span></span><br><span class="line">unsynchronised</span><br><span class="line">   polling server every 64 s</span><br></pre></td></tr></table></figure><p>解决NTP synchronized: no的方法：停掉ntpd, 执行ntpd -gq重新调整时间后，再启动ntpd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># systemctl stop ntpd</span></span><br><span class="line">[root@ntp-server ~]<span class="comment"># ntpd -gq</span></span><br><span class="line">ntpd: time slew +0.034698s</span><br><span class="line">[root@ntp-server ~]<span class="comment"># systemctl start ntpd</span></span><br></pre></td></tr></table></figure><p>等待一会儿后（大概5分钟）,NTP synchronized恢复成yes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># ntpstat</span></span><br><span class="line">synchronised to NTP server (120.25.115.20) at stratum 3</span><br><span class="line">   time correct to within 969 ms</span><br><span class="line">   polling server every 64 s</span><br></pre></td></tr></table></figure><h1 id="NTP客户端"><a href="#NTP客户端" class="headerlink" title="NTP客户端"></a>NTP客户端</h1><h2 id="安装ntp服务-1"><a href="#安装ntp服务-1" class="headerlink" title="安装ntp服务"></a>安装ntp服务</h2><p>ntp和ntpdate任选一个安装，对应不同同步方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum -y install ntp ntpdate</span></span><br></pre></td></tr></table></figure><h2 id="同步方法一：ntpd"><a href="#同步方法一：ntpd" class="headerlink" title="同步方法一：ntpd"></a>同步方法一：ntpd</h2><p>好处：</p><ul><li>客户端的ntpd服务始终运行着,定期同步时间,不用我们每次都手动同步或者写定时器</li><li>ntpd服务是慢慢改变时间直至标准时间<h3 id="配置NTP"><a href="#配置NTP" class="headerlink" title="配置NTP"></a>配置NTP</h3>先执行hwclock -w,否则如果bios时间和系统时间差异超过了30分钟,就会报错<br>同步系统时间和bios时间，配置同步NTP地址<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># hwclock -w</span></span><br><span class="line">[root@localhost ~]<span class="comment"># echo &quot;server 10.11.7.22&quot; &gt;/etc/ntp.conf</span></span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl restart ntpd</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl enable ntpd</span></span><br></pre></td></tr></table></figure><h3 id="ntp状态"><a href="#ntp状态" class="headerlink" title="ntp状态"></a>ntp状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ntpstat</span></span><br><span class="line">unsynchronised</span><br><span class="line">  time server re-starting</span><br><span class="line">   polling server every 8 s</span><br><span class="line"><span class="comment"># 重启服务以使配置生效,之后大概要等10分钟左右,才会同步成功</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ntpstat</span></span><br><span class="line">synchronised to NTP server (10.11.7.22) at stratum 4</span><br><span class="line">   time correct to within 1122 ms</span><br><span class="line">   polling server every 64 s</span><br><span class="line">[root@localhost ~]<span class="comment"># ntpq -p</span></span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> 10.11.7.22      114.118.7.163    3 u   15   64    1    0.238   -0.647   0.000</span><br></pre></td></tr></table></figure><h2 id="同步方法二：ntpdate"><a href="#同步方法二：ntpdate" class="headerlink" title="同步方法二：ntpdate"></a>同步方法二：ntpdate</h2>ntp和ntpdate无法同时运行，所以先关闭方法一 (未使用方法一则忽略)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl stop ntpd &amp;&amp; systemctl disable ntpd</span></span><br></pre></td></tr></table></figure><h3 id="启动服务-1"><a href="#启动服务-1" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl start ntpdate &amp;&amp; systemctl enable ntpdate</span></span><br></pre></td></tr></table></figure><h3 id="同步时间"><a href="#同步时间" class="headerlink" title="同步时间"></a>同步时间</h3>同步NTP服务端时间 且 让系统时间和硬件时间同步<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># /usr/sbin/ntpdate -u 10.11.7.22</span></span><br><span class="line">15 Apr 15:53:46 ntpdate[32506]: adjust time server 10.11.7.22 offset 0.004725 sec</span><br><span class="line">[root@localhost ~]<span class="comment"># hwclock -w</span></span><br></pre></td></tr></table></figure><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3>ntpdate每次执行完就失效了，可以设置定时器，定时执行。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># crontab -e</span></span><br><span class="line">*/15 * * * * /usr/sbin/ntpdate -u 10.11.7.22 &gt; /dev/null 2&gt;&amp;1; /sbin/hwclock -w</span><br></pre></td></tr></table></figure><h1 id="Chrony客户端"><a href="#Chrony客户端" class="headerlink" title="Chrony客户端"></a>Chrony客户端</h1>Chrony 是一个开源的自由软件，它能帮助你保持系统时钟与时钟服务器同步，因此让你的时间保持精确。它由两个程序组成，分别是 chronyd 和 chronyc。</li><li>chronyd是一个后台运行的守护进程，用于调整内核中运行的系统时钟和时钟服务器同步。它确定计算机增减时间的比率，并对此进行补偿。</li><li>chronyc提供了一个用户界面，用于监控性能并进行多样化的配置。它可以在chronyd实例控制的计算机上工作，也可以在一台不同的远程计算机上工作。</li></ul><p>CentOS8 以后默认不再支持ntp软件包，改用chronyd实现时间服务功能。</p><h2 id="wlnmp方式"><a href="#wlnmp方式" class="headerlink" title="wlnmp方式"></a>wlnmp方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加wlnmp的yum源</span></span><br><span class="line">rpm -ivh http://mirrors.wlnmp.com/centos/wlnmp-release-centos.noarch.rpm</span><br><span class="line"><span class="comment">#安装ntp服务</span></span><br><span class="line">yum -y install wntp</span><br><span class="line"><span class="comment">#时间同步</span></span><br><span class="line">ntpdate ntp.yurun.com</span><br></pre></td></tr></table></figure><h2 id="chronyd方式"><a href="#chronyd方式" class="headerlink" title="chronyd方式"></a>chronyd方式</h2><h3 id="安装chronyd"><a href="#安装chronyd" class="headerlink" title="安装chronyd"></a>安装chronyd</h3><p>chronyd在centos8以后里是预安装的，没有安装的话执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 &amp;&amp; 开机自启动</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum -y install chrony</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl enable chronyd.service</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart chronyd.service</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl status chronyd.service</span></span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>当 Chrony 启动时，它会读取 /etc/chrony.conf 配置文件中的设置，配置内容格式和 ntpd 服务基本相似。<br>大部分参数并不需要使用，cat /etc/chrony.conf<br><img src="https://qiufuqi.github.io/img/hexo/20230626170420.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改对应的 server从10.11.7.22同步时间 allow 允许网段，自身也可以当作服务端</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/chrony.conf</span></span><br><span class="line">·········</span><br><span class="line">pool 2.centos.pool.ntp.org iburst</span><br><span class="line">server 10.11.7.22</span><br><span class="line">·········</span><br><span class="line"><span class="comment"># Allow NTP client access from local network.</span></span><br><span class="line"><span class="comment">#allow 192.168.0.0/16</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart chronyd.service</span></span><br></pre></td></tr></table></figure><h3 id="运行状态"><a href="#运行状态" class="headerlink" title="运行状态"></a>运行状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看chrony是否同步了，使用:</span></span><br><span class="line">[root@localhost ~]<span class="comment"># chronyc tracking</span></span><br><span class="line">Reference ID    : 8BC7D7FB (139.199.215.251)</span><br><span class="line">Stratum         : 3</span><br><span class="line">Ref time (UTC)  : Mon Jun 26 09:09:14 2023</span><br><span class="line">System time     : 0.000000000 seconds slow of NTP time</span><br><span class="line">Last offset     : +0.002171177 seconds</span><br><span class="line">RMS offset      : 0.002171177 seconds</span><br><span class="line">Frequency       : 9.825 ppm slow</span><br><span class="line">Residual freq   : +375.632 ppm</span><br><span class="line">Skew            : 0.141 ppm</span><br><span class="line">Root delay      : 0.046032190 seconds</span><br><span class="line">Root dispersion : 0.015947687 seconds</span><br><span class="line">Update interval : 0.0 seconds</span><br><span class="line">Leap status     : Normal</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示时间服务器信息</span></span><br><span class="line">chronyc sources</span><br><span class="line"><span class="comment"># 显示漂移信息</span></span><br><span class="line">chronyc sourcestats</span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">systemctl stop chronyd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> NTP </category>
          
          <category> 校时 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> NTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vCenter虚拟机迁移问题</title>
      <link href="/exsi_vCenter_remove/"/>
      <url>/exsi_vCenter_remove/</url>
      
        <content type="html"><![CDATA[<p><strong>VCSA迁移虚拟机</strong><br>可使用热迁移或冷迁移将虚拟机从一个主机或存储位置移至另一位置，可使用 vMotion 将已打开电源的虚拟机从主机上移开，以便执行维护、平衡负载、并置相互通信的虚拟机、将多个虚拟机分离以最大限度地减少故障域、迁移到新服务器硬件等等。</p><p><strong>冷迁移</strong> 您可将已关闭电源或已挂起的虚拟机移至新主机。您可选择将已关闭电源或已挂起虚拟机的配置文件和磁盘文件重定位到新的存储位置。您也可使用冷迁移将虚拟机从一个数据中心移至另一个数据中心。要执行冷迁移，您可手动移动虚拟机或设置调度的任务。</p><p><strong>热迁移</strong> 根据您使用的迁移类型是 vMotion 还是 Storage vMotion，您可以将打开的虚拟机迁移到其他主机，或者将其磁盘或文件夹迁移到其他数据存储，而不破坏虚拟机的可用性。vMotion 也称为“实时迁移”或“热迁移”。</p><p>一般来讲，冷迁移速度更快。</p><p>您不能在不同的数据中心之间移动已打开电源的虚拟机。<br>注： 复制虚拟机是指创建新的虚拟机，并不是迁移形式。通过克隆虚拟机或复制其磁盘和配置文件可以创建新的虚拟机，克隆并不是迁移的一种形式。</p><h1 id="冷迁移"><a href="#冷迁移" class="headerlink" title="冷迁移"></a>冷迁移</h1><p>冷迁移即虚拟机关机进行迁移，一般冷迁移的速度更快。</p><h1 id="热迁移"><a href="#热迁移" class="headerlink" title="热迁移"></a>热迁移</h1><p>热迁移即虚拟机不关机，保持服务的情况下进行迁移，但是有时候会遇到CPU内核版本不兼容的情况，需要特殊处理。</p><h2 id="不同CPU迁移问题"><a href="#不同CPU迁移问题" class="headerlink" title="不同CPU迁移问题"></a>不同CPU迁移问题</h2><p>参考：<a href="https://blog.51cto.com/xiaoyuanzheng/5611330">https://blog.51cto.com/xiaoyuanzheng/5611330</a><br>在esxi 6.7以前的版本，有一句话，叫做vm要在线迁移要保证cpu型号是一致的，不然没办法进行迁移。这个对于多次购买不同型号服务器的机器来说是很痛苦的。<br>所以vmware从6.7版本开始支持跨cpu进行热迁移了，只需要开启一个叫evc的功能。（6.7以前没这个功能）<br>PS:如果你的vm版本是低于6.7的怎么办？答：把vm迁移到esxi 6.7或后面的版本，然后右键vm——兼容性——升级虚拟机兼容性，升级上去就行了。<br>创建一个集群，开启EVC 选择 Intel® “Westmere” Generation（具体看各自情况，兼容不同CPU，选择也不同，多试试几个）<br><img src="https://qiufuqi.github.io/img/hexo/20230410142135.png"></p><p>服务器加入VMware集群或启用EVC时报错CPU缺少必要的功能<br>故障现象：<br>服务器加入集群或启用EVC模式时，报错：<br>主机的CPU硬件应支持集群当前的增强型vMotion兼容性模式，但主机现在缺少某些必要的CPU功能。请检查主机的BIOS配置，确保未禁用必要的功能（例如Intel的XD、VT、AES或PCLMULQDQ，或者AMD的NX）<br><img src="https://qiufuqi.github.io/img/hexo/20230410151027.png"><br>vMotion功能还依赖于Mwait，然而2017年4月8号之后生产的通用双路M4机器已经默认关闭了此功能，请开启。<br>Socket Configuration =&gt; IIO Configuration =&gt; Monitor/Mwait Support<br>另外，打开Mwait后相当于服务器启用了休眠功能，请登录到Vmware系统下，将电源选项设置为高性能模式。<br><img src="https://qiufuqi.github.io/img/hexo/20231205115139.png"><br><a href="http://www.4008600011.com/archives/419#10_VMwareEVCCPU">参考</a></p><h2 id="安全策略问题"><a href="#安全策略问题" class="headerlink" title="安全策略问题"></a>安全策略问题</h2><p>错误信息如下：”当前已连接的网络接口”“Network adapter 1”无法使用网络“xxxx”，因为 “在目标主机上为目标网络配置的卸载或安全策略不同于在源主机上为源网络配置的卸载或安全策略”。<br><img src="https://qiufuqi.github.io/img/hexo/20230410100719.png"><br>解决办法：<br>1、确认迁移网络vMotion所对应的虚拟交换机<br><img src="https://qiufuqi.github.io/img/hexo/20230410100736.png"><br>2、找到对应交换机打开点编辑设置，打开安全，在MAC地址更改和伪传输设置成接受。然后点保存即可<br><img src="https://qiufuqi.github.io/img/hexo/20230410100757.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
          <category> 迁移 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cisco交换机常用命令</title>
      <link href="/cisco_bash/"/>
      <url>/cisco_bash/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/lzl10211345/article/details/126892519">https://blog.csdn.net/lzl10211345/article/details/126892519</a></p><p>VLAN（Virtual Local Area Network）的中文名为”虚拟局域网”。<br>虚拟局域网（VLAN）是一组逻辑上的设备和用户，这些设备和用户并不受物理位置的限制，可以根据功能、部门及应用等因素将它们组织起来，相互之间的通信就好像它们在同一个网段中一样，由此得名虚拟局域网。VLAN是一种比较新的技术，工作在OSI参考模型的第2层和第3层，一个VLAN就是一个广播域，VLAN之间的通信是通过第3层的路由器来完成的。与传统的局域网技术相比较，VLAN技术更加灵活，它具有以下优点： 网络设备的移动、添加和修改的管理开销减少；可以控制广播活动；可提高网络的安全性。<br>在计算机网络中，一个二层网络可以被划分为多个不同的广播域，一个广播域对应了一个特定的用户组，默认情况下这些不同的广播域是相互隔离的。不同的广播域之间想要通信，需要通过一个或多个路由器。这样的一个广播域就称为VLAN。<br><img src="https://qiufuqi.github.io/img/hexo/20230325141235.png"></p><p><strong>VLAN的号码范围：</strong><br>1        默认<br>2-1001        正常<br>1025-4094    扩展</p><h1 id="交换机基本命令"><a href="#交换机基本命令" class="headerlink" title="交换机基本命令"></a>交换机基本命令</h1><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Switch<span class="comment"># enable              # 进入特许模式</span></span><br><span class="line">Switch<span class="comment"># exit end            # 退出</span></span><br><span class="line">Switch<span class="comment"># write               # 保存</span></span><br><span class="line">Switch<span class="comment"># no *********        # 删除某条命令</span></span><br><span class="line">Switch<span class="comment"># no shutdown         # 启用某个端口</span></span><br></pre></td></tr></table></figure><p><a href="https://jingyan.baidu.com/article/6c67b1d6bdce8d2787bb1e99.html">https://jingyan.baidu.com/article/6c67b1d6bdce8d2787bb1e99.html</a></p><h3 id="交换机端口信息"><a href="#交换机端口信息" class="headerlink" title="交换机端口信息"></a>交换机端口信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看端口配置信息</span></span><br><span class="line">Switch<span class="comment"># sh run                     [show running-config]</span></span><br><span class="line">Switch<span class="comment"># sh run int f0/1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口详细信息</span></span><br><span class="line">Switch<span class="comment"># sh int                     [show interfaces]           # 查看所有端口的详细状态信息</span></span><br><span class="line">Switch<span class="comment"># sh int f0/1                [show interfaces f0/1]      # 查看单一端口的详细状态信息</span></span><br><span class="line"></span><br><span class="line">Switch<span class="comment"># sh int status              [show interfaces status]    # 查看端口的简要状态信息</span></span><br><span class="line">Switch<span class="comment"># sh ip int b                [show ip interface brief]  # 查看端口的简要状态信息</span></span><br><span class="line">Switch<span class="comment"># sh int f0/1 status         [show interfaces f0/1 status] # 查看端口的简要信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Switch<span class="comment"># sh access                  [show access-lists] # 查看访问列表配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TCP/IP协议相关命令</span></span><br><span class="line">Switch<span class="comment"># show ip access-lists 35    #显示IP访问列表（1-199）</span></span><br><span class="line">Show ip arp                        <span class="comment">#显示路由器的ARP缓存（IP、MAC、封装类型、接口）</span></span><br><span class="line">Show ip protocols                  <span class="comment">#显示运行在路由器上的IP路由协议的信息</span></span><br><span class="line">Show ip route                      <span class="comment">#显示IP路由表中的信息</span></span><br><span class="line">Show ip traffic                    <span class="comment">#显示IP流量统计信息</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="三层交换机端口"><a href="#三层交换机端口" class="headerlink" title="三层交换机端口"></a>三层交换机端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路由器或者三层交换机 设置网关 用于通信</span></span><br><span class="line">Switch(config)<span class="comment"># ip routing                                   # 启动三层交换机路由功能</span></span><br><span class="line">Switch(config)<span class="comment"># interface vlan 1                            # 添加设置关联Vlan号为1的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.10.1 255.255.255.0    # 为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no ip address 192.168.10.1 255.255.255.0 # 删除为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              # 启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># exit</span></span><br></pre></td></tr></table></figure><h3 id="路由器子端口"><a href="#路由器子端口" class="headerlink" title="路由器子端口"></a>路由器子端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路由器开启子端口，并设置IP</span></span><br><span class="line">Router&gt; <span class="built_in">enable</span></span><br><span class="line">Router<span class="comment"># configure terminal</span></span><br><span class="line">Router(config)<span class="comment"># interface FastEthernet 0/0</span></span><br><span class="line">Router(config-if)<span class="comment"># no shutdown                                  # 启动Fa0/0端口</span></span><br><span class="line"><span class="comment"># 添加设置Fa0/0端口的子端口Fa0/0.1，同理Fa0/1端口的子端口可以为Fa0/1.1，Fa0/0.6等</span></span><br><span class="line">Router(config-if)<span class="comment"># interface FastEthernet 0/0.1                 </span></span><br><span class="line"><span class="comment"># 对该子端口Fa0/0.1进行802.1q协议的封装，后面的数字 1 代表是的侦听VLAN号为 1 的传输数据</span></span><br><span class="line">Router(config-subif)<span class="comment"># encapsulation dot1Q 1</span></span><br><span class="line">Router(config-subif)<span class="comment"># ip address 192.168.10.1 255.255.255.0     # 设置该子端口Fa0/0.1的IP和子网掩码</span></span><br><span class="line">Router(config-subif)<span class="comment">#no shutdown</span></span><br><span class="line">Router(config-subif)<span class="comment"># end                                       # 完成设置退出</span></span><br><span class="line">Router<span class="comment"># show ip route                                           # 查看路由信息</span></span><br></pre></td></tr></table></figure><h2 id="VLAN相关"><a href="#VLAN相关" class="headerlink" title="VLAN相关"></a>VLAN相关</h2><h3 id="创建VLAN"><a href="#创建VLAN" class="headerlink" title="创建VLAN"></a>创建VLAN</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入VLAN数据库，创建VLAN (老型号交换机)</span></span><br><span class="line">Switch<span class="comment"># vlan database 或 vlan data     # 进入vlan列表 </span></span><br><span class="line">Switch(vlan)<span class="comment"># vlan 10 name IT          # 划分VLAN 10，名称为IT </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局配置模式下：(新型号交换机)</span></span><br><span class="line">Switch<span class="comment">#conf t                          # 进入配置模式</span></span><br><span class="line">Switch(config)<span class="comment">#vlan 11                 # 进入vlan 没有则创建</span></span><br><span class="line">Switch(config-vlan)<span class="comment">#name caiwu         # 命名vlan</span></span><br></pre></td></tr></table></figure><h3 id="查看VLAN"><a href="#查看VLAN" class="headerlink" title="查看VLAN"></a>查看VLAN</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Switch<span class="comment"># show vlan            # 查看所有vlan信息</span></span><br><span class="line">Switch<span class="comment"># show vlan brief      # 查看摘要</span></span><br><span class="line">Switch<span class="comment">#show vlan id 1        # 只查看vlan 1 的信息</span></span><br></pre></td></tr></table></figure><h3 id="删除VLAN"><a href="#删除VLAN" class="headerlink" title="删除VLAN"></a>删除VLAN</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在VLAN数据库模式下</span></span><br><span class="line">switch<span class="comment"># vlan database</span></span><br><span class="line">Switch(vlan)<span class="comment">#no vlan 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局配置模式下</span></span><br><span class="line">Switch<span class="comment">#conf t</span></span><br><span class="line">Switch(config)<span class="comment">#no vlan 10</span></span><br></pre></td></tr></table></figure><h3 id="端口加入VLAN"><a href="#端口加入VLAN" class="headerlink" title="端口加入VLAN"></a>端口加入VLAN</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单个端口加入vlan</span></span><br><span class="line">Switch<span class="comment">#conf t</span></span><br><span class="line">Switch(config)<span class="comment">#int f0/1</span></span><br><span class="line">Switch(config-if)<span class="comment">#switchport access vlan 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多个端口加入vlan</span></span><br><span class="line">Switch<span class="comment">#conf t</span></span><br><span class="line">Switch(config)<span class="comment">#int range f0/1-f0/10</span></span><br><span class="line">Switch(config-if-range)<span class="comment">#switchport access vlan 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原接口为默认配置</span></span><br><span class="line">Switch(config)<span class="comment">#default int f0/1</span></span><br></pre></td></tr></table></figure><h3 id="端口删除VLAN"><a href="#端口删除VLAN" class="headerlink" title="端口删除VLAN"></a>端口删除VLAN</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单个端口退出vlan</span></span><br><span class="line">Switch<span class="comment">#conf t</span></span><br><span class="line">Switch(config-if)<span class="comment">#no switchport access vlan 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多个端口退出vlan</span></span><br><span class="line">Switch<span class="comment">#conf t</span></span><br><span class="line">Switch(config)<span class="comment">#int range f0/1-f0/10</span></span><br><span class="line">Switch(config-if-range)<span class="comment">#no switchport access vlan 10</span></span><br></pre></td></tr></table></figure><h2 id="接口模式"><a href="#接口模式" class="headerlink" title="接口模式"></a>接口模式</h2><p>以太网端口的链路类型有三种：</p><ul><li>Access 类型：端口只能属于1 个VLAN，一般用于交换机与终端用户之间的连接；</li><li>Trunk 类型：端口可以属于多个VLAN，可以接收和发送多个VLAN 的报文，一般用于交换机 之间的连接；</li></ul><p><strong>思科所有的trunk链路默认是允许所有vlan通过。</strong><br>Trunk标签协议：<br>ISL:        思科私有标准，仅限于纯思科交换机环境，标签占30字节<br>802.1q: dot1q   通用标准，任何品牌交换机都可使用，标签只占4字节</p><h3 id="接口设置trunk"><a href="#接口设置trunk" class="headerlink" title="接口设置trunk"></a>接口设置trunk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Switch<span class="comment">#conf t</span></span><br><span class="line">Switch(config)<span class="comment">#int f0/1</span></span><br><span class="line">Switch(config-if)<span class="comment">#switchport mode trunk </span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">Switch(config-if)<span class="comment">#sw m t</span></span><br></pre></td></tr></table></figure><h3 id="查看接口模式"><a href="#查看接口模式" class="headerlink" title="查看接口模式"></a>查看接口模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Switch<span class="comment">#sh int f0/1 sw</span></span><br><span class="line">Switch<span class="comment">#show int f0/1 switchport</span></span><br></pre></td></tr></table></figure><h3 id="端口不放行vlan"><a href="#端口不放行vlan" class="headerlink" title="端口不放行vlan"></a>端口不放行vlan</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment">#int  f0/1</span></span><br><span class="line">switch(config-if)<span class="comment">#switchport trunk allowed vlan remove 10</span></span><br></pre></td></tr></table></figure><h3 id="端口放行vlan"><a href="#端口放行vlan" class="headerlink" title="端口放行vlan"></a>端口放行vlan</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">switch(config)<span class="comment">#int  f0/1</span></span><br><span class="line">switch(config-if)<span class="comment">#switchport trunk allowed vlan add 10</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">switch(config-if)<span class="comment">#switchport trunk allowed vlan 10</span></span><br><span class="line"><span class="comment"># 全部放行</span></span><br><span class="line">switch(config-if)<span class="comment">#switchport trunk allowed vlan all</span></span><br></pre></td></tr></table></figure><p>cisco常用交换机命令</p><h1 id="二层交换机"><a href="#二层交换机" class="headerlink" title="二层交换机"></a>二层交换机</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; <span class="built_in">enable</span>                                  //进入特权模式</span><br><span class="line">Switch<span class="comment"># vlan database                           //进入vlan数据库</span></span><br><span class="line">Switch(vlan)<span class="comment"># vlan 2                            //添加一个vlan，vlan号为 2 。默认所有端口处于vlan 1 ，因此本例子只需添加添加 vlan 2</span></span><br><span class="line">Switch(vlan)<span class="comment"># exit                              //退出 vlan数据库</span></span><br><span class="line">Switch<span class="comment"># configure terminal                      //进入全局配置模式</span></span><br><span class="line">Switch(config)<span class="comment"># interface FastEthernet 0/2      //进入端口Fa0/2设置</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport access vlan 2     //设置端口Fa0/2处于vlan 2，默认所有端口处于vlan 1 ，所以本实例不用对端口Fa0/1设置vlan</span></span><br><span class="line">Switch(config-if)<span class="comment"># exit                         //退出端口Fa0/2设置</span></span><br><span class="line">Switch(config)<span class="comment"># interface FastEthernet 0/3      //进入端口Fa0/3设置</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport access vlan 2     //设置端口Fa0/3处于vlan 2</span></span><br><span class="line">Switch(config-if)<span class="comment"># end                          //设置完成退出</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                  //启用某个端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.20.1 255.255.255.0          //设置端口IP地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Switch&gt; <span class="built_in">enable</span></span><br><span class="line">Switch<span class="comment"># configure terminal</span></span><br><span class="line">Switch(config)<span class="comment"># interface FastEthernet 0/24             //Fa0/24端口连接路由器</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport mode trunk                //设置该端口vlan模式为trunk</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport trunk allowed vlan all    //设置该端口trunk模式下接收所有vlan线路的信息</span></span><br><span class="line">Switch(config-if)<span class="comment"># end                                  //完成设置退出</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Router&gt; <span class="built_in">enable</span></span><br><span class="line">Router<span class="comment"># configure terminal</span></span><br><span class="line">Router(config)<span class="comment"># interface FastEthernet 0/0</span></span><br><span class="line">Router(config-if)<span class="comment"># no shutdown                                  //启动Fa0/0端口</span></span><br><span class="line"> </span><br><span class="line">Router(config-if)<span class="comment"># interface FastEthernet 0/0.1                 //添加设置Fa0/0端口的子端口Fa0/0.1</span></span><br><span class="line">                                                                //同理Fa0/1端口的子端口可以为Fa0/1.1，Fa0/0.6等</span><br><span class="line"> </span><br><span class="line">Router(config-subif)<span class="comment"># encapsulation dot1Q 1                     //对该子端口Fa0/0.1进行802.1q协议的封装</span></span><br><span class="line">                                                                //后面的数字 1 代表是的侦听VLAN号为 1 的传输数据</span><br><span class="line"> </span><br><span class="line">Router(config-subif)<span class="comment"># ip address 192.168.10.1 255.255.255.0     //设置该子端口Fa0/0.1的IP和子网掩码</span></span><br><span class="line">Router(config-subif)<span class="comment">#no shutdown                                //启动该子端口</span></span><br><span class="line"> </span><br><span class="line">Router(config-if)<span class="comment"># interface FastEthernet 0/0.2                 //添加设置Fa0/0端口的子端口Fa0/0.2</span></span><br><span class="line">Router(config-subif)<span class="comment"># encapsulation dot1Q 2                     //对该子端口Fa0/0.2进行802.1q协议的封装</span></span><br><span class="line"> </span><br><span class="line">Router(config-subif)<span class="comment"># ip address 192.168.20.1 255.255.255.0     //设置该子端口Fa0/0.2的IP和子网掩码</span></span><br><span class="line">Router(config-subif)<span class="comment"># no shutdown                               //启动该子端口</span></span><br><span class="line"> </span><br><span class="line">Router(config-subif)<span class="comment"># end                                       //完成设置退出</span></span><br><span class="line">Router<span class="comment"># show ip route                                           //查看路由信息</span></span><br><span class="line"> </span><br><span class="line">Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP</span><br><span class="line">       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area</span><br><span class="line">       N1 - OSPF NSSA external <span class="built_in">type</span> 1, N2 - OSPF NSSA external <span class="built_in">type</span> 2</span><br><span class="line">       E1 - OSPF external <span class="built_in">type</span> 1, E2 - OSPF external <span class="built_in">type</span> 2, E - EGP</span><br><span class="line">       i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area</span><br><span class="line">       * - candidate default, U - per-user static route, o - ODR</span><br><span class="line">       P - periodic downloaded static route</span><br><span class="line"> </span><br><span class="line">Gateway of last resort is not <span class="built_in">set</span></span><br><span class="line"> </span><br><span class="line">C    192.168.10.0/24 is directly connected, FastEthernet0/0.1</span><br><span class="line">C    192.168.20.0/24 is directly connected, FastEthernet0/0.2   </span><br></pre></td></tr></table></figure><h1 id="三层交换机"><a href="#三层交换机" class="headerlink" title="三层交换机"></a>三层交换机</h1><p>普通交换机没有路由功能，而三层交换机可以看作普通交换机和路由器合二为一的机器。<br>因此<strong>三层交换机具有路由功能，而且三层交换机的端口是vlan端口</strong>。</p><p>主机——三层交换机——主机<br><img src="https://qiufuqi.github.io/img/hexo/20230325141347.png"></p><p>三层交换机增加vlan和对主机的vlan划分部分<br>创建vlan 并 将端口划分至指定vlan下 （参考上面）；启用三层交换机的路由功能<br>ip routing</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; <span class="built_in">enable</span></span><br><span class="line">Switch<span class="comment"># configure terminal</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment">#ip routing                                   //启动三层交换机路由功能</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 1                            //添加设置关联Vlan号为1的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.10.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># exit                                     //退出该端口</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 2                            //添加设置关联Vlan号为2的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.20.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># exit                                     //退出该端口</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 3                            //添加设置关联Vlan号为3的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.30.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># end                                      //完成退出</span></span><br><span class="line"> </span><br><span class="line">Switch<span class="comment"># show ip route                                       //查看路由信息</span></span><br><span class="line"> </span><br><span class="line">Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP</span><br><span class="line">       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area</span><br><span class="line">       N1 - OSPF NSSA external <span class="built_in">type</span> 1, N2 - OSPF NSSA external <span class="built_in">type</span> 2</span><br><span class="line">       E1 - OSPF external <span class="built_in">type</span> 1, E2 - OSPF external <span class="built_in">type</span> 2, E - EGP</span><br><span class="line">       i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area</span><br><span class="line">       * - candidate default, U - per-user static route, o - ODR</span><br><span class="line">       P - periodic downloaded static route</span><br><span class="line"> </span><br><span class="line">Gateway of last resort is not <span class="built_in">set</span></span><br><span class="line"> </span><br><span class="line">C    192.168.10.0/24 is directly connected, Vlan1</span><br><span class="line">C    192.168.20.0/24 is directly connected, Vlan2</span><br><span class="line">C    192.168.30.0/24 is directly connected, Vlan3</span><br></pre></td></tr></table></figure><p>主机——交换机——三层交换机——交换机——主机<br>普通交换机添加vlan和对主机vlan划分部分省略。<br>若普通交换机连接三层交换机的端口已设置vlan模式为trunk，连接三层交换机后，三层交换机连接普通交换机的端口其模式会自动设置为trunk。<br><img src="https://qiufuqi.github.io/img/hexo/20230325144531.png"></p><p>二层交换机设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; <span class="built_in">enable</span></span><br><span class="line">Switch<span class="comment"># configure terminal</span></span><br><span class="line">Switch(config)<span class="comment"># interface FastEthernet 0/24</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport mode trunk        //设置Fa0/24端口vlan模式为trunk</span></span><br><span class="line">Switch(config-if)<span class="comment">#end</span></span><br></pre></td></tr></table></figure><p>三层交换机设置 和前面类似</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; <span class="built_in">enable</span></span><br><span class="line">Switch<span class="comment">#vlan database</span></span><br><span class="line">Switch(vlan)<span class="comment"># vlan 2                                        //添加vlan 2</span></span><br><span class="line">Switch(vlan)<span class="comment"># exit</span></span><br><span class="line"> </span><br><span class="line">Switch<span class="comment"># configure terminal</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment">#ip routing                                   //启动三层交换机路由功能</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 1                            //添加设置关联Vlan号为1的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.10.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># exit                                     //退出该端口</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 2                            //添加设置关联Vlan号为2的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.20.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># end                                      //退出该端口</span></span><br><span class="line"> </span><br><span class="line">Switch<span class="comment"># show ip route                                       //查看路由信息</span></span><br><span class="line"> </span><br><span class="line">Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP</span><br><span class="line">       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area</span><br><span class="line">       N1 - OSPF NSSA external <span class="built_in">type</span> 1, N2 - OSPF NSSA external <span class="built_in">type</span> 2</span><br><span class="line">       E1 - OSPF external <span class="built_in">type</span> 1, E2 - OSPF external <span class="built_in">type</span> 2, E - EGP</span><br><span class="line">       i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area</span><br><span class="line">       * - candidate default, U - per-user static route, o - ODR</span><br><span class="line">       P - periodic downloaded static route</span><br><span class="line"> </span><br><span class="line">Gateway of last resort is not <span class="built_in">set</span></span><br><span class="line"> </span><br><span class="line">C    192.168.10.0/24 is directly connected, Vlan1</span><br><span class="line">C    192.168.20.0/24 is directly connected, Vlan2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 交换机 </category>
          
          <category> Cisco </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交换机 </tag>
            
            <tag> Cisco </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为交换机常用命令</title>
      <link href="/huawei_bash/"/>
      <url>/huawei_bash/</url>
      
        <content type="html"><![CDATA[<p><a href="https://support.huawei.com/enterprise/zh/doc/EDOC1100211667/89a467d2">华为官方参考</a></p><h1 id="视图分类"><a href="#视图分类" class="headerlink" title="视图分类"></a>视图分类</h1><h2 id="进入命令行"><a href="#进入命令行" class="headerlink" title="进入命令行"></a>进入命令行</h2><table><thead><tr><th align="left">常用视图名称</th><th align="left">进入视图</th><th align="left">视图功能</th></tr></thead><tbody><tr><td align="left">用户视图</td><td align="left">用户从终端成功登录至设备即进入用户视图</td><td align="left">在用户视图下，用户可以完成查看运行状态和统计信息等功能。</td></tr><tr><td align="left">系统视图</td><td align="left">在用户视图下，输入命令system-view后回车，进入系统视图。</td><td align="left">在系统视图下，用户可以配置系统参数以及通过该视图进入其他的功能配置视图。</td></tr><tr><td align="left">接口视图</td><td align="left">使用interface命令并指定接口类型及接口编号可以进入相应的接口视图。</td><td align="left">配置接口参数的视图称为接口视图。在该视图下可以配置接口相关的物理属性、链路层特性及IP地址等重要参数。</td></tr><tr><td align="left">WLAN视图</td><td align="left">在系统视图下，输入命令wlan后回车，进入WLAN视图。</td><td align="left">无线局域网WLAN（Wireless Local Area Network）的大部分参数是在WLAN视图下进行配置的。</td></tr></tbody></table><h2 id="退出命令行"><a href="#退出命令行" class="headerlink" title="退出命令行"></a>退出命令行</h2><p>执行quit命令，即可从当前视图退出至上一层视图。<br>如果需要从接口视图直接退回到用户视图，则可以在键盘上键入组合键&lt;Ctrl+Z&gt;或者执行return命令。</p><h1 id="基础命令配置"><a href="#基础命令配置" class="headerlink" title="基础命令配置"></a>基础命令配置</h1><h2 id="命名功能"><a href="#命名功能" class="headerlink" title="命名功能"></a>命名功能</h2><p>sysname host-name<br>undo sysname  缺省情况下，设备主机名为HUAWEI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]sysname 3f-huiju</span><br><span class="line">[3f-huiju]</span><br></pre></td></tr></table></figure><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">display version         <span class="comment"># 查看基本信息</span></span><br><span class="line">display interface g0/0/0    <span class="comment"># 查看接口信息</span></span><br><span class="line">dis ip int brief      <span class="comment"># 查看全部接口ip简要信息</span></span><br><span class="line">dis cur   <span class="comment"># 查看当前配置</span></span><br><span class="line">dis saved-configuration   <span class="comment"># 查看保存的配置</span></span><br><span class="line">save    <span class="comment"># 保存配置</span></span><br><span class="line">reboot   <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure><h2 id="创建vlan"><a href="#创建vlan" class="headerlink" title="创建vlan"></a>创建vlan</h2><p>vlan batch是批量创建VLAN的命令<br>vlan batch 1 to 100，这条命令的意思就是创建vlan 1-100这100个vlan，<br>vlan batch 1 100，这条命令的意思就是创建vlan 1和vlan100这两个vlan，</p><h2 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h2><p>远程登录又称为telnet   使用tcp（传输控制协议）的23端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 视图模式下</span></span><br><span class="line">dis user-interface</span><br><span class="line">&lt;Huawei&gt;system-view      <span class="comment">#进入系统视图</span></span><br><span class="line">[Huawei]telnet server <span class="built_in">enable</span>     <span class="comment">#使能设备的远程登录 （不能缺少此命令）</span></span><br><span class="line">[Huawei]user-interface vty 0 4   <span class="comment">#进入vty控制台  0  4 代表最多可以同时登录5个用户</span></span><br></pre></td></tr></table></figure><h3 id="密码认证"><a href="#密码认证" class="headerlink" title="密码认证"></a>密码认证</h3><p>authentication-mode  password<br>[Huawei-ui-vty0-4]authentication-mode  password     #设置认证方式为密码认证<br>[Huawei-ui-vty0-4]set authentication password cipher（表示通过密文加密）/simple（表示通过明文加密）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过密文加密的形式----交换机</span></span><br><span class="line">[Huawei-ui-vty0-4]<span class="built_in">set</span> authentication password cipher  huawei  <span class="comment">#设置密码为密文加密为huawei  </span></span><br><span class="line">[Huawei-ui-vty0-4]dis this  <span class="comment">#查看当前视图的当前配置</span></span><br><span class="line">user-interface con 0</span><br><span class="line">user-interface vty 0 4</span><br><span class="line"> <span class="built_in">set</span> authentication password cipher ^!&gt;_7p<span class="string">&#x27;:$U^QW:LZJi;=-zE#            ###不能通过命令行查看密码（密码huawei通过加密算法转变为 ^!&gt;_7p&#x27;</span>:<span class="variable">$U</span>^QW:LZJi;=-zE<span class="comment">#；）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过明文加密的形式 </span></span><br><span class="line">[Huawei-ui-vty0-4]<span class="built_in">set</span> authentication password  simple  huawei   <span class="comment">#明文加密方式，密码为huawei</span></span><br><span class="line">[Huawei-ui-vty0-4]display  this    <span class="comment">#查看当前视图的当前配置</span></span><br><span class="line">user-interface con 0        <span class="comment"># 配置console口</span></span><br><span class="line">user-interface vty 0 4</span><br><span class="line"> <span class="built_in">set</span> authentication password simple huawei        密码为明文的huawei</span><br></pre></td></tr></table></figure><h3 id="不认证方式"><a href="#不认证方式" class="headerlink" title="不认证方式"></a>不认证方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;system-view      <span class="comment">#进入系统视图</span></span><br><span class="line">[Huawei]user-interface vty 0 4</span><br><span class="line">[Huawei-ui-vty0-4]authentication-mode none    <span class="comment">#设置认证方式为不认证</span></span><br></pre></td></tr></table></figure><h3 id="验证登录"><a href="#验证登录" class="headerlink" title="验证登录"></a>验证登录</h3><p>验证远程登录的配置是否成功<br>退出到用户视图下<br>输入telnet 127.0.0.1 ，即可测试本机的远程登录是否配置成功<br>telnet 127.0.0.1,按下回车以后<br>此次视图为远程登录到设备的视图，输入quit退出至原设备</p><p>注意：<strong>需要设置远程登录用户的优先级，否则会出现报错信息</strong><br>user privilege level 15  # user privilege level 3 //访问权限为3，若无设置则telnet可连接R2，但有权限限制<br>protocol inbound telnet<br>例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">Error: Unrecognized <span class="built_in">command</span> found at <span class="string">&#x27;^&#x27;</span> position.</span><br><span class="line"></span><br><span class="line">此时需要到退出至设备中进行设置优先级别</span><br><span class="line"></span><br><span class="line">&lt;Huawei&gt;q     <span class="comment">#先退出至原设备</span></span><br><span class="line">Info: The max number of VTY <span class="built_in">users</span> is 5, and the number</span><br><span class="line">      of current VTY <span class="built_in">users</span> on line is 0.</span><br><span class="line">Info: The connection was closed by the remote host.</span><br><span class="line">&lt;Huawei&gt;</span><br><span class="line"></span><br><span class="line">&lt;Huawei&gt;sys</span><br><span class="line">Enter system view, <span class="built_in">return</span> user view with Ctrl+Z.     <span class="comment">#此时可以正常进入系统视图</span></span><br><span class="line">[Huawei]user-interface vty  0 4      <span class="comment">#需要进入远程登录控制台中设置</span></span><br><span class="line">[Huawei-ui-vty0-4]user privilege level 15    <span class="comment">#设置优先级为最高15   范围为0-15  </span></span><br><span class="line">[Huawei-ui-vty0-4]protocol inbound telnet     <span class="comment">#在ensp中可以省略此命令，在真实环境需要输入，即登录的协议为telnet</span></span><br></pre></td></tr></table></figure><h2 id="时间设置"><a href="#时间设置" class="headerlink" title="时间设置"></a>时间设置</h2><p>用户视图下<br>clock timezone time-zone-name { add | minus } offset<br>undo clock timezone</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;clock timezone Beijing,Chongqing,Hongkon,Urumqi add 08:00:00</span><br><span class="line">&lt;Huawei&gt;display clock</span><br><span class="line">2023-05-13 06:34:23+08:00</span><br><span class="line">Saturday</span><br><span class="line">Time Zone(Beijing,Chongqing,Hongkon,Urumqi) : UTC+08:00</span><br></pre></td></tr></table></figure><h2 id="查询接口列表"><a href="#查询接口列表" class="headerlink" title="查询接口列表"></a>查询接口列表</h2><p>display interface brief</p><h2 id="关闭监控"><a href="#关闭监控" class="headerlink" title="关闭监控"></a>关闭监控</h2><p>每次更改了什么配置都会显示出来，影响调试。可以使用下面的命令关闭掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;undo terminal monitor</span><br><span class="line">&lt;Huawei&gt;u t m</span><br></pre></td></tr></table></figure><h2 id="进入接口"><a href="#进入接口" class="headerlink" title="进入接口"></a>进入接口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int g0/0/1</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]</span><br></pre></td></tr></table></figure><h2 id="退出接口"><a href="#退出接口" class="headerlink" title="退出接口"></a>退出接口</h2><p>输入q 或者 quit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]q</span><br></pre></td></tr></table></figure><h1 id="创建vlan并加入"><a href="#创建vlan并加入" class="headerlink" title="创建vlan并加入"></a>创建vlan并加入</h1><h2 id="创建vlan-1"><a href="#创建vlan-1" class="headerlink" title="创建vlan"></a>创建vlan</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建vlan后会自动进入该vlan</span></span><br><span class="line">[Huawei]vlan 10</span><br><span class="line">[Huawei-vlan10]q</span><br><span class="line"><span class="comment"># 批量创建vlan </span></span><br><span class="line">[Huawei]vlan batch 3 to 10</span><br><span class="line">Info: This operation may take a few seconds. Please <span class="built_in">wait</span> <span class="keyword">for</span> a moment...done.</span><br><span class="line">[Huawei]</span><br></pre></td></tr></table></figure><h2 id="删除vlan"><a href="#删除vlan" class="headerlink" title="删除vlan"></a>删除vlan</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">undo vlan 10</span><br></pre></td></tr></table></figure><h2 id="更改端口类型"><a href="#更改端口类型" class="headerlink" title="更改端口类型"></a>更改端口类型</h2><p>由于华为交换机的端口出厂时默认都是hybrid类型或auto类型的，所以无法立即加入vlan，需要更改端口的link-type后，才可以加入vlan。单个端口更改方式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int g0/0/1</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]port link-type access</span><br><span class="line">[Huawei-GigabitEthernet0/0/1]description xxxxxx 描述</span><br></pre></td></tr></table></figure><ul><li>Access 类型：端口只能属于1 个VLAN，一般用于交换机与终端用户之间的连接；</li><li>Trunk 类型：端口可以属于多个VLAN，可以接收和发送多个VLAN 的报文，一般用于交换机 之间的连接；</li><li>Hybrid 类型：端口可以属于多个VLAN，可以接收和发送多个VLAN 的报文，可以用于交换 机之间连接，也可以用于连接用户的计算机。Hybrid 端口可以允许多个VLAN 的报文发送时不携带标签，而Trunk 端口只允许缺省VLAN 的报文，发送时不携带标签<h2 id="端口加入vlan"><a href="#端口加入vlan" class="headerlink" title="端口加入vlan"></a>端口加入vlan</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Huawei-GigabitEthernet0/0/1]port default vlan 10</span><br></pre></td></tr></table></figure><h2 id="批量端口加入vlan"><a href="#批量端口加入vlan" class="headerlink" title="批量端口加入vlan"></a>批量端口加入vlan</h2>原理就是创建一个端口组，把要更改的端口加入到端口组中，然后统一更改类型加入vlan。也可以理解为群组端口，统一配置类型加入vlan<br>批量更改，先更改端口类型，再统一加入某个vlan，如下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建端口组名并自动进入端口组 将1-10口放在组里</span></span><br><span class="line">[Huawei]port-group pokes</span><br><span class="line">[Huawei-port-group-pokes]group-member e0/0/1 to e0/0/10</span><br><span class="line"></span><br><span class="line">[Huawei-port-group-pokes]port link-type access</span><br><span class="line">[Huawei-Ethernet0/0/1]port link-type access</span><br><span class="line">·········</span><br><span class="line">[Huawei-Ethernet0/0/10]port link-type access</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Huawei-port-group-pokes]port default vlan 3</span><br><span class="line">[Huawei-Ethernet0/0/1]port default vlan 3</span><br><span class="line">·········</span><br><span class="line">[Huawei-Ethernet0/0/10]port default vlan 3</span><br></pre></td></tr></table></figure><h2 id="vlan查看"><a href="#vlan查看" class="headerlink" title="vlan查看"></a>vlan查看</h2>全局查看vlan信息<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dis vlan</span><br></pre></td></tr></table></figure>查看端口与vlan对应关系 PVID即vlan编号<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]dis port vlan</span><br><span class="line">Port                    Link Type    PVID  Trunk VLAN List</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Ethernet0/0/1           access       3     -                                   </span><br><span class="line">Ethernet0/0/2           access       3     -          </span><br><span class="line">·········</span><br></pre></td></tr></table></figure><h2 id="允许所有vlan通过"><a href="#允许所有vlan通过" class="headerlink" title="允许所有vlan通过"></a>允许所有vlan通过</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Huawei]int e0/0/22</span><br><span class="line">[Huawei-Ethernet0/0/22]port link-type trunk</span><br><span class="line"><span class="comment"># 允许通过vlan3 和 vlan4094</span></span><br><span class="line">[Huawei-Ethernet0/0/22]port trunk allow-pass vlan 3 4094</span><br><span class="line"><span class="comment"># 允许通过vlan3 至 vlan4094</span></span><br><span class="line">[Huawei-Ethernet0/0/22]port trunk allow-pass vlan 3 to 4094</span><br></pre></td></tr></table></figure><h2 id="子端口设置"><a href="#子端口设置" class="headerlink" title="子端口设置"></a>子端口设置</h2>适用于路由器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[R1-GigabitEthernet0/0/0.10]int g0/0/0.20</span><br><span class="line">[R1-GigabitEthernet0/0/0.20]dot1q termination vid 20</span><br><span class="line">[R1-GigabitEthernet0/0/0.20]ip address 192.168.20.1 24</span><br><span class="line">[R1-GigabitEthernet0/0/0.20]arp broadcast <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>当不适用路由器，而是使用三层交换机时，具有路由 连接端口需要为trunk口<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SW2]vlan batch 10 20 30</span><br><span class="line">[SW2]interface Vlanif 10</span><br><span class="line">[SW2-Vlanif10]ip address 192.168.10.1 24</span><br><span class="line">[SW2-Vlanif10]dis ip interface brief</span><br></pre></td></tr></table></figure></li></ul><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置静态路由 目标地址是192.168.3.0/24的数据包，转发给192.168.12.2</span></span><br><span class="line">ip route-static 192.168.3.0 24 192.168.12.2</span><br><span class="line">ip route-static 192.168.3.0 24 g0/0/1 192.168.12.2 通过指定接口</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认路由 所有数据包转发给12.0.0.2</span></span><br><span class="line">ip route-static 0.0.0.0 0.0.0.0 12.0.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询路由表</span></span><br><span class="line">display ip routing-table</span><br></pre></td></tr></table></figure><h2 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一般用于子接口，在设置IP后</span></span><br><span class="line">dhcp <span class="built_in">enable</span>开启DHCP</span><br><span class="line">dhcp select interface 接口模式</span><br><span class="line">dhcp server dns-list 8.8.8.8 2.2.2.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一般用于vlan，全局</span></span><br><span class="line">dhcp <span class="built_in">enable</span>开启DHCP</span><br><span class="line">ip pool DHCP15 创建地址池，命名15</span><br><span class="line">network 15.0.0.0 mask 24</span><br><span class="line">gateway-list 15.0.0.1   <span class="comment"># 接口或者vlan设置的IP</span></span><br><span class="line">dns-list 8.8.8.8 2.2.2.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入端口或者vlanif后，设置网关ip</span></span><br><span class="line">ip address 15.0.0.1 24</span><br><span class="line">dhcp select global 全局模式（在接口/vlanif下设置）</span><br><span class="line"></span><br><span class="line">DHCP获取IP地址</span><br><span class="line">ipconfig /renew 获取IP地址</span><br><span class="line">ipconfig /release 释放IP地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 交换机 </category>
          
          <category> 华为 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交换机 </tag>
            
            <tag> 华为 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为交换机路由实例</title>
      <link href="/huawei_shili/"/>
      <url>/huawei_shili/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/m0_71521555/article/details/125314352">https://blog.csdn.net/m0_71521555/article/details/125314352</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 交换机 </category>
          
          <category> 华为 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交换机 </tag>
            
            <tag> 实例 </tag>
            
            <tag> 华为 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为基本命令</title>
      <link href="/huawei_base_bash/"/>
      <url>/huawei_base_bash/</url>
      
        <content type="html"><![CDATA[<p><strong>华为基本命令</strong></p><h2 id="配置登录方式"><a href="#配置登录方式" class="headerlink" title="配置登录方式"></a>配置登录方式</h2><h3 id="ensp"><a href="#ensp" class="headerlink" title="ensp"></a>ensp</h3><p>通过ensp本身，双击要打开的设备或者右击，选择CLI<br><img src="https://qiufuqi.github.io/img/hexo/20240203121914.png"></p><h3 id="putty"><a href="#putty" class="headerlink" title="putty"></a>putty</h3><p>通过putty方式打开，需要提前确定端口号：右击设备，选择配置，确定端口号<br><img src="https://qiufuqi.github.io/img/hexo/20240203122120.png"></p><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">display hotkey    <span class="comment"># 快捷键</span></span><br><span class="line">d?      <span class="comment"># d开头的命令</span></span><br><span class="line">dis ?   <span class="comment"># dis 的下一个命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更换名称</span></span><br><span class="line">sysname R2 或 sys R2 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 时区时间</span></span><br><span class="line">&lt;R2&gt;dis clock</span><br><span class="line">&lt;R2&gt;clock timezone CST add 8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录提示信息和进入提示信息</span></span><br><span class="line">[R2]header login information <span class="comment">#</span></span><br><span class="line">[R2]header shell information <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户等级 0：访问级 1：监控级  2：配置级 3-15：管理级</span></span><br><span class="line"><span class="comment"># 将save命令等级更改为3 </span></span><br><span class="line">[R2]command-privilege level 3 view user save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户界面: console 编号 0 ; vty 编号0-4 (vty接口最大可配范围：0-14)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置密码: console 或者vty 命令一样</span></span><br><span class="line">[R2]user-interface console 0</span><br><span class="line">[R2-ui-console0]authentication-mode password  回车输入密码</span><br><span class="line">[R2-ui-console0]<span class="built_in">set</span> authentication password cipher huawei</span><br><span class="line"></span><br><span class="line">[R2]user-interface vty 0 4</span><br><span class="line">[R2-ui-console0]authentication-mode password  回车输入密码</span><br><span class="line">[R2-ui-console0]<span class="built_in">set</span> authentication password cipher huawei</span><br><span class="line">[R2-ui-vty0-4]user privilege level 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 超时时间，自动锁屏 分 秒 1分20秒  0永不超时</span></span><br><span class="line">[R2-ui-vty0-4]idle-timeout 1 20</span><br><span class="line"><span class="comment"># 显示行数</span></span><br><span class="line">[R2-ui-vty0-4]screen-length 10</span><br><span class="line"><span class="comment"># 历史命令 dis history-command</span></span><br><span class="line">[R2-ui-vty0-4]history-command max-size 20</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接口配IP地址</span></span><br><span class="line">[R2]int g0/0/0</span><br><span class="line">[R2-GigabitEthernet0/0/0]ip address 10.1.1.1 24</span><br><span class="line">[R2]dis ip int brief</span><br></pre></td></tr></table></figure><h2 id="新增AP"><a href="#新增AP" class="headerlink" title="新增AP"></a>新增AP</h2><p>进入AC交换机系统，新增</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">wlan</span><br><span class="line">[ap auth-mode mac-auth]</span><br><span class="line"></span><br><span class="line">ap-id 819 type-id 144 ap-mac 9844-CE7F-2570 ap-sn 2102353VURW0M6002888</span><br><span class="line">ap-name LYG-AP0819</span><br><span class="line">Y</span><br><span class="line">ap-group AP-ZhiJi-1</span><br><span class="line">Y</span><br></pre></td></tr></table></figure><h2 id="流量统计"><a href="#流量统计" class="headerlink" title="流量统计"></a>流量统计</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">查看端口流量统计</span><br><span class="line">cisco：show interface counters</span><br><span class="line">huawei：display interface brief  最近300秒内</span><br><span class="line"></span><br><span class="line">查看接口的vlan配置：display port vlan</span><br><span class="line"></span><br><span class="line">查看光模块信息：</span><br><span class="line">cisco：show int gigabitEthernet 0/48 transceiver properties</span><br><span class="line">华为：dis transceiver interface xg0/0/1 verbose</span><br><span class="line"></span><br><span class="line">show interfaces status            查看端口的基本状态信息</span><br><span class="line">show ip interfaces brief          查看包括IP信息在内的端口简要状态信息</span><br><span class="line"></span><br><span class="line">show etherchannel summary  查看每个聚合组内包含哪些端口</span><br><span class="line">show etherchannel detail 查看所有聚合组信息及其所含端口的简要状态信息</span><br><span class="line">show etherchannel port-channel   查看所有聚合组的简要信息及其包含哪些端口</span><br><span class="line">show interfaces port-channel &lt;group-number&gt;查看指定聚合组的端口信息</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 华为 </category>
          
          <category> 基本命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
            <tag> 基本命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EXSI虚拟机卡死</title>
      <link href="/exsi_reboot/"/>
      <url>/exsi_reboot/</url>
      
        <content type="html"><![CDATA[<p>在 ESXi 主机上关闭虚拟机电源时，会遇到以下症状：</p><ul><li>无法关闭 ESXi 托管的虚拟机的电源</li><li>虚拟机无响应，且无法停止或终止</li></ul><p><strong>使用 SSH 以 root 身份登录到 ESXi</strong></p><h1 id="普通关机"><a href="#普通关机" class="headerlink" title="普通关机"></a>普通关机</h1><p>获取所有已注册虚拟机的列表，由其 VMID 和显示名称标识<br>vim-cmd vmsvc/getallvms</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">~ <span class="comment"># vim-cmd vmsvc/getallvms</span></span><br><span class="line">Vmid      Name                        File                           Guest OS        Version   Annotation</span><br><span class="line">1424   sap-router   [datastore1 (4)] sap-router/win2k8x64.vmx   winLonghorn64Guest   vmx-07              </span><br><span class="line">1440   RAS-3.250    [datastore1 (4)] RAS/win2k8x64.vmx          winLonghorn64Guest   vmx-07</span><br></pre></td></tr></table></figure><p>获取虚拟机当前的状态<br>vim-cmd vmsvc/power.getstate VMID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~ <span class="comment"># vim-cmd vmsvc/power.getstate 1440</span></span><br><span class="line">Retrieved runtime info</span><br><span class="line">Powered on</span><br></pre></td></tr></table></figure><p>检查受影响的虚拟机上是否有挂起的任务阻止了机器开机<br>vim-cmd vmsvc/get.tasklist VMID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~ <span class="comment"># vim-cmd vmsvc/get.tasklist 1440</span></span><br><span class="line">(ManagedObjectReference) [</span><br><span class="line">  <span class="string">&#x27;vim.Task:haTask-2-vim.VirtualMachine.createSnapshot-182550283&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;vim.Task:haTask-2-vim.VirtualMachine.consolidateDisks-182550274&#x27;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>查看任务的更多信息<br>vim-cmd vimsvc/task_info task_id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim-cmd vimsvc/task_info haTask-2-vim.VirtualMachine.createSnapshot-182550283</span></span><br><span class="line">·········</span><br></pre></td></tr></table></figure><p>任务挂起，需要取消，使用如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim-cmd vimsvc/task_cancel task_id</span><br></pre></td></tr></table></figure><p>使用命令关闭虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim-cmd vmsvc/power.shutdown VMID</span><br><span class="line"><span class="comment"># 无法关闭时使用以下命令</span></span><br><span class="line">vim-cmd vmsvc/power.off VMID</span><br></pre></td></tr></table></figure><p>至此一般能成功关机，如果无法关机则参考以下：强制关机</p><h1 id="强制关机"><a href="#强制关机" class="headerlink" title="强制关机"></a>强制关机</h1><h2 id="5-5以上版本"><a href="#5-5以上版本" class="headerlink" title="5.5以上版本"></a>5.5以上版本</h2><p><strong>以下命令适合5.5以上版本</strong></p><ul><li>确认虚拟机运行在哪个esxi主机上，使用SSH登陆到该主机（这个应该是esxi运维最基本的操作了，不会自行百度）</li><li>通过命令找到虚拟机运行的worldID(和进程ID相似，一台虚拟机有一个唯一的ID)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost:~] esxcli vm process list</span><br><span class="line">RH236_3.1</span><br><span class="line">   World ID: 68762</span><br><span class="line">   Process ID: 0</span><br><span class="line">   VMX Cartel ID: 68761</span><br><span class="line">   UUID: 56 4d 70 ad 43 f1 5e 25-8a 12 a0 e2 18 2e 38 ec</span><br><span class="line">   Display Name: RH236_3.1</span><br><span class="line">   Config File: /vmfs/volumes/5cce4874-40c5c88e-a836-003048fc4ffe/RH236_3.1/RH236_3.1.vmx</span><br><span class="line"> </span><br><span class="line">Server 2016 Vcenter</span><br><span class="line">   World ID: 68982</span><br><span class="line">   Process ID: 0</span><br><span class="line">   VMX Cartel ID: 68981</span><br><span class="line">   UUID: 56 4d d5 80 19 b2 b9 a1-ea 0b <span class="built_in">cd</span> 89 a6 05 e9 48</span><br><span class="line">   Display Name: Server 2016 Vcenter</span><br><span class="line">   Config File: /vmfs/volumes/5cce65ea-ab8c59fa-82c7-003048fc4ffe/Server 2016 Vcenter/Server 2016 Vcenter.vmx</span><br></pre></td></tr></table></figure><p>记下world id ，执行强制关机命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">esxcli vm process <span class="built_in">kill</span> --<span class="built_in">type</span>= [soft,hard,force] --world-id= WorldNumber</span><br><span class="line">esxcli vm process <span class="built_in">kill</span> -t [ soft,hard,force] -w WorldNumber</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">esxcli vm process <span class="built_in">kill</span> --<span class="built_in">type</span>=force --world-id=68762</span><br><span class="line">esxcli vm process <span class="built_in">kill</span> -t force -w 68762</span><br></pre></td></tr></table></figure><p>-t,–type 执行类型<br>soft： 执行正常关机，调用vmearetool执行关机<br>hard： 执行立即关机<br>force：强制断电关机<br>-w,–world-id<br>这里指定虚拟机的World ID号了 </p><h2 id="5-5以下版本"><a href="#5-5以下版本" class="headerlink" title="5.5以下版本"></a>5.5以下版本</h2><ul><li>运行以下命令获取正在运行的虚拟机的列表（虚拟机由 World ID、UUID、显示名称和 .vmx 配置文件的路径标识）：</li><li>运行以下命令关闭此列表中某个虚拟机的电源：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">esxcli vms vm list</span><br><span class="line">esxcli vms vm <span class="built_in">kill</span> --<span class="built_in">type</span>= [soft,hard,force] --world-id= WorldNumber</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> 重启 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> 卡死 </tag>
            
            <tag> 重启 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VCSA许可证</title>
      <link href="/exsi_vCenter_license/"/>
      <url>/exsi_vCenter_license/</url>
      
        <content type="html"><![CDATA[<p><strong>许可证</strong><br>输入许可证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">VCSA许可证：</span><br><span class="line">VMware vCenter 7.0 Standard</span><br><span class="line">104HH-D4343-07879-MV08K-2D2H2</span><br><span class="line">410NA-DW28H-H74K1-ZK882-948L4</span><br><span class="line">406DK-FWHEH-075K8-XAC06-0JH08</span><br><span class="line"></span><br><span class="line">VCSA7:</span><br><span class="line">JC45H-0Z292-M8808-1C0Q0-3A8H8</span><br><span class="line"></span><br><span class="line">VCSA6:</span><br><span class="line">HG612-FH19H-08DL1-V19X2-1VKND</span><br><span class="line">NU4JA-4V2DQ-48428-T32GK-8VRN4</span><br><span class="line">0Y4H2-8P217-H8900-M8AE4-2LH44</span><br><span class="line">NA658-2308J-08809-93AQ6-278J0</span><br><span class="line"></span><br><span class="line">VCSA5：</span><br><span class="line">JG6QQ-02L92-UZR39-R13Q2-120LC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXSI许可证：</span><br><span class="line">ESXi 7.0 Enterprise Plus</span><br><span class="line">JJ2WR-25L9P-H71A8-6J20P-C0K3F</span><br><span class="line">HN2X0-0DH5M-M78Q1-780HH-CN214</span><br><span class="line">JH09A-2YL84-M7EC8-FL0K2-3N2J2</span><br><span class="line"></span><br><span class="line">EXSI6：</span><br><span class="line">0A65P-00HD0-3Z5M1-M097M-22P7H</span><br><span class="line"></span><br><span class="line">EXSI5.5：</span><br><span class="line">UJ623-A8091-K8L4T-0P38H-8ENQ1</span><br><span class="line">4F6GR-A6K9Q-LZPC8-Z1AQ4-AA34U</span><br><span class="line"></span><br><span class="line">EXSI5.1：</span><br><span class="line">JA0XT-4W300-AZDW9-43856-8A8HL</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VCSA5.5安装步骤.md</title>
      <link href="/exsi_vCenter_5.5/"/>
      <url>/exsi_vCenter_5.5/</url>
      
        <content type="html"><![CDATA[<p><strong>VCSA5.5 安装步骤</strong></p><p>VCSA 用于管理EXSI虚拟化软件（虚拟化版本不能高于VCSA，即 VCSA版本为7.0 则最高只能管理EXSI7）<br>VCSA5.5 比较特殊，安装步骤如下</p><h1 id="下载对应文件"><a href="#下载对应文件" class="headerlink" title="下载对应文件"></a>下载对应文件</h1><p>名称VMware-vCenter-Server-Appliance-5.5.0.31100-9911210_OVF10.ova，这里是5.5版本，你可以理解为这个是已经被包装过的镜像文件模版。<br>镜像下载地址分享<br>链接: <a href="https://pan.baidu.com/s/1ONjVivtoc0TYmtK0vIhDKw?pwd=wak9">https://pan.baidu.com/s/1ONjVivtoc0TYmtK0vIhDKw?pwd=wak9</a><br>提取码: wak9 </p><p>其他镜像下载：<a href="https://www.dinghui.org/vmware-iso-download.html">https://www.dinghui.org/vmware-iso-download.html</a></p><p>安装参考：<a href="https://www.renrendoc.com/paper/216758580.html">https://www.renrendoc.com/paper/216758580.html</a></p><h1 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h1><p>新建虚拟机，选择从OVF或OVA文件部署虚拟机<br><img src="https://qiufuqi.github.io/img/hexo/20230315141842.png"><br>命名系统并上传镜像，等待系统导入<br><img src="https://qiufuqi.github.io/img/hexo/20230315141958.png"></p><h1 id="开机配置"><a href="#开机配置" class="headerlink" title="开机配置"></a>开机配置</h1><p>系统开机，并登录，使用默认用户名<strong>root</strong>，默认密码为<strong>vmware</strong>进行登录<br><img src="https://qiufuqi.github.io/img/hexo/20230315142740.png"></p><h1 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h1><p>命令行输入 ./opt/vmware/share/vami/vami_config_net<br><img src="https://qiufuqi.github.io/img/hexo/20230315142903.png"><br>设置IP，网关等<br><img src="https://qiufuqi.github.io/img/hexo/20230315143618.png"><br>配置完成后输入exit，按照步骤操作<br><img src="https://qiufuqi.github.io/img/hexo/20230315150315.png"></p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>win7 系统 IE浏览器 按照步骤开始安装<br><img src="https://qiufuqi.github.io/img/hexo/20230315150636.png"><br>同意协议<br><img src="https://qiufuqi.github.io/img/hexo/20230315150823.png"></p><p>默认配置，把数据库和SSO软件都部署在本虚拟机，且不安装AD域和时间同步<br><img src="https://qiufuqi.github.io/img/hexo/20230315150920.png"><br>选择默认，开始安装，显示各个组件安装状态<br><img src="https://qiufuqi.github.io/img/hexo/20230315151139.png"></p><h1 id="访问系统"><a href="#访问系统" class="headerlink" title="访问系统"></a>访问系统</h1><p>安装完成后，修改密码（旧密码vmware）<br><img src="https://qiufuqi.github.io/img/hexo/20230315151649.png"></p><p>浏览器输入IP地址，可选择客户端登录或者UI登录（UI登录需要flash，这里建议使用vsphere登录管理）<br><img src="https://qiufuqi.github.io/img/hexo/20230315152034.png"></p><p>输入IP，账号密码<br><img src="https://qiufuqi.github.io/img/hexo/20230315153933.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230315153902.png"></p><p>输入许可证<br><img src="https://qiufuqi.github.io/img/hexo/20230315153834.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">VCSA许可证：</span><br><span class="line">VMware vCenter 7.0 Standard</span><br><span class="line">104HH-D4343-07879-MV08K-2D2H2</span><br><span class="line">410NA-DW28H-H74K1-ZK882-948L4</span><br><span class="line">406DK-FWHEH-075K8-XAC06-0JH08</span><br><span class="line"></span><br><span class="line">VCSA7:</span><br><span class="line">JC45H-0Z292-M8808-1C0Q0-3A8H8</span><br><span class="line"></span><br><span class="line">VCSA6:</span><br><span class="line">HG612-FH19H-08DL1-V19X2-1VKND</span><br><span class="line">NU4JA-4V2DQ-48428-T32GK-8VRN4</span><br><span class="line">0Y4H2-8P217-H8900-M8AE4-2LH44</span><br><span class="line">NA658-2308J-08809-93AQ6-278J0</span><br><span class="line"></span><br><span class="line">VCSA5：</span><br><span class="line">JG6QQ-02L92-UZR39-R13Q2-120LC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXSI许可证：</span><br><span class="line">ESXi 7.0 Enterprise Plus</span><br><span class="line">JJ2WR-25L9P-H71A8-6J20P-C0K3F</span><br><span class="line">HN2X0-0DH5M-M78Q1-780HH-CN214</span><br><span class="line">JH09A-2YL84-M7EC8-FL0K2-3N2J2</span><br><span class="line"></span><br><span class="line">EXSI6：</span><br><span class="line">0A65P-00HD0-3Z5M1-M097M-22P7H</span><br><span class="line"></span><br><span class="line">EXSI5.5：</span><br><span class="line">UJ623-A8091-K8L4T-0P38H-8ENQ1</span><br><span class="line">4F6GR-A6K9Q-LZPC8-Z1AQ4-AA34U</span><br><span class="line"></span><br><span class="line">EXSI5.1：</span><br><span class="line">JA0XT-4W300-AZDW9-43856-8A8HL</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vCenter 备份还原</title>
      <link href="/exsi_vCenter_recover/"/>
      <url>/exsi_vCenter_recover/</url>
      
        <content type="html"><![CDATA[<p><strong>vCenter备份还原</strong></p><h1 id="登陆到VC控制台"><a href="#登陆到VC控制台" class="headerlink" title="登陆到VC控制台"></a>登陆到VC控制台</h1><p>端口：5480<br>找到备份-立即备份<br>前提需要找一个windows服务器创建一个共享目录，本章介绍使用smb方式进行备份和恢复，其他方式类似。<br><img src="https://qiufuqi.github.io/img/hexo/20230224153604.png"></p><h1 id="填写备份位置"><a href="#填写备份位置" class="headerlink" title="填写备份位置"></a>填写备份位置</h1><p>chown ftp_vcenter:ftp ./test</p><p><img src="https://qiufuqi.github.io/img/hexo/20230224153633.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230224153644.png"><br>正在开始备份<br><img src="https://qiufuqi.github.io/img/hexo/20230224153704.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230224153710.png"></p><h1 id="恢复VCSA7-0"><a href="#恢复VCSA7-0" class="headerlink" title="恢复VCSA7.0"></a>恢复VCSA7.0</h1><p>找到安装VCSA7.0的系统镜像<br><img src="https://qiufuqi.github.io/img/hexo/20230224153725.png"><br>这里选择还原<br><img src="https://qiufuqi.github.io/img/hexo/20230224153746.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230224153757.png"><br>输入备份服务器的账号和密码<br><a href="ftp://10.11.7.95/">FTP://10.11.7.95/</a><br><img src="https://qiufuqi.github.io/img/hexo/20230224153812.png"><br>输入部署在那台ESXI7.0服务器<br><img src="https://qiufuqi.github.io/img/hexo/20230224153827.png"><br>输入VCSA7.0密码<br><img src="https://qiufuqi.github.io/img/hexo/20230224153847.png"><br>选择部署大小<br><img src="https://qiufuqi.github.io/img/hexo/20230224153904.png"><br>选择数据存储<br><img src="https://qiufuqi.github.io/img/hexo/20230224153925.png"><br>配置VCSA7.0的网络信息<br><img src="https://qiufuqi.github.io/img/hexo/20230224153938.png"></p><p>然后点击下一步即将完成第一阶段，和安装VCSA7.0步骤几乎相同，请参考安装说明。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vCenter日常使用问题</title>
      <link href="/exsi_vCenter_problem/"/>
      <url>/exsi_vCenter_problem/</url>
      
        <content type="html"><![CDATA[<p><strong>vCenter日常使用问题</strong></p><h3 id="无法开机问题"><a href="#无法开机问题" class="headerlink" title="无法开机问题"></a>无法开机问题</h3><p><a href="https://www.virten.net/2017/08/vcsa-6-5-broken-filesystem-welcome-to-emergency-mode/">参考</a><br>版本：VCSA 6.5 Broken Filesystem - “Welcome to Emergency Mode”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Welcome to emergency mode! After logging <span class="keyword">in</span>, <span class="built_in">type</span> <span class="string">&quot;journalctl -xb&quot;</span> to view system logs, <span class="string">&quot;systemctl reboot&quot;</span> to reboot, <span class="string">&quot;systemctl default&quot;</span> or ^D to try again to boot into default mode.</span><br><span class="line">Give root password <span class="keyword">for</span> maintenance</span><br><span class="line">(or press Control-D to <span class="built_in">continue</span>):</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20230224141346.png"><br>(Shift + Page Up)查看日志<br><img src="https://qiufuqi.github.io/img/hexo/20230224141507.png"><br>问题提示为log出现问题：[FAILED] Failed to start Filesystem Check on <strong>/dev/log_vg/log.</strong></p><p>输入密码进入系统，使用df -h 和 cat /etc/fstab 可以发现 /storage/log 系统在df -h 中丢失了<br><img src="https://qiufuqi.github.io/img/hexo/20230224141639.png"></p><p>使用如下命令修复，全部yes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># e2fsck -y /dev/log_vg/log</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20230224141740.png"></p><p>重启解决问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># reboot -f</span></span><br></pre></td></tr></table></figure><h3 id="磁盘空间不足"><a href="#磁盘空间不足" class="headerlink" title="磁盘空间不足"></a>磁盘空间不足</h3><p>一般就是VMDK的5和13，分别是10GB的/storage/log和50GB的/storage/archive<br>建议直接扩容到50GB和250GB<br>使用命令vpxd_servicecfg storage lvm autogrow来自动扩展<br>服务起不来就重启service-control –start –all</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝鲸智云6.1监控日志部署</title>
      <link href="/ljzy_jkrz/"/>
      <url>/ljzy_jkrz/</url>
      
        <content type="html"><![CDATA[<p><strong>监控日志套餐部署</strong><br><a href="https://bk.tencent.com/docs/document/6.1/184/23323">安装步骤参考</a><br>该套餐属于蓝鲸社区版增值套餐，请确认基础套餐已经部署完成；如未部署请参考<a href="/ljzy_jichu">基础套餐部署</a><br>该套餐主要适用于监控告警、日志采集的分析的场景。<br>主要包含蓝鲸相关产品：监控平台、日志平台</p><h1 id="物理准备"><a href="#物理准备" class="headerlink" title="物理准备"></a>物理准备</h1><p>因模块间存在依赖关系，需要按照顺序依次部署： 监控平台 -&gt; 日志平台。</p><h2 id="获取资源包"><a href="#获取资源包" class="headerlink" title="获取资源包"></a>获取资源包</h2><p>下载对应的资源包，并上传至中控机 /data 目录下。<br><a href="https://bk.tencent.com/s-mart/downloads?type=packageDown&version=binary">下载地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 data]<span class="comment"># cd /data</span></span><br><span class="line">[root@lj1 data]<span class="comment"># tar xf bkce_co_package-6.1.2.tgz</span></span><br></pre></td></tr></table></figure><h2 id="机器准备"><a href="#机器准备" class="headerlink" title="机器准备"></a>机器准备</h2><p>操作系统：CentOS7.6 mini<br>生产环境：建议 8 核 16 G，硬盘 100G 以上（可根据实际情况适当调整配置）<br>机器数量：3 台（假设 ip 分别为：10.11.8.72（jk1），10.11.8.73(jk2)，10.11.8.74(jk3)）</p><h2 id="实现免密"><a href="#实现免密" class="headerlink" title="实现免密"></a>实现免密</h2><p>开始部署前，请确保新增主机跟中控机已实现免密。(中控机执行)<br>sh-keygen 产生公钥与私钥对.<br>ssh-copy-id 将本机的公钥复制到远程机器的authorized_keys文件中，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id &lt;ip&gt;</span><br></pre></td></tr></table></figure><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p><a href="https://bk.tencent.com/docs/document/6.1/184/22908">部署参考</a></p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>关闭SELinux及默认防火墙(firewalld)<br>安装和运行蓝鲸时，模块之间互相访问的端口策略较多，建议对蓝鲸后台服务器之间关闭防火墙。以下命令每台机器均需执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 官方建议，腾讯云yum源</span></span><br><span class="line">[root@localhost ~]<span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos7_base.repo</span></span><br><span class="line">[root@localhost ~]<span class="comment"># wget -O /etc/yum.repos.d/epel.repo http://mirrors.cloud.tencent.com/repo/epel-7.repo</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># yum clean all</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum makecache </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭防火墙以及selinux</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl stop firewalld</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl disable NetworkManager</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -i &#x27;/^SELINUX=/ s/enforcing/disabled/&#x27;  /etc/selinux/config</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># cat &gt;&gt; /etc/security/limits.conf &lt;&lt;EOF </span></span><br><span class="line">* soft <span class="built_in">nproc</span> 65530 </span><br><span class="line">* hard <span class="built_in">nproc</span> 65530 </span><br><span class="line">* soft nofile 65530 </span><br><span class="line">* hard nofile 65530  </span><br><span class="line">EOF</span><br><span class="line">[root@localhost ~]<span class="comment"># ulimit -n 65535  </span></span><br><span class="line">[root@localhost ~]<span class="comment"># ulimit -u 20480</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 必要环境包</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum install -y rsync pssh jq deltarpm ntpdate epel-release rsync</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步时间</span></span><br><span class="line">[root@localhost ~]<span class="comment"># timedatectl set-timezone Asia/Shanghai</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ntpdate -b ntp1.aliyun.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改主机名 各自分配</span></span><br><span class="line">[root@localhost ~]<span class="comment"># hostnamectl set-hostname lj1</span></span><br></pre></td></tr></table></figure><h1 id="节点新增"><a href="#节点新增" class="headerlink" title="节点新增"></a>节点新增</h1><h2 id="节点管理"><a href="#节点管理" class="headerlink" title="节点管理"></a>节点管理</h2><p>前往节点管理进行安装，根据图中步骤填写相关信息，对新增主机进行 agent 安装<br><img src="https://qiufuqi.github.io/img/hexo/20221220103943.png"><br>安装成功示意图，如果失败请解决报错后再进行重试或者重装。<a href="https://bk.tencent.com/docs/document/6.1/176/26231">错误参考</a><br><img src="https://qiufuqi.github.io/img/hexo/20221220103959.png"></p><h2 id="导入标准运维流程模版"><a href="#导入标准运维流程模版" class="headerlink" title="导入标准运维流程模版"></a>导入标准运维流程模版</h2><p><a href="https://bkopen-1252002024.file.myqcloud.com/ce/0c364fe/bk_sops_co_package-6.1.2.dat">标准运维流程模板</a><br>详细步骤： 打开标准运维 -&gt; 项目流程 -&gt; 导入 -&gt; 点击上传 -&gt; 创建新流程<br><img src="https://qiufuqi.github.io/img/hexo/20221220112250.png"><br>假设需要部署的 监控告警及日志服务套餐包 已放置中控机的 /data 目录 ，对应套餐包的标准运维流程模版 已导入至标准运维。导入可参考如下:<br><img src="https://qiufuqi.github.io/img/hexo/20221220112344.png"></p><h2 id="检查-install-config"><a href="#检查-install-config" class="headerlink" title="检查 install.config"></a>检查 install.config</h2><p>检查 install.config 文件是否已经包含增强套餐的相关模块分布。如果有请先移除相关模块。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 ~]<span class="comment"># value_modules=(monitorv3\(influxdb-proxy\) monitorv3\(monitor\) monitorv3\(grafana\) influxdb\(bkmonitorv3\) monitorv3\(transfer\) beanstalk log\(grafana\) log\(api\) kafka\(config\) monitorv3\(unify-query\) monitorv3\(ingester\))</span></span><br><span class="line"></span><br><span class="line">[root@lj1 ~]<span class="comment"># for module in $&#123;value_modules[@]&#125;; do if grep $&#123;module&#125; /data/install/install.config &gt;/dev/null; then echo -e &quot;The \e[1;31m $&#123;module&#125; \e[0m module exists in install.config, please remove it before deploying.&quot;; fi; done</span></span><br></pre></td></tr></table></figure><h1 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h1><h2 id="监控平台"><a href="#监控平台" class="headerlink" title="监控平台"></a>监控平台</h2><p>选择 [ce][deploy][bkmonitorv3] 流程模版进行新建任务，根据提示填写相关信息。确认填写信息无误后，开始执行任务。<br><img src="https://qiufuqi.github.io/img/hexo/20221220114116.png"><br>填写信息包括：</p><ul><li>ctrl_ip：基础环境的中控机 IP</li><li>whole_pkg_path：部署监控平台安装包的绝对路径</li><li>deply_iplist：新增的机器 IP（如果基础环境的资源有富余，可以复用）</li></ul><p><img src="https://qiufuqi.github.io/img/hexo/20221220114136.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221220115014.png"><br>该部署流程主要相关操作：</p><ul><li>将监控平台安装包放至指定目录</li><li>生成监控平台 install.config 配置</li><li>初始化新增节点机器</li><li>授权监控平台所需的 MySQL 访问权限</li><li>安装监控相关依赖、监控平台后台、监控平台 SaaS</li></ul><h2 id="常见失败"><a href="#常见失败" class="headerlink" title="常见失败"></a>常见失败</h2><h3 id="准备蓝鲸监控安装包"><a href="#准备蓝鲸监控安装包" class="headerlink" title="准备蓝鲸监控安装包"></a>准备蓝鲸监控安装包</h3><p>遇到执行失败的情况，到作业平台查看执行历史，查看详情 （哪一步失败解决哪一步，然后再次执行失败步骤）<br><img src="https://qiufuqi.github.io/img/hexo/20221220134122.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221220134158.png"></p><p>查看执行记录，可能会失败，要保证所有节点正常，再次执行。<br><a href="https://bk.tencent.com/docs/document/6.0/127/7876">错误参考</a><br><img src="https://qiufuqi.github.io/img/hexo/20221220134031.png"><br><strong>异常信息：IP 校验失败，请确认输入的 IP xxx 是否合法</strong><br>参考 “安装 gse agent” 章节安装 agent，并确保 IP 所在业务和流程模板一致。<br><strong>异常信息：任务执行失败，详情页提示 can not find agent by ip</strong><br>参考 “安装 gse agent” 章节安装 agent，“节点管理”对应 IP 的“agent 状态”应为“正常”。</p><h3 id="调用bk-install安装蓝鲸监控"><a href="#调用bk-install安装蓝鲸监控" class="headerlink" title="调用bk_install安装蓝鲸监控"></a>调用bk_install安装蓝鲸监控</h3><p>部署监控-调用bk_install安装蓝鲸监控-<a href="https://bk.tencent.com/s-mart/community/question/5820?type=answer">常见报错</a><br>常见报错1：报错信息：es7 集群状态异常，msg -&gt;<br><img src="https://qiufuqi.github.io/img/hexo/20221220142234.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221220142244.png"><br><a href="https://bk.tencent.com/s-mart/community/question/5794?type=answer">解决方案</a></p><p>常见报错2：报错信息：ERROR deploy failed : timeout<br><img src="https://qiufuqi.github.io/img/hexo/20221220142316.png"><br>一直失败，机器环境因素导致saas部署时间过长超时 由日志可知为普通的超时问题，部署流程没有逻辑上的报错，可以根据部署saas超时处理</p><p><strong>分发中控机脚本到扩容主机</strong><br>无法从配置平台(CMDB)查询到对应 IP，请确认输入的 IP 是否合法。查询失败 IP： 10.11.8.72<br>将主机分配到对应主机列表，再次尝试执行<br><img src="https://qiufuqi.github.io/img/hexo/20221222094514.png"></p><p><strong>ERROR deploy failed : timeout</strong><br>出现以上报错均为部署saas问题，需要查看appo模块所在机器的agent.log日志来定位问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看appo模块部署在哪台机器上</span></span><br><span class="line">[root@lj1 install]<span class="comment"># grep appo /data/install/install.config</span></span><br><span class="line">10.11.8.70 paas,nginx,consul,mongodb,rabbitmq,appo,zk(config)</span><br><span class="line"><span class="comment"># 登陆appo机器查看agent日志</span></span><br><span class="line">[root@lj2 ~]<span class="comment"># tail -f /data/bkce/logs/paasagent/agent.log</span></span><br></pre></td></tr></table></figure><p><a href="https://bk.tencent.com/s-mart/community/question/2566?type=answer">部署saas超时解决方案</a><br>解决方案：<br>下述所有步骤均以默认的安装目录 /data/bkce 为例，过程中请使用实际的安装目录进行替换。<br>1、修改 paas_agent 配置文件内的 EXECUTE_TIME_LIMIT 配置项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /data/install/load_env.sh </span><br><span class="line">ssh <span class="variable">$BK_APPO_IP</span></span><br><span class="line">vim /data/bkce/paas_agent/paas_agent/etc/paas_agent_config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改该配置项</span></span><br><span class="line">EXECUTE_TIME_LIMIT=3000</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221220170159.png"><br>2、修改 open_paas 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /data/install/load_env.sh </span><br><span class="line">ssh <span class="variable">$BK_PAAS_IP</span></span><br><span class="line">vim /data/bkce/open_paas/paas/conf/settings_production.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在配置文件内任意处新增该配置项。</span></span><br><span class="line">EVENT_STATE_EXPIRE_SECONDS = 3600</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221220170229.png"><br>3、重启appo和paas服务之后，再次部署即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./bkcli restart paas</span><br><span class="line">./bkcli restart appo</span><br></pre></td></tr></table></figure><h3 id="监控平台打开报错"><a href="#监控平台打开报错" class="headerlink" title="监控平台打开报错"></a>监控平台打开报错</h3><p><img src="https://qiufuqi.github.io/img/hexo/20221220173315.png"><br>社区版6.0~6.0.3 监控平台问题解答汇总<br><a href="https://bk.tencent.com/s-mart/community/question/2789">https://bk.tencent.com/s-mart/community/question/2789</a></p><p>解决方案：<br><a href="https://bk.tencent.com/s-mart/community/question/3149">https://bk.tencent.com/s-mart/community/question/3149</a><br>在bkmonitorv3机器执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /data/install/utils.fc</span><br><span class="line">/data/install/bin/reg_consul_svc -n bkmonitorv3 -t monitor -p 10204 -a <span class="variable">$LAN_IP</span> -D &gt; /etc/consul.d/service/bkmonitorv3-monitor.json</span><br><span class="line">consul reload</span><br></pre></td></tr></table></figure><p>等30s左右，可以dig解析到IP地址即可</p><h2 id="日志平台"><a href="#日志平台" class="headerlink" title="日志平台"></a>日志平台</h2><p>选择 [ce][deploy][bklog] 流程模版进行新建任务，根据提示填写相关信息。确认填写信息无误后，开始执行任务。</p><p>填写信息包括：</p><ul><li>ctrl_ip：基础环境的中控机 IP</li><li>whole_pkg_path：部署日志平台安装包的绝对路径</li><li>deply_iplist：新增的机器 IP（如果基础环境的资源有富余，可以复用）<br><img src="https://qiufuqi.github.io/img/hexo/20221220172451.png"></li></ul><p>该部署流程主要相关操作：<br>将日志平台安装包放至指定目录<br>生成日志平台 install.config 配置<br>初始化新增节点机器<br>授权日志平台所需的 MySQL 访问权限<br>安装日志平台相关依赖、日志平台后台、日志平台 SaaS</p><h1 id="Agent节点报错"><a href="#Agent节点报错" class="headerlink" title="Agent节点报错"></a>Agent节点报错</h1><h2 id="安装Agent报错"><a href="#安装Agent报错" class="headerlink" title="安装Agent报错"></a>安装Agent报错</h2><h3 id="安装-agent-报-utf-8-问题"><a href="#安装-agent-报-utf-8-问题" class="headerlink" title="安装 agent 报 utf-8 问题"></a>安装 agent 报 utf-8 问题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[2022-03-30 16:08:57 ERROR] Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/data/bkce/bknodemandeman/apps/backend/utils/ssh.py&quot;</span>, line 445, <span class="keyword">in</span> send_cmd</span><br><span class="line">UnicodeDecodeError: <span class="string">&#x27;utf-8&#x27;</span> codec can<span class="string">&#x27;t decode byte 0xba in position 450: invalid start byte</span></span><br><span class="line"><span class="string">During handling of the above exception, another exception occurred:</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221220104218.png"><br><a href="https://bk.tencent.com/s-mart/community/question/7033">解决方案</a></p><h3 id="部署插件程序-下发安装包-失败"><a href="#部署插件程序-下发安装包-失败" class="headerlink" title="部署插件程序-下发安装包 失败"></a>部署插件程序-下发安装包 失败</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[2022 06-15 16:20:58 ERROR] [processbeat] 部署插件程序-下发安装包 失败，[basereport] 部署插件程序-下发安装包失败，[exceptionbeat ]部署插件程序-下发安装包失败 ➊[2022- 06-15 16:20:58 ERROR] 安装预设插件失败，请先尝试查看日志并处理，若无法解决，请联系管理员处理。</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221220104208.png"><br><a href="https://bk.tencent.com/s-mart/community/question/8142?type=article">解决方案</a></p><p><img src="https://qiufuqi.github.io/img/hexo/20221220110231.png"><br>出现这样的情况，去job作业平台看下执行历史（注意看下自己的job作业平台的业务是不是Blueking）<br><img src="https://qiufuqi.github.io/img/hexo/20221220110248.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221220110323.png"><br>可以看到报错是没有代理，原因是蓝鲸的job机器没有安装agent<br><img src="https://qiufuqi.github.io/img/hexo/20221220110350.png"><br>给图片里job的机器安装下agent，再重新安装下之前报错的机器的agent就可以</p><h1 id="部署saas超时-ERROR-deploy-failed-timeout"><a href="#部署saas超时-ERROR-deploy-failed-timeout" class="headerlink" title="部署saas超时 ERROR deploy failed: timeout"></a>部署saas超时 ERROR deploy failed: timeout</h1><p>参考：<a href="https://bk.tencent.com/s-mart/community/question/7038">https://bk.tencent.com/s-mart/community/question/7038</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 自动化 </category>
          
          <category> 蓝鲸智云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝鲸智云6.1系统重启</title>
      <link href="/ljzy_restart/"/>
      <url>/ljzy_restart/</url>
      
        <content type="html"><![CDATA[<p>断电重启，手动重启，人工误操作，机器死机，蓝鲸进程怎么办？</p><p>中控及：<br>重启后确认所有进程状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># cd /data/install</span></span><br><span class="line">[root@lj1 install]<span class="comment"># ./bkcli status all</span></span><br></pre></td></tr></table></figure><p>正常情况下应该都是正常拉起RUNNING状态，如果有EXIT的，则尝试手动拉起。手动拉起的具体方法参考组件的启动停止</p><p>社区版所有机器同时重启，很大概率会有很多进程启动失败，因为不同机器上组件恢复的时间没法控制，导致依赖的组件还没启动起来，导致失败，连锁反应。所以这种情况，遵循和安装时的启动原则</p><ul><li>先启动db</li><li>启动依赖的其他开源组件及服务</li><li>启动蓝鲸产品<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># ./bkcli start cmdb</span></span><br><span class="line">[root@lj1 install]<span class="comment"># ./bkcli start job</span></span><br><span class="line">[root@lj1 install]<span class="comment"># ./bkcli start bknodeman</span></span><br></pre></td></tr></table></figure>已经部署过SaaS，那么手动拉起。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># ./bkcli start paas</span></span><br><span class="line">[root@lj1 install]<span class="comment"># ./bkcli start saas-o # 正式环境</span></span><br><span class="line">[root@lj1 install]<span class="comment"># ./bkcli start saas-t # 测试环境</span></span><br></pre></td></tr></table></figure></li></ul><p>ElasticSearch – 服务启动操作超时<br><a href="https://blog.csdn.net/allway2/article/details/121966081">参考解决</a><br><img src="https://qiufuqi.github.io/img/hexo/20221222113041.png"></p><p>解决办法<br>修改 ElasticSearch 配置<br>编辑 ElasticSearch 服务的配置文件。<br>TimeoutStartSec配置等待启动的时间。默认值为90秒，将此值增加到适当的值，在我的情况下，我将其设置为500</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/elasticsearch.service</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221222113119.png"><br>保存该文件，然后重新加载 systemd 管理器配置。</p><p>检查启动的超时值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl show elasticsearch | grep ^Timeout</span><br><span class="line">TimeoutStartUSec=8min 20s</span><br><span class="line">TimeoutStopUSec=infinity</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 自动化 </category>
          
          <category> 蓝鲸智云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝鲸智云社区版6.1部署</title>
      <link href="/ljzy_problem/"/>
      <url>/ljzy_problem/</url>
      
        <content type="html"><![CDATA[<p><a href="https://bbs.csdn.net/topics/605192079">https://bbs.csdn.net/topics/605192079</a></p><h1 id="删除某个节点"><a href="#删除某个节点" class="headerlink" title="删除某个节点"></a>删除某个节点</h1><p>进入配置平台，依次点击 资源 =&gt; 主机 =&gt; 已分配，选中删除的节点 =&gt; 转移到(主机池)<br><img src="https://qiufuqi.github.io/img/hexo/20221222085511.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221222085523.png"><br>点击未分配=&gt; 更多 =&gt; 删除</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 自动化 </category>
          
          <category> 蓝鲸智云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝鲸智云6.1基础套餐部署</title>
      <link href="/ljzy_jichu/"/>
      <url>/ljzy_jichu/</url>
      
        <content type="html"><![CDATA[<p><strong>自动化运维平台部署</strong><br><a href="https://bk.tencent.com/">官方网站</a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>腾讯蓝鲸智云，简称蓝鲸，是一套基于 PaaS 的技术解决方案，提供了完善的前后台开发框架、调度引擎、公共组件等模块，帮助业务的产品和技术人员快速构建低成本、免运维的支撑工具和运营系统。</p><p>目前，腾讯蓝鲸智云团队秉承着开放共赢的态度，正逐渐开放其自主研发的一套具有多项探索式创新的体系—蓝鲸智云软件体系。该套体系不仅提供了基础运维（发布变更、监控处理、数值调整、数据提取等）的无人值守服务，而且还给运维人员提供了解决方案（工具），并随时调整，避免重复性的操作服务。而运维人员则可以做些“用户体验优化”和“运营决策辅助”等运维增值工作，并且可以通过蓝鲸智云提供的集成平台，低成本的学习 DevOps技能，进一步提升自己的能力，加速转型。此外，这套体系还可以运行轻应用、管理类、及职能类应用，是个全方位的运维、管理平台。</p><p>腾讯蓝鲸智云，运维领域的一张新名片，正在多个层次、多个领域崭露着头角，逐渐释放着自身特有的价值，引领着行业新标杆，开创了运维体系 2.0 的新局面。</p><h1 id="体系介绍"><a href="#体系介绍" class="headerlink" title="体系介绍"></a>体系介绍</h1><p>腾讯蓝鲸智云体系由平台级产品和通用 SaaS 服务组成，平台包括管控平台、配置平台、作业平台、数据平台、容器管理平台、挖掘平台、PaaS 平台、移动平台等，通用 SaaS 包括节点管理、标准运维、日志检索、蓝鲸监控、故障自愈等，为各种云（公有云、私有云、混合云）的用户提供不同场景、不同需求的一站式技术运营解决方案。<br><img src="https://qiufuqi.github.io/img/hexo/20221219143020.png"></p><h1 id="物理准备"><a href="#物理准备" class="headerlink" title="物理准备"></a>物理准备</h1><p>开始安装蓝鲸社区版前，需按以下文档指南，做好准备工作。<strong>本次部署使用：社区版 6.1.2 ，部署基础套餐</strong><br>基础套餐包含：PaaS 平台、配置平台、作业平台、权限中心、用户管理、节点管理、标准运维、流程服务</p><h2 id="获取资源包"><a href="#获取资源包" class="headerlink" title="获取资源包"></a>获取资源包</h2><p>下载对应的资源包，并上传至中控机 /data 目录下。<br><a href="https://bk.tencent.com/s-mart/downloads?type=packageDown&version=binary">下载地址</a></p><h2 id="机器准备"><a href="#机器准备" class="headerlink" title="机器准备"></a>机器准备</h2><p>操作系统：CentOS7.6 mini<br>生产环境：建议 8 核 32 G，硬盘 100G 以上（可根据实际情况适当调整配置）<br>机器数量：3 台（假设 ip 分别为：10.11.8.69（lj1），10.11.8.70(lj2)，10.11.8.71(lj3)）<br>选择一台为中控机（假设为 10.11.8.69）进行安装部署操作，使用 root 账号登录。</p><h2 id="获取证书"><a href="#获取证书" class="headerlink" title="获取证书"></a>获取证书</h2><p>通过 ifconfig 或者 ip addr 命令分别获取 3 台机器第一个内网网卡 MAC 地址<br>前往蓝鲸官网证书<a href="https://bk.tencent.com/download_ssl/">生成页面</a>，根据提示在输入框中填入英文分号分隔的三个 MAC 地址，生成并下载证书<br>上传证书包至<strong>中控机</strong> /data；证书包包名：ssl_certificates.tar.gz</p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p><a href="https://bk.tencent.com/docs/document/6.1/184/22908">部署参考</a></p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>关闭SELinux及默认防火墙(firewalld)<br>安装和运行蓝鲸时，模块之间互相访问的端口策略较多，建议对蓝鲸后台服务器之间关闭防火墙。以下命令每台机器均需执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 官方建议，腾讯云yum源</span></span><br><span class="line">[root@localhost ~]<span class="comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos7_base.repo</span></span><br><span class="line">[root@localhost ~]<span class="comment"># wget -O /etc/yum.repos.d/epel.repo http://mirrors.cloud.tencent.com/repo/epel-7.repo</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># yum clean all</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum makecache </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭防火墙以及selinux</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl stop firewalld</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl disable NetworkManager</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -i &#x27;/^SELINUX=/ s/enforcing/disabled/&#x27;  /etc/selinux/config</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># cat &gt;&gt; /etc/security/limits.conf &lt;&lt;EOF </span></span><br><span class="line">* soft <span class="built_in">nproc</span> 65530 </span><br><span class="line">* hard <span class="built_in">nproc</span> 65530 </span><br><span class="line">* soft nofile 65530 </span><br><span class="line">* hard nofile 65530  </span><br><span class="line">EOF</span><br><span class="line">[root@localhost ~]<span class="comment"># ulimit -n 65535  </span></span><br><span class="line">[root@localhost ~]<span class="comment"># ulimit -u 20480</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 必要环境包</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum install -y rsync pssh jq deltarpm ntpdate epel-release rsync</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步时间</span></span><br><span class="line">[root@localhost ~]<span class="comment"># timedatectl set-timezone Asia/Shanghai</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ntpdate -b ntp1.aliyun.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改主机名 各自分配</span></span><br><span class="line">[root@localhost ~]<span class="comment"># hostnamectl set-hostname lj1</span></span><br></pre></td></tr></table></figure><h2 id="解压资源包"><a href="#解压资源包" class="headerlink" title="解压资源包"></a>解压资源包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 ~]<span class="comment"># cd /data</span></span><br><span class="line">[root@lj1 ~]<span class="comment"># tar xf bkce_basic_suite-6.1.1-beta1.tgz</span></span><br><span class="line"><span class="comment"># 解压各个产品软件包</span></span><br><span class="line">[root@lj1 ~]<span class="comment"># cd /data/src/; for f in *gz;do tar xf $f; done</span></span><br><span class="line"><span class="comment"># 解压证书包</span></span><br><span class="line">[root@lj1 ~]<span class="comment"># install -d -m 755 /data/src/cert</span></span><br><span class="line">[root@lj1 ~]<span class="comment"># tar xf /data/ssl_certificates.tar.gz -C /data/src/cert/</span></span><br><span class="line">[root@lj1 ~]<span class="comment"># chmod 644 /data/src/cert/*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝 rpm 包文件夹到 /opt/ 目录</span></span><br><span class="line">[root@lj1 ~]<span class="comment"># cp -a /data/src/yum /opt</span></span><br></pre></td></tr></table></figure><h2 id="配置install-config"><a href="#配置install-config" class="headerlink" title="配置install.config"></a>配置install.config</h2><p>gse 与 redis 需要部署在同一台机器上。<br>当含多个内网 IP 时，默认使用 /sbin/ifconfig 输出中的第一个内网 IP。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 ~]<span class="comment">#  cat &lt;&lt; EOF &gt;/data/install/install.config</span></span><br><span class="line">[basic]</span><br><span class="line">10.11.8.69 iam,ssm,usermgr,gse,license,redis,consul,es7</span><br><span class="line">10.11.8.70 paas,nginx,consul,mongodb,rabbitmq,appo,zk(config)</span><br><span class="line">10.11.8.71 cmdb,job,mysql,appt,consul,nodeman(nodeman)</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="执行免密"><a href="#执行免密" class="headerlink" title="执行免密"></a>执行免密</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 ~]<span class="comment"># cd /data/install</span></span><br><span class="line">[root@lj1 ~]<span class="comment"># bash /data/install/configure_ssh_without_pass</span></span><br></pre></td></tr></table></figure><h1 id="部署蓝鲸"><a href="#部署蓝鲸" class="headerlink" title="部署蓝鲸"></a>部署蓝鲸</h1><h2 id="初始化并检查环境"><a href="#初始化并检查环境" class="headerlink" title="初始化并检查环境"></a>初始化并检查环境</h2><p>执行初始化环境操作，并检查环境和部署的配置情况（执行很多操作，耐心等待）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># cd /data/install</span></span><br><span class="line"><span class="comment"># 自己选择安装路径，可以选择使用默认的路径：/data/bkce</span></span><br><span class="line">[root@lj1 install]<span class="comment"># ./bk_install common</span></span><br><span class="line">·········</span><br><span class="line">Replaced:</span><br><span class="line">  mariadb-libs.x86_64 1:5.5.60-1.el7_5                                                                                                                                          </span><br><span class="line">Complete!</span><br><span class="line">如果以上步骤没有报错, 已经完成蓝鲸部署基础依赖安装, 执行以下步骤：</span><br><span class="line"> 1. 通过./bk_install paas, 部署蓝鲸paas平台</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 校验环境和部署的配置</span></span><br><span class="line">[root@lj1 install]<span class="comment"># ./health_check/check_bk_controller.sh</span></span><br><span class="line">&lt;&lt;<span class="string">check_ssh_nopass&gt;&gt; has been checked successfully... SKIP</span></span><br><span class="line"><span class="string">start &lt;&lt;check_hostname_uniq&gt;&gt; ... [OK]</span></span><br><span class="line"><span class="string">start &lt;&lt;check_cert_mac&gt;&gt; ... [OK]</span></span><br><span class="line"><span class="string">start &lt;&lt;check_install_config&gt;&gt; ... [OK]</span></span><br><span class="line"><span class="string">start &lt;&lt;check_domain&gt;&gt; ... [OK]</span></span><br><span class="line"><span class="string">start &lt;&lt;check_src_dir&gt;&gt; ... [OK]</span></span><br></pre></td></tr></table></figure><h2 id="部署PaaS平台"><a href="#部署PaaS平台" class="headerlink" title="部署PaaS平台"></a>部署PaaS平台</h2><p>部署 PaaS 平台及其依赖服务，PaaS 平台部署完成后，可以访问蓝鲸的 PaaS 平台。（执行很多操作，耐心等待）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># ./bk_install paas</span></span><br><span class="line">·········</span><br><span class="line">add bk_user_manage to esb skip_user_auth white list succeed</span><br><span class="line">add bk_itsm to esb skip_user_auth white list succeed</span><br><span class="line">add bk_bcs_app to esb skip_user_auth white list succeed</span><br><span class="line"></span><br><span class="line">如果以上步骤没有报错, 你现在可以通过 http://paas.bktencent.com:80 访问 paas 平台,</span><br><span class="line">登陆用户名(login user): admin</span><br><span class="line">登陆密码(login password): rnFZKPhdQ587</span><br><span class="line"></span><br><span class="line">蓝鲸智云后台管理 http://paas.bktencent.com/admin</span><br></pre></td></tr></table></figure><h3 id="Windows配置"><a href="#Windows配置" class="headerlink" title="Windows配置"></a>Windows配置</h3><p>C:\Windows\System32\drivers\etc\hosts<br>将以下内容复制到上述文件内，并将以下 IP 需更换为本机浏览器可以访问的 IP，然后保存。<br>10.11.8.70 paas.bktencent.com cmdb.bktencent.com job.bktencent.com jobapi.bktencent.com bkapi_check.bktencent.com<br>10.11.8.71 nodeman.bktencent.com<br>注意： 10.11.8.70 为 nginx 模块所在的机器，10.11.8.71 为 nodeman 模块所在的机器。IP 需更换为本机浏览器可以访问的 IP。<br>查询模块所分布在机器的方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 ~]<span class="comment"># grep -E &quot;nginx|nodeman&quot; /data/install/install.config</span></span><br><span class="line">10.11.8.70 paas,nginx,consul,mongodb,rabbitmq,appo,zk(config)</span><br><span class="line">10.11.8.71 cmdb,job,mysql,appt,consul,nodeman(nodeman)</span><br></pre></td></tr></table></figure><h3 id="Linux-Mac-OS-配置"><a href="#Linux-Mac-OS-配置" class="headerlink" title="Linux / Mac OS 配置"></a>Linux / Mac OS 配置</h3><p>将以下内容复制到 /etc/hosts 中，并将以下 IP 需更换为本机浏览器可以访问的 IP，然后保存。<br>10.11.8.70 paas.bktencent.com cmdb.bktencent.com job.bktencent.com jobapi.bktencent.com bkapi_check.bktencent.com<br>10.11.8.71 nodeman.bktencent.com</p><h3 id="找回密码"><a href="#找回密码" class="headerlink" title="找回密码"></a>找回密码</h3><p>在任意一台机器上，执行以下命令，获取管理员账号和密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 ~]<span class="comment"># grep -E &quot;BK_PAAS_ADMIN_USERNAME|BK_PAAS_ADMIN_PASSWORD&quot; /data/install/bin/04-final/usermgr.env</span></span><br><span class="line">BK_PAAS_ADMIN_PASSWORD=rnFZKPhdQ587</span><br><span class="line">BK_PAAS_ADMIN_USERNAME=admin</span><br></pre></td></tr></table></figure><h2 id="部署app-mgr"><a href="#部署app-mgr" class="headerlink" title="部署app_mgr"></a>部署app_mgr</h2><p>部署 SaaS 运行环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># ./bk_install app_mgr</span></span><br><span class="line">Service                  Status  Description</span><br><span class="line">rabbitmq-server.service  active  pid 18744 (beam.smp), <span class="built_in">uptime</span> 47min ago</span><br><span class="line"></span><br><span class="line">如果以上步骤没有报错, 已经完成 PaaSAgent正式环境及测试环境 的部署，接下来可以:</span><br><span class="line"> 1. 通过./bk_install saas-o bk_nodeman 部署节点管理app</span><br><span class="line"> 2. 通过开发者中心部署app.</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221219165355.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221219170124.png"></p><h2 id="部署权限中心与用户管理"><a href="#部署权限中心与用户管理" class="headerlink" title="部署权限中心与用户管理"></a>部署权限中心与用户管理</h2><p>部署权限中心 SaaS 和 部署用户管理 SaaS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># ./bk_install saas-o bk_iam</span></span><br><span class="line">·········</span><br><span class="line">2022-12-19 19:48:01 74   INFO   check deploy result. retry 64</span><br><span class="line">2022-12-19 19:48:03 74   INFO   check deploy result. retry 65</span><br><span class="line">2022-12-19 19:48:03 80   INFO   bk_iam have been deployed successfully</span><br><span class="line">[10.11.8.69]20221219-194803 177   SaaS application bk_iam has been deployed successfully</span><br><span class="line"></span><br><span class="line">如果以上步骤没有报错, 已经完成 蓝鲸SaaS(bk_iam) 的部署</span><br><span class="line"></span><br><span class="line">[root@lj1 install]<span class="comment"># ./bk_install saas-o bk_user_manage</span></span><br><span class="line">·········</span><br><span class="line">2022-12-19 19:55:05 74   INFO   check deploy result. retry 82</span><br><span class="line">2022-12-19 19:55:08 74   INFO   check deploy result. retry 83</span><br><span class="line">2022-12-19 19:55:08 80   INFO   bk_user_manage have been deployed successfully</span><br><span class="line">[10.11.8.69]20221219-195508 177   SaaS application bk_user_manage has been deployed successfully</span><br><span class="line"></span><br><span class="line">如果以上步骤没有报错, 已经完成 蓝鲸SaaS(bk_user_manage) 的部署</span><br></pre></td></tr></table></figure><h2 id="部署-CMDB"><a href="#部署-CMDB" class="headerlink" title="部署 CMDB"></a>部署 CMDB</h2><p>部署配置平台及其依赖服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># ./bk_install cmdb</span></span><br><span class="line">·········</span><br><span class="line">bk-cmdb-proc.service            active  pid 20557 (cmdb_procserver), <span class="built_in">uptime</span> 7min ago</span><br><span class="line">bk-cmdb-task.service            active  pid 20528 (cmdb_taskserver), <span class="built_in">uptime</span> 7min ago</span><br><span class="line">bk-cmdb-topo.service            active  pid 20545 (cmdb_toposerver), <span class="built_in">uptime</span> 7min ago</span><br><span class="line">bk-cmdb-web.service             active  pid 20543 (cmdb_webserver), <span class="built_in">uptime</span> 7min ago</span><br><span class="line"></span><br><span class="line">如果以上步骤没有报错, 你现在可以通过 http://cmdb.bktencent.com:80 访问配置平台,</span><br></pre></td></tr></table></figure><h2 id="部署-JOB"><a href="#部署-JOB" class="headerlink" title="部署 JOB"></a>部署 JOB</h2><p>部署作业平台后台模块及其依赖组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># ./bk_install job</span></span><br><span class="line">·········</span><br><span class="line">bk-job-logsvr.service    active  pid 23895 (java), <span class="built_in">uptime</span> 1min 0s ago</span><br><span class="line">bk-job-backup.service    active  pid 23837 (java), <span class="built_in">uptime</span> 36s ago</span><br><span class="line">bk-job-analysis.service  active  pid 23830 (java), <span class="built_in">uptime</span> 49s ago</span><br><span class="line"></span><br><span class="line">如果以上步骤没有报错, 你现在可以通过 http://job.bktencent.com:80 访问作业平台,</span><br></pre></td></tr></table></figure><h2 id="部署-bknodeman"><a href="#部署-bknodeman" class="headerlink" title="部署 bknodeman"></a>部署 bknodeman</h2><p>部署节点管理后台模块、节点管理 SaaS 及其依赖组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bknodeman会包含 saas-o bk_nodeman</span></span><br><span class="line">[root@lj1 install]<span class="comment"># ./bk_install bknodeman</span></span><br><span class="line">nodeman_api                             RUNNING  pid 28881, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_apply_resource_watched_events   RUNNING  pid 28882, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_celery_backend:~_00             RUNNING  pid 28883, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_celery_backend_additional:~_00  RUNNING  pid 28884, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_celery_beat:~_00                RUNNING  pid 28886, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_celery_default:~_00             RUNNING  pid 28889, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_pipeline_additional:~_00        RUNNING  pid 28890, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_pipeline_schedule:~_00          RUNNING  pid 28891, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_pipeline_schedule:~_01          RUNNING  pid 28893, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_pipeline_worker:~_00            RUNNING  pid 28895, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_pipeline_worker:~_01            RUNNING  pid 28896, <span class="built_in">uptime</span> 0:15:27</span><br><span class="line">nodeman_sync_host_event                 RUNNING  pid 29776, <span class="built_in">uptime</span> 0:03:20</span><br><span class="line">nodeman_sync_host_relation_event        RUNNING  pid 29771, <span class="built_in">uptime</span> 0:03:21</span><br><span class="line">nodeman_sync_process_event              RUNNING  pid 29804, <span class="built_in">uptime</span> 0:02:28</span><br><span class="line">consul-template.service                 active   pid 19612 (consul-template), <span class="built_in">uptime</span> 3h 56min ago</span><br><span class="line">openresty.service                       active   pid 19515 (nginx), <span class="built_in">uptime</span> 3h 56min ago</span><br><span class="line"></span><br><span class="line">如果以上步骤没有报错, 节点管理部署完成</span><br><span class="line"></span><br><span class="line"><span class="comment">#[root@lj1 install]# ./bk_install saas-o bk_nodeman  ？？</span></span><br></pre></td></tr></table></figure><h2 id="部署标准运维及流程服务"><a href="#部署标准运维及流程服务" class="headerlink" title="部署标准运维及流程服务"></a>部署标准运维及流程服务</h2><p>部署标准运维 SaaS 和 部署流程管理 SaaS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># ./bk_install saas-o bk_sops</span></span><br><span class="line">·········</span><br><span class="line">2022-12-19 20:41:08 74   INFO   check deploy result. retry 91</span><br><span class="line">2022-12-19 20:41:10 74   INFO   check deploy result. retry 92</span><br><span class="line">2022-12-19 20:41:11 80   INFO   bk_sops have been deployed successfully</span><br><span class="line">[10.11.8.69]20221219-204111 177   SaaS application bk_sops has been deployed successfully</span><br><span class="line"></span><br><span class="line">如果以上步骤没有报错, 已经完成 蓝鲸SaaS(bk_sops) 的部署</span><br><span class="line">[root@lj1 install]<span class="comment"># ./bk_install saas-o bk_itsm</span></span><br><span class="line">·········</span><br><span class="line">2022-12-19 21:01:19 74   INFO   check deploy result. retry 85</span><br><span class="line">2022-12-19 21:01:20 80   INFO   bk_itsm have been deployed successfully</span><br><span class="line">[10.11.8.69]20221219-210120 177   SaaS application bk_itsm has been deployed successfully</span><br><span class="line"></span><br><span class="line">如果以上步骤没有报错, 已经完成 蓝鲸SaaS(bk_itsm) 的部署</span><br></pre></td></tr></table></figure><h2 id="加载蓝鲸相关维护命令"><a href="#加载蓝鲸相关维护命令" class="headerlink" title="加载蓝鲸相关维护命令"></a>加载蓝鲸相关维护命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure><h2 id="初始化蓝鲸业务拓扑"><a href="#初始化蓝鲸业务拓扑" class="headerlink" title="初始化蓝鲸业务拓扑"></a>初始化蓝鲸业务拓扑</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># ./bkcli initdata topo</span></span><br><span class="line">2022-12-19 21:04:52,264 358  INFO   服务模板 -&gt; [service_template] 创建成功</span><br><span class="line">2022-12-19 21:04:52,568 358  INFO   服务模板 -&gt; [bk-iam] 创建成功</span><br><span class="line">2022-12-19 21:04:52,789 358  INFO   服务模板 -&gt; [bkiam-search-engine] 创建成功</span><br><span class="line">·········</span><br><span class="line">create bcs(1) 集群模板成功</span><br><span class="line">bcs(1) <span class="built_in">set</span> template is already up to <span class="built_in">date</span></span><br><span class="line">create cmdb(2) 集群模板成功</span><br><span class="line">update cmdb(2) successful</span><br><span class="line">create controller(3) 集群模板成功</span><br><span class="line">·········</span><br><span class="line">2022-12-19 21:05:49,149 145  INFO   蓝鲸业务集群 -&gt; [中控机] 创建成功</span><br><span class="line">2022-12-19 21:05:49,502 145  INFO   蓝鲸业务集群 -&gt; [PaaS平台] 创建成功</span><br><span class="line">2022-12-19 21:05:49,699 145  INFO   蓝鲸业务集群 -&gt; [用户认证平台] 创建成功</span><br><span class="line">2022-12-19 21:05:50,002 145  INFO   蓝鲸业务集群 -&gt; [作业平台v3] 创建成功</span><br><span class="line">·········</span><br><span class="line">2022-12-19 21:06:04,833 713  INFO   Host -&gt; [10.11.8.71]  registered module -&gt; [job-backup] success</span><br><span class="line">2022-12-19 21:06:05,019 713  INFO   Host -&gt; [10.11.8.71]  registered module -&gt; [job-analysis] success</span><br><span class="line">2022-12-19 21:06:05,196 713  INFO   Host -&gt; [10.11.8.71]  registered module -&gt; [nodeman-api] success</span><br></pre></td></tr></table></figure><h2 id="检测相关服务状态"><a href="#检测相关服务状态" class="headerlink" title="检测相关服务状态"></a>检测相关服务状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@lj1 install]<span class="comment"># cd /data/install/</span></span><br><span class="line">[root@lj1 install]<span class="comment"># echo bkssm bkiam usermgr paas cmdb gse job consul | xargs -n 1 ./bkcli check</span></span><br><span class="line">[1] 21:07:50 [SUCCESS] 10.11.8.69</span><br><span class="line">bkssm(http://10.11.8.69:5000/healthz)        : <span class="literal">true</span></span><br><span class="line">[1] 21:07:51 [SUCCESS] 10.11.8.69</span><br><span class="line">bkiam(http://10.11.8.69:5001/healthz)        : <span class="literal">true</span></span><br><span class="line">[1] 21:07:52 [SUCCESS] 10.11.8.69</span><br><span class="line">usermgr(http://10.11.8.69:8009/healthz/)     : <span class="literal">true</span></span><br><span class="line">[1] 21:07:53 [SUCCESS] 10.11.8.70</span><br><span class="line">paas-apigw(http://10.11.8.70:8005/api/healthz/): <span class="literal">true</span></span><br><span class="line">paas-appengine(http://10.11.8.70:8000/v1/healthz/): <span class="literal">true</span></span><br><span class="line">·········</span><br><span class="line">[1] 21:08:22 [SUCCESS] 10.11.8.69</span><br><span class="line">bk-gse-alarm   : running</span><br><span class="line">bk-gse-api     : running</span><br><span class="line">bk-gse-btsvr   : running</span><br><span class="line">bk-gse-config  : running</span><br><span class="line">bk-gse-data    : running</span><br><span class="line">bk-gse-dba     : running</span><br><span class="line">bk-gse-procmgr : running</span><br><span class="line">bk-gse-task    : running</span><br><span class="line"></span><br><span class="line">                      check job backend health                      </span><br><span class="line">[1] 21:08:24 [SUCCESS] 10.11.8.71</span><br><span class="line">job-execute    : <span class="literal">true</span></span><br><span class="line">job-backup     : <span class="literal">true</span></span><br><span class="line">job-logsvr     : <span class="literal">true</span></span><br><span class="line">job-crontab    : <span class="literal">true</span></span><br><span class="line">job-config     : <span class="literal">true</span></span><br><span class="line">job-analysis   : <span class="literal">true</span></span><br><span class="line">job-gateway-management: <span class="literal">true</span></span><br><span class="line">job-manage     : <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">                     check job frontend resource                     </span><br><span class="line">[1] 21:08:25 [SUCCESS] 10.11.8.70</span><br><span class="line">-rw-r--r-- 1 blueking blueking 2170 Dec 19 19:37 /data/bkce/job/frontend/index.html</span><br><span class="line">[1] 21:08:26 [SUCCESS] 10.11.8.69</span><br><span class="line">check_consul_process [OK]</span><br><span class="line">check_consul_listen_udp_53 [OK]</span><br><span class="line">·········</span><br><span class="line">check_consul_critical_svc [OK]</span><br><span class="line">check_resolv_conf_127.0.0.1 [OK]</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 自动化 </category>
          
          <category> 蓝鲸智云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vCenter系统空间问题.md</title>
      <link href="/exsi_vCenter_kongjian/"/>
      <url>/exsi_vCenter_kongjian/</url>
      
        <content type="html"><![CDATA[<p><strong>VC出现（log Disk Exhaustion on vc）磁盘空间满解决方法</strong></p><p><a href="https://blog.csdn.net/yzqtcc/article/details/124577270">参考地址</a><br>有两种方法：<br>第一找到对应的存放日志文件目录，删除一些日志包（但是删除日志包毕竟不能彻底解决问题）<br><img src="https://qiufuqi.github.io/img/hexo/20221216170348.png"><br>或者进入管理后台查看 ip:5480 =&gt; 监控 =&gt; 磁盘<br><img src="https://qiufuqi.github.io/img/hexo/20221216170704.png"></p><p>第二就是对VC相应的日志对应的盘进行扩容<br>注意：只要是改变原VC状态的操作都会存在风险，扩容不管是在Linux里面是VC存在风险。最好是备份一下（加盘后再去克隆是克隆不了的）</p><p>可以看下图所示，/storage/log文件已经到了81%。<br><img src="https://qiufuqi.github.io/img/hexo/20221216170424.png"><br>找到对应的log_vg-log使用的物理卷，并找到是VC上的第几块盘<br><img src="https://qiufuqi.github.io/img/hexo/20221216170436.png"><br>然后从原来的10G扩容在20G（依据实际需求来扩容大小）然后重启<br><img src="https://qiufuqi.github.io/img/hexo/20221216170454.png"><br>增加虚拟磁盘空间后，返回 SSH 会话，然后运行以下命令以自动展开所有增加了物理卷的逻辑卷：<br>/usr/lib/applmgmt/support/scripts/autogrow.sh<br><img src="https://qiufuqi.github.io/img/hexo/20221216170508.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221216170516.png"><br>最后查看<br><img src="https://qiufuqi.github.io/img/hexo/20221216170530.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vCenter证书过期问题</title>
      <link href="/exsi_vCenter_certify/"/>
      <url>/exsi_vCenter_certify/</url>
      
        <content type="html"><![CDATA[<p><strong>Vmware vCenter 6.7证书过期问题</strong></p><p><a href="https://blog.csdn.net/colalovescoffee/article/details/127528479">参考地址</a></p><h1 id="故障现象"><a href="#故障现象" class="headerlink" title="故障现象"></a>故障现象</h1><p>登陆VC报错。<br><img src="https://qiufuqi.github.io/img/hexo/20221216171423.png"></p><h1 id="进入命令行"><a href="#进入命令行" class="headerlink" title="进入命令行"></a>进入命令行</h1><p>按照报错信息，结合官方文档，判断为STS证书过期导致。<br>vCenter Server Appliance (VCSA) 6.5.x, 6.7.x or vCenter Server 7.0.x<br><strong>/var/log/vmware/vpxd-svcs/vpxd-svcs.log</strong>看到类似报错:<br>ERROR com.vmware.vim.sso.client.impl.SecurityTokenServiceImpl$RequestResponseProcessor opId=] Server rejected the provided time range. Cause:ns0:InvalidTimeRange: The token authority rejected an issue request for TimePeriod [startTime=Thu Oct 02 09:22:13 EST 2022, endTime=Fri Oct 03 09:22:13 EST 2022] :: Signing certificate is not valid at Thu Jan 02 09:22:13 EST 2020, cert validity: TimePeriod [startTime=Wed Jan 06 20:44:39 EST 2010, endTime=Wed Jan 01 20:54:23 EST 2020]</p><p>Note: The endTime should be a date in the past if the certificate is expired.</p><p>These issue occurs when the Security Token Service (STS) certificate has expired. This causes internal services and solution users to not be able to acquire valid tokens and as a result fails to function as expected.</p><h1 id="查看证书过期"><a href="#查看证书过期" class="headerlink" title="查看证书过期"></a>查看证书过期</h1><p>(我的证书尚未过期)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@localhost [ ~ ]<span class="comment"># for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); do echo STORE $i; sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;; done</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221216171652.png"><br>如果证书的确已经过期,继续执行以下步骤。</p><h1 id="更新证书"><a href="#更新证书" class="headerlink" title="更新证书"></a>更新证书</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line">root@dxcvcsa [ ~ ]<span class="comment"># /usr/lib/vmware-vmca/bin/certificate-manager</span></span><br><span class="line">_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |      *** Welcome to the vSphere 6.7 Certificate Manager  ***        |</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |                   -- Select Operation --                            |</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |      1. Replace Machine SSL certificate with Custom Certificate     |</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |      2. Replace VMCA Root certificate with Custom Signing           |</span><br><span class="line"></span><br><span class="line">                |         Certificate and replace all Certificates                    |</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |      3. Replace Machine SSL certificate with VMCA Certificate       |</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |      4. Regenerate a new VMCA Root Certificate and                  |</span><br><span class="line"></span><br><span class="line">                |         replace all certificates                                    |</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |      5. Replace Solution user certificates with                     |</span><br><span class="line"></span><br><span class="line">                |         Custom Certificate                                          |</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |      6. Replace Solution user certificates with VMCA certificates   |</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |      7. Revert last performed operation by re-publishing old        |</span><br><span class="line"></span><br><span class="line">                |         certificates                                                |</span><br><span class="line"></span><br><span class="line">                |                                                                     |</span><br><span class="line"></span><br><span class="line">                |      8. Reset all Certificates                                      |</span><br><span class="line"></span><br><span class="line">                |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|</span><br><span class="line"></span><br><span class="line">Note : Use Ctrl-D to <span class="built_in">exit</span>.</span><br><span class="line"></span><br><span class="line">Option[1 to 8]: 4     </span><br><span class="line"></span><br><span class="line">Do you wish to generate all certificates using configuration file : Option[Y/N] ? : y</span><br><span class="line"></span><br><span class="line">Please provide valid SSO and VC privileged user credential to perform certificate operations.</span><br><span class="line"></span><br><span class="line">Enter username [Administrator@vsphere.local]:Administrator@vsphere.local</span><br><span class="line"></span><br><span class="line">Enter password:</span><br><span class="line"></span><br><span class="line">certool.cfg file exists, Do you wish to reconfigure : Option[Y/N] ? : y</span><br><span class="line"></span><br><span class="line">Press Enter key to skip optional parameters or use Previous value.</span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> <span class="string">&#x27;Country&#x27;</span> [Previous value : US] : cn</span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> <span class="string">&#x27;Name&#x27;</span> [Previous value : CA] : CA</span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> <span class="string">&#x27;Organization&#x27;</span> [Previous value : VMware] : VMware</span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> <span class="string">&#x27;OrgUnit&#x27;</span> [Previous value : VMware Engineering] : VMware Engineering</span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> <span class="string">&#x27;State&#x27;</span> [Previous value : California] : GuangDong   </span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> <span class="string">&#x27;Locality&#x27;</span> [Previous value : Palo Alto] : Guangzhou</span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> <span class="string">&#x27;IPAddress&#x27;</span> (Provide comma separated values <span class="keyword">for</span> multiple IP addresses) [optional] : 127.0.0.1</span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> <span class="string">&#x27;Email&#x27;</span> [Previous value : email@acme.com] : email@acme.com</span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> <span class="string">&#x27;Hostname&#x27;</span> (Provide comma separated values <span class="keyword">for</span> multiple Hostname entries) [Enter valid Fully Qualified Domain Name(FQDN), For Example : example.domain.com] : dxcvcsa.localdns.com</span><br><span class="line"></span><br><span class="line">Enter proper value <span class="keyword">for</span> VMCA <span class="string">&#x27;Name&#x27;</span> :dxcVMCA</span><br><span class="line"></span><br><span class="line">You are going to regenerate Root Certificate and all other certificates using VMCA</span><br><span class="line"></span><br><span class="line">Continue operation : Option[Y/N] ? : y</span><br><span class="line"></span><br><span class="line">Get site nameCompleted [Replacing Machine SSL Cert...]                 </span><br><span class="line"></span><br><span class="line">default-site</span><br><span class="line"></span><br><span class="line">Lookup all services</span><br><span class="line"></span><br><span class="line">Get service default-site:45ee0951-9cf9-4c22-8641-a791f5e935c8</span><br><span class="line"></span><br><span class="line">Don<span class="string">&#x27;t update service default-site:45ee0951-9cf9-4c22-8641-a791f5e935c8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service default-site:adf34f62-1d81-467b-9f76-59304c504388</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Don&#x27;</span>t update service default-site:adf34f62-1d81-467b-9f76-59304c504388</span><br><span class="line"></span><br><span class="line">Get service default-site:452dfd21-741a-4286-b59f-e4479fd73d02</span><br><span class="line"></span><br><span class="line">Don<span class="string">&#x27;t update service default-site:452dfd21-741a-4286-b59f-e4479fd73d02</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 9356d7ff-5045-4720-a142-3e1561dc2caa</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 9356d7ff-5045-4720-a142-3e1561dc2caa; spec: /tmp/svcspec_o29ann0i</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service eb760607-6057-4c8f-bffe-c4459a23361a</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service eb760607-6057-4c8f-bffe-c4459a23361a; spec: /tmp/svcspec_f9a6t5iv</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service e72dc500-379b-445c-a6a2-934980d7697f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service e72dc500-379b-445c-a6a2-934980d7697f; spec: /tmp/svcspec_q745wbdl</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service cc66bae3-9a81-4a47-bfc2-f56b521a3491</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service cc66bae3-9a81-4a47-bfc2-f56b521a3491; spec: /tmp/svcspec_h6wiab6b</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service ff3c666a-8048-401c-8e5d-3cc29d783d5f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service ff3c666a-8048-401c-8e5d-3cc29d783d5f; spec: /tmp/svcspec_734jtjut</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 47bbd5fd-cdd8-4c43-a839-9cac3c4ffb14_kv</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 47bbd5fd-cdd8-4c43-a839-9cac3c4ffb14_kv; spec: /tmp/svcspec_5q6r0b9z</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 0d2020df-096e-401f-bfbe-22ab3c73e321</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 0d2020df-096e-401f-bfbe-22ab3c73e321; spec: /tmp/svcspec_rnepbocv</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 40d4c99b-3840-4e75-ae9f-01c1a1d51693</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 40d4c99b-3840-4e75-ae9f-01c1a1d51693; spec: /tmp/svcspec_2ej9pwvm</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service f9210573-346b-48c1-a0f4-57e469eed937</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service f9210573-346b-48c1-a0f4-57e469eed937; spec: /tmp/svcspec_rgu720he</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 18db73cb-840d-4dc9-b591-af78cb26699d</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 18db73cb-840d-4dc9-b591-af78cb26699d; spec: /tmp/svcspec_vhd1si6e</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 447163a3-d02e-41cb-bedf-6bb6bc52c882</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 447163a3-d02e-41cb-bedf-6bb6bc52c882; spec: /tmp/svcspec_2vt5_pkn</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 1f305057-ad6e-46f2-816f-b638cbe5f8cc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 1f305057-ad6e-46f2-816f-b638cbe5f8cc; spec: /tmp/svcspec_ed9zzks0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 47bbd5fd-cdd8-4c43-a839-9cac3c4ffb14</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 47bbd5fd-cdd8-4c43-a839-9cac3c4ffb14; spec: /tmp/svcspec_uu_hj1bs</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 81ef1813-f5da-4a52-bf5e-730b0d76c45b</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 81ef1813-f5da-4a52-bf5e-730b0d76c45b; spec: /tmp/svcspec_o9q1aqf5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 9968f0d6-7c05-4b00-a0bf-61cd8138c29f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 9968f0d6-7c05-4b00-a0bf-61cd8138c29f; spec: /tmp/svcspec_332zqona</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 2472164c-9862-4209-9377-e6c9310bf544</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 2472164c-9862-4209-9377-e6c9310bf544; spec: /tmp/svcspec_vllnxe3y</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service e8e5ba87-5834-40e3-8697-7524754dba64</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service e8e5ba87-5834-40e3-8697-7524754dba64; spec: /tmp/svcspec_ytjr_fpf</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service f351ae3e-99db-4cb6-b559-2afe53406c8d</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service f351ae3e-99db-4cb6-b559-2afe53406c8d; spec: /tmp/svcspec_ahxrtfp2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 81bd2bd9-9fc1-481f-bf8f-744a54e0fb76</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 81bd2bd9-9fc1-481f-bf8f-744a54e0fb76; spec: /tmp/svcspec_b9p8e9r_</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 87a6c98a-046f-46ec-9aba-d66a30c0a91b</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 87a6c98a-046f-46ec-9aba-d66a30c0a91b; spec: /tmp/svcspec_l5nahdu6</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service b496d4b6-7560-4f58-9129-ce594ee96778</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service b496d4b6-7560-4f58-9129-ce594ee96778; spec: /tmp/svcspec_qy6458zi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 3888acd4-aa58-4c5f-8b43-30f454f4d97f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 3888acd4-aa58-4c5f-8b43-30f454f4d97f; spec: /tmp/svcspec_tgdq0mzy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service d690b63c-6105-4411-8e14-1d10259b812f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service d690b63c-6105-4411-8e14-1d10259b812f; spec: /tmp/svcspec_95zuwvcb</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 174b1a17-b44b-4967-bb94-4f7c531ba800</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 174b1a17-b44b-4967-bb94-4f7c531ba800; spec: /tmp/svcspec_crrn4enf</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 47bbd5fd-cdd8-4c43-a839-9cac3c4ffb14_authz</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 47bbd5fd-cdd8-4c43-a839-9cac3c4ffb14_authz; spec: /tmp/svcspec_s6zjph53</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service 34585982-ec94-4a93-bc1f-f80eecdaf88d</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service 34585982-ec94-4a93-bc1f-f80eecdaf88d; spec: /tmp/svcspec_p_xvj30r</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service f8a197a6-4fdb-4dcb-baa7-cc4825f824dc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service f8a197a6-4fdb-4dcb-baa7-cc4825f824dc; spec: /tmp/svcspec_mnjwbgp6</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service dfa6cc50-dbe5-4997-bd8d-949e75be87e8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Update service dfa6cc50-dbe5-4997-bd8d-949e75be87e8; spec: /tmp/svcspec_fzje6ttg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Get service eb760607-6057-4c8f-bffe-c4459a23361a_com.vmware.vsphere.client</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Don&#x27;</span>t update service eb760607-6057-4c8f-bffe-c4459a23361a_com.vmware.vsphere.client</span><br><span class="line"></span><br><span class="line">Get service bc5ba386-ce79-42de-a8f9-67c6b8f03bf1</span><br><span class="line"></span><br><span class="line">Update service bc5ba386-ce79-42de-a8f9-67c6b8f03bf1; spec: /tmp/svcspec_40_4ncxp</span><br><span class="line"></span><br><span class="line">Get service 024591a5-3492-4567-81d7-0439f2113196</span><br><span class="line"></span><br><span class="line">Update service 024591a5-3492-4567-81d7-0439f2113196; spec: /tmp/svcspec__s5my1_r</span><br><span class="line"></span><br><span class="line">Get service 5944fc2d-78d7-42f1-9a17-efc9fa0bbff3</span><br><span class="line"></span><br><span class="line">Update service 5944fc2d-78d7-42f1-9a17-efc9fa0bbff3; spec: /tmp/svcspec_wnt0axw7</span><br><span class="line"></span><br><span class="line">Get service eb760607-6057-4c8f-bffe-c4459a23361a_com.commvault.vsa</span><br><span class="line"></span><br><span class="line">Don<span class="string">&#x27;t update service eb760607-6057-4c8f-bffe-c4459a23361a_com.commvault.vsa</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Updated 31 service(s)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Status : 60% Completed [Replace vpxd-extension Cert...]                    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2022-10-26T00:46:00.988Z  Updating certificate for &quot;com.vmware.imagebuilder&quot; extension</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Status : 85% Completed [starting services...]    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Status : 100% Completed [All tasks completed successfully]  </span></span><br></pre></td></tr></table></figure><p>更新完毕</p><h1 id="查看服务状态"><a href="#查看服务状态" class="headerlink" title="查看服务状态"></a>查看服务状态</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service-control --stop –-all</span><br><span class="line">service-control --start --all</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221216171908.png"></p><h1 id="查看证书状态"><a href="#查看证书状态" class="headerlink" title="查看证书状态"></a>查看证书状态</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@localhost [ ~ ]<span class="comment"># for i in $(/usr/lib/vmware-vmafd/bin/vecs-cli store list); do echo STORE $i; sudo /usr/lib/vmware-vmafd/bin/vecs-cli entry list --store $i --text | egrep &quot;Alias|Not After&quot;; done</span></span><br></pre></td></tr></table></figure><h1 id="登录vCenter"><a href="#登录vCenter" class="headerlink" title="登录vCenter"></a>登录vCenter</h1><p>正常登录VC  查看证书信息 VC恢复使用<br><img src="https://qiufuqi.github.io/img/hexo/20221216172019.png"><br>重新生成证书所用信息，已在证书体现，有个细节就是country填的是cn，这里显示的还是US<br><img src="https://qiufuqi.github.io/img/hexo/20221216172100.png"><br>有专用脚本检测证书状态<br><img src="https://qiufuqi.github.io/img/hexo/20221216172122.png"></p><h1 id="证书存放位置"><a href="#证书存放位置" class="headerlink" title="证书存放位置"></a>证书存放位置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@dxcvcsa [ /usr/lib/vmware-vmca/share/config ]<span class="comment"># cat   /var/tmp/vmware/certool.cfg</span></span><br><span class="line">Country = cn</span><br><span class="line">Name = CA</span><br><span class="line">Organization = VMware</span><br><span class="line">OrgUnit = VMware Engineering</span><br><span class="line">State = GuangDong</span><br><span class="line">Locality = Guangzhou</span><br><span class="line">IPAddress = 127.0.0.1</span><br><span class="line">Email = email@acme.com</span><br><span class="line">Hostname = dxcvcsa.localdns.com</span><br><span class="line">root@dxcvcsa [ /usr/lib/vmware-vmca/share/config ]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>默认证书存放位置</strong><br>The Certool.cfg is located at:<br>vCenter Server Appliance: /usr/lib/vmware-vmca/share/config/certool.cfg<br>External Platform Service Controller Appliance: /usr/lib/vmware-vmca/share/config/certool.cfg</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vCenter重置密码问题</title>
      <link href="/exsi_vCenter_passwd/"/>
      <url>/exsi_vCenter_passwd/</url>
      
        <content type="html"><![CDATA[<p><strong>Vmware vCenter 6.7重置密码</strong></p><p><a href="https://blog.csdn.net/yzqtcc/article/details/124577270">参考地址</a></p><p>vCenter root 密码和SSO登入密码忘记，及VC出现（log Disk Exhaustion on vc）日志盘满的报错</p><p>进行以下操作时，做个<strong>快照</strong>或者其他可以回退的方法<br>有时候web界面键盘输入就会有各种问题（也是为避免误操作），建议下载VMRC或者用Workstations对VC进行命令操作。</p><h1 id="重置root密码"><a href="#重置root密码" class="headerlink" title="重置root密码"></a>重置root密码</h1><h2 id="重启vCenter"><a href="#重启vCenter" class="headerlink" title="重启vCenter"></a>重启vCenter</h2><p>在看到 Photon OS 启动屏幕，按 e 键进入 GNU GRUB 编辑菜单。到Linux这一行的末尾输入 rw init=/bin/bash 然后按F10继续引导。<br><img src="https://qiufuqi.github.io/img/hexo/20221216165146.png"></p><h2 id="运行重置命令"><a href="#运行重置命令" class="headerlink" title="运行重置命令"></a>运行重置命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,rw /</span><br><span class="line">passwd</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221216165229.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221216165239.png"></p><h2 id="重启vCenter-1"><a href="#重启vCenter-1" class="headerlink" title="重启vCenter"></a>重启vCenter</h2><p>输入reboot -f 重启VC</p><h1 id="重置administrator密码"><a href="#重置administrator密码" class="headerlink" title="重置administrator密码"></a>重置administrator密码</h1><p>通过root登录vcenter系统</p><h2 id="执行重置操作命令"><a href="#执行重置操作命令" class="headerlink" title="执行重置操作命令"></a>执行重置操作命令</h2><p>运行 /usr/lib/vmware-vmdir/bin/vdcadmintool<br><img src="https://qiufuqi.github.io/img/hexo/20221216165842.png"></p><h2 id="输入UPN账户"><a href="#输入UPN账户" class="headerlink" title="输入UPN账户"></a>输入UPN账户</h2><p>提示输入帐户 UPN （就是登入VC web界面的账户）然后会出现一串负复杂的随机的密码。<br><img src="https://qiufuqi.github.io/img/hexo/20221216165931.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS重置开机密码</title>
      <link href="/centos_passwd/"/>
      <url>/centos_passwd/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS重置密码"><a href="#CentOS重置密码" class="headerlink" title="CentOS重置密码"></a>CentOS重置密码</h1><p><strong>CentOS7系统重置密码和解封账号</strong></p><h2 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h2><p>启动Linux Centos7系统，当出现如下画面时，直接按“e”键继续。<br><img src="https://qiufuqi.github.io/img/hexo/20221212142556.png"><br>按向下箭头，一直下滑直至看到如下界面<br><img src="https://qiufuqi.github.io/img/hexo/20221212142610.png"><br>在如下截图的位置，添加“rw single init=/bin/bash”，添加后按“Ctrl + x”引导系统。<br><img src="https://qiufuqi.github.io/img/hexo/20221212142624.png"><br>在如下截图位置，即可输入“自定义新密码”来重置root密码了。<br><img src="https://qiufuqi.github.io/img/hexo/20221212142640.png"><br>运行命令“exec /sbin/init”来正常启动系统，需要输入修改后的root密码。<br><img src="https://qiufuqi.github.io/img/hexo/20221212142655.png"><br>进入系统后，输入命令“reboot”即可重启系统，重启之后输入用户名和修改以后的密码即可正常进入了。</p><h2 id="账户锁定"><a href="#账户锁定" class="headerlink" title="账户锁定"></a>账户锁定</h2><p>如果因为输错密码导致账户被锁定，需要解封账号</p><p>将虚拟机开机，马上按上键或者下键，选中内核按下e，进入下一界面。<br><img src="https://qiufuqi.github.io/img/hexo/20221212142900.png"><br>将linux 16后面的console内容删除（不删除可能卡住），并在这段最后加上rd.break。若想看开机的过程，可将rhgb quiet删除。<br><img src="https://qiufuqi.github.io/img/hexo/20221212142912.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221212142921.png"><br>修改完毕后，执行ctrl-x来进入紧急模式，成功后如下图。<br><img src="https://qiufuqi.github.io/img/hexo/20221212142938.png"><br>依次执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mount -o remount,rw /sysroot</span><br><span class="line"><span class="built_in">chroot</span> /sysroot</span><br><span class="line"></span><br><span class="line">pam_tally2 --user=root</span><br><span class="line">pam_tally2 --user=root --reset</span><br><span class="line">pam_tally2 --user=root</span><br><span class="line"></span><br><span class="line">passwd         <span class="comment"># 输入密码</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h1 id="EulerOS重置密码"><a href="#EulerOS重置密码" class="headerlink" title="EulerOS重置密码"></a>EulerOS重置密码</h1><p>华为欧拉系统EulerOS忘记root密码解决办法</p><p>先重启Euler系统，到内核选择界面，按“e”进入紧急模式。<br><img src="https://qiufuqi.github.io/img/hexo/20230413133822.png"><br>输入救援模式的账号root和密码，默认为<strong>root/Huawei#12</strong><br><img src="https://qiufuqi.github.io/img/hexo/20230413133900.png"><br>找到linux开头的的地方，在最后面添加systemd.debug-shell=1，然后按ctrl+x进入内存文件系统。<br><img src="https://qiufuqi.github.io/img/hexo/20230413133925.png"><br>按完ctrl+x后系统会自动运行，进到正常登录界面，别慌，然后按Ctrl+Alt+F9即可直接免密登录系统，然后修改root密码，重启即可。<br><img src="https://qiufuqi.github.io/img/hexo/20230413133937.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> EulerOS </tag>
            
            <tag> 重置密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EXSI6.7虚拟机操作问题</title>
      <link href="/exsi_caozuo/"/>
      <url>/exsi_caozuo/</url>
      
        <content type="html"><![CDATA[<p><strong>解决esxi虚拟机无法关机、重置以及开机操作</strong><br>当exsi管理平台虚拟机无法关机，重置以及开机操作时，一般有两种方法操作</p><h2 id="命令行管理"><a href="#命令行管理" class="headerlink" title="命令行管理"></a>命令行管理</h2><p>当出现无法操作时候，控制台、包括API都无法使用了，我们需要使用vmware底层命令来设置虚拟机的状态</p><p>进入esxi的web管理，开启esxi的shell登录。<br><img src="https://qiufuqi.github.io/img/hexo/20221209094512.png"></p><p>1.确认虚拟机运行在哪个esxi主机上，使用SSH登陆到该主机<br>2.通过命令找到虚拟机运行的worldID(和进程ID相似，一台虚拟机有一个唯一的ID)<br>esxcli vm process list</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost:~] esxcli vm process list</span><br><span class="line">RH236_3.1</span><br><span class="line">   World ID: 68762</span><br><span class="line">   Process ID: 0</span><br><span class="line">   VMX Cartel ID: 68761</span><br><span class="line">   UUID: 56 4d 70 ad 43 f1 5e 25-8a 12 a0 e2 18 2e 38 ec</span><br><span class="line">   Display Name: RH236_3.1</span><br><span class="line">   Config File: /vmfs/volumes/5cce4874-40c5c88e-a836-003048fc4ffe/RH236_3.1/RH236_3.1.vmx</span><br><span class="line"> </span><br><span class="line">Server 2016 Vcenter</span><br><span class="line">   World ID: 68982</span><br><span class="line">   Process ID: 0</span><br><span class="line">   VMX Cartel ID: 68981</span><br><span class="line">   UUID: 56 4d d5 80 19 b2 b9 a1-ea 0b <span class="built_in">cd</span> 89 a6 05 e9 48</span><br><span class="line">   Display Name: Server 2016 Vcenter</span><br><span class="line">   Config File: /vmfs/volumes/5cce65ea-ab8c59fa-82c7-003048fc4ffe/Server 2016 Vcenter/Server 2016 Vcenter.vmx</span><br></pre></td></tr></table></figure><p>记下world id<br><img src="https://qiufuqi.github.io/img/hexo/20221209094659.png"><br>通过命令强制结束掉虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">esxcli vm process <span class="built_in">kill</span> --<span class="built_in">type</span>= [soft,hard,force] --world-id= WorldNumber</span><br><span class="line">或者</span><br><span class="line">esxcli vm process <span class="built_in">kill</span> -t [ soft,hard,force] -w WorldNumber</span><br><span class="line"></span><br><span class="line">esxcli vm process <span class="built_in">kill</span> --<span class="built_in">type</span>=force --world-id=68762</span><br><span class="line">esxcli vm process <span class="built_in">kill</span> -t force -w 68762</span><br></pre></td></tr></table></figure><p>t,–type 执行类型<br>soft： 执行正常关机，调用vmearetool执行关机<br>hard： 执行立即关机<br>force：强制断电关机<br>-w,–world-id</p><p>这里指定虚拟机的World ID号了 </p><h2 id="重启物理机"><a href="#重启物理机" class="headerlink" title="重启物理机"></a>重启物理机</h2><p>去机房重启机器即可，但是会影响机器上的其他虚拟机</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> 开机/关机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> 开机/关机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux无法进入系统</title>
      <link href="/centos_errorstart/"/>
      <url>/centos_errorstart/</url>
      
        <content type="html"><![CDATA[<p><strong>开机进入了紧急救援模式，提示Failed to start system check on /dev/disk/by-uuid/</strong><br>提示登录后查看以下服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">systemctl status <span class="string">&quot;systemd-fsck@dev-disk-by\\x2duuid-c90f924a\\x2d0d00\\x2d4a22\\x2db52c\\x2d5d87f98d54d6.service&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 输出以下命令</span></span><br><span class="line"><span class="string">error read block 37748820 （Input/Output error）....</span></span><br><span class="line"><span class="string">fsck exited with status code 4</span></span><br><span class="line"><span class="string">run fsck manually</span></span><br></pre></td></tr></table></figure><p>查看一下fsck的错误类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">man fsck</span><br><span class="line">...</span><br><span class="line">              0      No errors</span><br><span class="line">              1      Filesystem errors corrected</span><br><span class="line">              2      System should be rebooted</span><br><span class="line">              4      Filesystem errors left uncorrected</span><br><span class="line">              8      Operational error</span><br><span class="line">              16     Usage or syntax error</span><br><span class="line">              32     Checking canceled by user request</span><br><span class="line">              128    Shared-library error</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>跑一遍fsck,然后重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fsck -y /dev/sda6</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 无法启动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 无法启动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vSAN常见使用问题</title>
      <link href="/exsi_vCenter_vSAN_problem/"/>
      <url>/exsi_vCenter_vSAN_problem/</url>
      
        <content type="html"><![CDATA[<p>vCenter常见问题归类</p><h1 id="许可证过期"><a href="#许可证过期" class="headerlink" title="许可证过期"></a>许可证过期</h1><p>当我们进入系统时，上方会有个明显的提示：清单中包含许可证已过期或即将过期的 vCenter Server 系统。从官方下载的都是申请60天试用的，那么就意味着60天后会过期。<br>运行许可证生成软件<br><img src="https://qiufuqi.github.io/img/hexo/20221205135047.png"></p><p>进入分配许可 “管理您的许可证”——“许可证”——“添加新许可” 输入许可证秘钥<br><img src="https://qiufuqi.github.io/img/hexo/20220921174415.png"></p><p>编辑许可证名称 点击完成<br><img src="https://qiufuqi.github.io/img/hexo/20220921174453.png"></p><p>许可证添加成功之后，信息如下从灰色!可以得知，其实该许可证还没分配的，所以上方的许可证即将过期的提示还在<br>进入分配许可证 资产——选择主机——选择分配许可证<br><img src="https://qiufuqi.github.io/img/hexo/20220921174533.png"></p><p>分配许可证<br>选择刚才上面新配置的许可证，选中之后可以看到下面分配验证的提示：许可证分配有效<br><img src="https://qiufuqi.github.io/img/hexo/20220921174557.png"></p><p>分配许可证成功之后校验<br><img src="https://qiufuqi.github.io/img/hexo/20220921174637.png"><br>刷新之后，上方明显：‘清单中包含许可证已过期或即将过期的 vCenter Server 系统’的提示已消失<br><img src="https://qiufuqi.github.io/img/hexo/20220921174656.png"></p><p>vSAN许可证过期<br>选中集群 =&gt; 配置 =&gt; 配置 =&gt; 许可 =&gt; 分配许可证<br><img src="https://qiufuqi.github.io/img/hexo/20221207153953.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221207154059.png"></p><h1 id="vSAN-相关配置"><a href="#vSAN-相关配置" class="headerlink" title="vSAN 相关配置"></a>vSAN 相关配置</h1><p>HA高可用<br>其运行机制是监控群集中的ESXi主机及虚拟机，通过配置合适的策略，当群集中的ESXi主机或虚拟机发生故障，可以自动到其他的ESXi主机上进行重新启动，最大限度保证重要服务不中断。<br>选中集群 =&gt; 配置 =&gt; 配置 =&gt; 快速入门   vSphere HA<br><img src="https://qiufuqi.github.io/img/hexo/20221207154253.png"></p><p>DRS 动态资源平衡<br>vSphere DRS 可不间断地平衡资源池内的计算容量，以提供物理基础架构所不能提供的性能、可扩展性和可用性。<br>选中集群 =&gt; 配置 =&gt; 配置 =&gt; 快速入门   vSphere DRS<br><img src="https://qiufuqi.github.io/img/hexo/20221207154253.png"></p><p>故障域<br>vSAN故障域可以隔离ESXi主机。我们在同一个vSAN群集中，可以把服务器A和B定义在一个故障域中，服务器C、D和E定义在另外一个故障域中，那么vSAN存放虚拟机主机时，不会把组件存放在同一个故障域中的主机上，当某一个故障域出现问题，服务仍然能提供。<br>选中集群 =&gt; 配置 =&gt; vSAN =&gt; 故障域<br><img src="https://qiufuqi.github.io/img/hexo/20221207162723.png"></p><h1 id="vSAN-解散群集"><a href="#vSAN-解散群集" class="headerlink" title="vSAN 解散群集"></a>vSAN 解散群集</h1><p>每个节点删除vsan用于内部通信端口（或者分布式交换机 =&gt; 配置 =&gt; 拓扑）<br><img src="https://qiufuqi.github.io/img/hexo/20221208101037.png"></p><p>分布式交换机删除各个节点 ，最后删除 分布式交换机<br><img src="https://qiufuqi.github.io/img/hexo/20221208101200.png"></p><p>选中集群 =&gt; 配置 =&gt; 配置 =&gt; 快速入门，群集基础设置全部取消<br><img src="https://qiufuqi.github.io/img/hexo/20221208101257.png"></p><p>每台主机进入维护模式，删除主机</p><p>SSH命令行 每个节点执行 退出集群 以及磁盘初始化操作<br>退出集群：<br>1、查看VSAN集群状态：esxcli vsan cluster get<br>2、退出VSAN集群“esxcli vsan cluster leave<br>初始化磁盘<br>1、查看缓存磁盘ID和容量磁盘ID：esxcli vsan storage list<br>2、移除磁盘：esxcli vsan storage remove -u 52d6bb30-6b39-df6f-3543-a4f915709398</p><h1 id="添加新节点"><a href="#添加新节点" class="headerlink" title="添加新节点"></a>添加新节点</h1><p>新增一个节点，将节点加入到vsan集群中，新节点可没有存储，只使用它的cpu和内存，也可将磁盘加入vsan集群。<br>在数据中心处添加节点，并进入维护模式<br><img src="https://qiufuqi.github.io/img/hexo/20221207162952.png"></p><p>添加和管理主机，将新主机纳入分布式交换机管理（后期纳入vsan，内部通信）<br><img src="https://qiufuqi.github.io/img/hexo/20221207163141.png"><br>添加VMkernel适配器，分配内部通信ip<br><img src="https://qiufuqi.github.io/img/hexo/20221207163351.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221207163436.png"><br>查看新节点 虚拟交换机配置情况<br><img src="https://qiufuqi.github.io/img/hexo/20221207163538.png"></p><p>将新节点移入到vsan集群中，资源池根据需要来改变，如果加入失败，参考下一步<br><img src="https://qiufuqi.github.io/img/hexo/20221207163650.png"></p><p>声明一块磁盘为闪存盘<br>选中主机 =&gt; 配置 =&gt; 存储 =&gt; 存储适配器 ，选中设备，标记为闪存盘<br><img src="https://qiufuqi.github.io/img/hexo/20221212134838.png"></p><p>新节点退出维护模式，将磁盘加入vsan集群管理<br>选中集群 =&gt; 配置 =&gt; vSAN =&gt; 磁盘管理 =&gt; 声明未使用的磁盘，将新节点的磁盘加入即可<br><img src="https://qiufuqi.github.io/img/hexo/20221207164316.png"></p><p>开启vmotion<br>选中主机 =&gt; 配置 =&gt; 网络 =&gt; VMkernel适配器 =&gt; 选中网卡 =&gt; 编辑，开启vMotion<br><img src="https://qiufuqi.github.io/img/hexo/20221212135102.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221212135116.png"></p><h2 id="新节点加入失败"><a href="#新节点加入失败" class="headerlink" title="新节点加入失败"></a>新节点加入失败</h2><p>vSphere Web Client 添加主机进VSAN集群时“SAN 主机移至目标群集: vSAN 群集的 UUID 不匹配”报错<br>原因分析：是因为该esxi主机已经加入过其它集群，和现在新加入的集群UUID冲突了，需要该esxi主机先退出旧集群，然后再加入新集群。<br>解决方案：<br>登录该esxi主机的ssh服务器；通过命令行操作。<br>1、查看VSAN集群状态<br>执行命令：esxcli vsan cluster get<br>2、退出VSAN集群<br>执行命令： esxcli vsan cluster leave<br>3、加入VSAN集群  – 可在页面操作<br>执行命令： esxcli vsan cluster join -u 523ae663-623b-e2fc-39e3-43b15c5ca801</p><h1 id="删除某节点"><a href="#删除某节点" class="headerlink" title="删除某节点"></a>删除某节点</h1><p>选中节点，进入维护模式，迁移全部数据<br><img src="https://qiufuqi.github.io/img/hexo/20221207164612.png"></p><h2 id="删除网卡"><a href="#删除网卡" class="headerlink" title="删除网卡"></a>删除网卡</h2><p>选中节点 =&gt; 配置 =&gt; 网络 =&gt; 虚拟交换机 =&gt; 删除VMkernel<br><img src="https://qiufuqi.github.io/img/hexo/20230223143520.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221207164939.png"><br>分布式交换机删除节点，选择移除节点<br><img src="https://qiufuqi.github.io/img/hexo/20221207165040.png"></p><p>删除磁盘组，选中集群 =&gt; 配置 =&gt; vSAN =&gt; 磁盘管理 =&gt; 选中节点磁盘，选择移除<br><img src="https://qiufuqi.github.io/img/hexo/20221207165439.png"><br>选中节点，删除即可<br><img src="https://qiufuqi.github.io/img/hexo/20221207165138.png"></p><p><strong>通过SSH登录节点执行如下操作：</strong></p><h1 id="退出集群"><a href="#退出集群" class="headerlink" title="退出集群"></a>退出集群</h1><p>可在节点上执行如下操作，方便节点加入别的vsan<br>1、查看VSAN集群状态<br>执行命令：esxcli vsan cluster get<br>2、退出VSAN集群<br>执行命令： esxcli vsan cluster leave</p><h1 id="磁盘初始化"><a href="#磁盘初始化" class="headerlink" title="磁盘初始化"></a>磁盘初始化</h1><p><a href="https://blog.51cto.com/wangchunhai/5024934">技术参考</a><br>在vSAN群集中，如果磁盘组中的容量磁盘或缓存磁盘出错，正常情况下可以在vSphere Client的“磁盘管理”界面中移除，如果无法移除时，可以使用ESXi CLI命令行移除。</p><p>1、使用Xshell登录到节点ESXi主机，先执行：<br>esxcli vsan storage list  命令查看缓存磁盘ID和容量磁盘ID（Is SSD: true , VSAN UUID:52d6bb30-6b39-df6f-3543-a4f915709398）<br>要删除故障或者取消声明的硬盘UUID：52d6bb30-6b39-df6f-3543-a4f915709398<br><img src="https://qiufuqi.github.io/img/hexo/20221208095245.png"><br>2、执行以下命令移除损坏磁盘<br>esxcli vsan storage remove -u 52d6bb30-6b39-df6f-3543-a4f915709398<br><img src="https://qiufuqi.github.io/img/hexo/20221208095725.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
            <tag> vSAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vSAN单站点群集</title>
      <link href="/exsi_vCenter_vSAN/"/>
      <url>/exsi_vCenter_vSAN/</url>
      
        <content type="html"><![CDATA[<p><strong>VMware vSAN 6.7 搭建单站点vSAN群集</strong><br>VMware vSAN 是作为 ESXi 管理程序的一部分本机运行的分布式软件层。<br>vSAN 可汇总主机群集的本地或直接连接容量设备，并创建在 vSAN 群集的所有主机之间共享的单个存储池。<br>vSAN 支持 HA、vMotion 和 DRS 等需要共享存储的 VMware 功能，但它无需外部共享存储，并且简化了存储配置和虚拟机置备活动。<br>注：如果主机向 vSAN 数据存储提供其本地存储设备，则必须至少提供一个闪存缓存设备和一个容量设备；容量设备也称为数据磁盘，此类主机上的设备将构成一个或多个磁盘组；每个磁盘组包含一个闪存缓存设备，以及一个或多个用于持久存储的容量设备；每个主机都可配置为使用多个磁盘组。</p><p>在单站点vSAN群集的环境下，我们最少需要三台服务器来搭建一个群集，一份数据以镜像方式分别保存在其中两台服务器A和B上，这样就能够提供高可靠的数据保护。<br>在单站点vSAN群集中，见证的角色是随机分配的，虚拟机对象的见证组件也是随机保存在群集中的某一台主机上（RAID1的存储策略下）。</p><p><a href="https://www.qedev.com/tag/VMwarevSAN">部署参考地址</a></p><h1 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h1><p>前期准备：</p><ul><li>搭建好vCenter vSphere Client管理平台，<a href="/exsi_vCenter_install">搭建参考</a>。</li><li>三台EXSI6.7主机，系统盘+闪存盘+容量盘，<a href="/ibm_raid_more">部署参考</a>。</li><li>交换机，用于内部通信</li></ul><p>三台EXSI6.7主机ip：<br>10.11.8.10<br>10.11.8.13<br>10.11.8.14</p><h1 id="配置vSphere群集"><a href="#配置vSphere群集" class="headerlink" title="配置vSphere群集"></a>配置vSphere群集</h1><h2 id="添加主机"><a href="#添加主机" class="headerlink" title="添加主机"></a>添加主机</h2><p>在vCenter中新建数据中心，把3台主机都加入vCenter，并进入维护模式<br><img src="https://qiufuqi.github.io/img/hexo/20221207142926.png"></p><h2 id="开启SSH"><a href="#开启SSH" class="headerlink" title="开启SSH"></a>开启SSH</h2><p>选中主机 =&gt; 配置 =&gt; 系统 =&gt; 服务 =&gt; SSH ，启动即可，也可编辑启动策略<br><img src="https://qiufuqi.github.io/img/hexo/20221207143140.png"></p><h2 id="标记磁盘"><a href="#标记磁盘" class="headerlink" title="标记磁盘"></a>标记磁盘</h2><p>选中主机 =&gt; 配置 =&gt; 存储 =&gt; 存储适配器 =&gt; 选中磁盘 =&gt; 设备 ，将其中一块盘标记为闪存盘<br><img src="https://qiufuqi.github.io/img/hexo/20221207143430.png"></p><h2 id="开启vMotion"><a href="#开启vMotion" class="headerlink" title="开启vMotion"></a>开启vMotion</h2><p>选中主机 =&gt; 配置 =&gt; 网络 =&gt; VMkernel适配器 =&gt; 选中网卡 =&gt; 编辑，开启vMotion<br><img src="https://qiufuqi.github.io/img/hexo/20221212135102.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221212135116.png"></p><h2 id="新建集群"><a href="#新建集群" class="headerlink" title="新建集群"></a>新建集群</h2><p>在数据中心下新建集群test_vsan_cluster，并将3台主机拖入集群<br><img src="https://qiufuqi.github.io/img/hexo/20221207143845.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221207143933.png"></p><h2 id="调整存储名称"><a href="#调整存储名称" class="headerlink" title="调整存储名称"></a>调整存储名称</h2><p>本步骤可不做，但是为了方便管理，以ip最后数字命名<br><img src="https://qiufuqi.github.io/img/hexo/20221207144045.png"></p><h1 id="配置启用vSAN"><a href="#配置启用vSAN" class="headerlink" title="配置启用vSAN"></a>配置启用vSAN</h1><h2 id="新建分布式交换机"><a href="#新建分布式交换机" class="headerlink" title="新建分布式交换机"></a>新建分布式交换机</h2><p>新建分布式交换机，建立vSAN存储网络<br><img src="https://qiufuqi.github.io/img/hexo/20221207144235.png"><br>输入分布式交换机名称test_DSwitch_vsan<br><img src="https://qiufuqi.github.io/img/hexo/20221207144352.png"><br>选择版本，3台主机exsi的版本<br><img src="https://qiufuqi.github.io/img/hexo/20221207144431.png"><br>上行链路数目为1，每台主机都有1条网卡来连接vSAN的。顺便创建默认的端口组。<br><img src="https://qiufuqi.github.io/img/hexo/20221207144609.png"><br>完成分布式交换机创建<br><img src="https://qiufuqi.github.io/img/hexo/20221207144643.png"></p><h2 id="交换机添加主机配置链路"><a href="#交换机添加主机配置链路" class="headerlink" title="交换机添加主机配置链路"></a>交换机添加主机配置链路</h2><p>添加和管理主机，添加主机<br><img src="https://qiufuqi.github.io/img/hexo/20221207145105.png"><br>+新主机<br><img src="https://qiufuqi.github.io/img/hexo/20221207145157.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221207145224.png"><br>分配上行链路，选中网卡（用于内部通信）<br>如果机器相同，且连接网卡相同，则选择将此上行链路分配到所有主机<br><img src="https://qiufuqi.github.io/img/hexo/20221207145605.png"><br>暂时不管理网络适配器，下一步直至完成<br><img src="https://qiufuqi.github.io/img/hexo/20221207145902.png"><br>到每台ESXi主机虚拟网络处可以看到此时分布式交换机的拓扑，选中主机 =&gt; 配置 =&gt; 网络 =&gt; 虚拟交换机<br><img src="https://qiufuqi.github.io/img/hexo/20221207150012.png"></p><p>为分布式端口组添加VMkernel网卡，配置分布式交换机的左端<br><img src="https://qiufuqi.github.io/img/hexo/20221207150221.png"><br>选择所有主机<br><img src="https://qiufuqi.github.io/img/hexo/20221207150252.png"><br>务必选中vSAN服务<br><img src="https://qiufuqi.github.io/img/hexo/20221207150337.png"></p><p>配置ip地址，图片中172.16.0.0/24网段，用于内部通信（交换机端设置放行）<br><img src="https://qiufuqi.github.io/img/hexo/20221207150413.png"><br>配置完成<br><img src="https://qiufuqi.github.io/img/hexo/20221207150525.png"><br>返回ESXi主机查看网络，可以看到分布式交换机的左端（端口组）已经配置。<br><img src="https://qiufuqi.github.io/img/hexo/20221207150556.png"></p><p>至此，分布式交换机配置完成。</p><p>此时可登录exsi主机，确保各个主机间正常通信。<br><img src="https://qiufuqi.github.io/img/hexo/20221207150729.png"></p><h2 id="创建磁盘组"><a href="#创建磁盘组" class="headerlink" title="创建磁盘组"></a>创建磁盘组</h2><p>启用vSAN前，请保证要用来做磁盘组的磁盘（缓存盘和数据盘）不包含任何分区信息。未消耗<br><img src="https://qiufuqi.github.io/img/hexo/20221207150840.png"><br>开启vsan服务，选中集群 =&gt; 配置 =&gt; vSAN<br><img src="https://qiufuqi.github.io/img/hexo/20221207150924.png"></p><p>选择单站点群集，如果缓存盘为SSD，固态盘，可开启去重和压缩<br><img src="https://qiufuqi.github.io/img/hexo/20221207151046.png"><br>声明磁盘，（二次实验，已经声明过了，所以此处不显示，参考第二章图片，区分容量层和缓存层）<br>如果磁盘被使用过，需要初始化硬盘，<a href="/exsi_vCenter_vSAN_problem">参考</a>，解决<br><img src="https://qiufuqi.github.io/img/hexo/20221208100202.png"></p><p>故障域在此先不声明，点击下一步完成<br><img src="https://qiufuqi.github.io/img/hexo/20221207151451.png"><br>正在配置vSAN群集，等待任务执行完毕即可<br><img src="https://qiufuqi.github.io/img/hexo/20221207151552.png"><br>将所有主机退出维护模式，到群集的数据存储处查看 vsanDatastore 的容量<br><img src="https://qiufuqi.github.io/img/hexo/20221207151955.png"><br>查看vSAN的运行状况，保证其不出现红色的警告<br><img src="https://qiufuqi.github.io/img/hexo/20221207152045.png"></p><p><strong>至此，一个单站点的vSAN群集搭建成功。</strong><br>创建虚拟机时可选择存储位置为vsandatastore中，具体来说是将虚拟机的对象（主页和hard disk）以网络RAID1的方式存放在多台ESXi主机上的，实现多副本，避免单点故障，某一台主机故障（进入维护模式或者掉电），虚拟机仍可运行。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
            <tag> vSAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cisco交换机VTP协议</title>
      <link href="/cisco_vtp/"/>
      <url>/cisco_vtp/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_60503432/article/details/127194455">https://blog.csdn.net/qq_60503432/article/details/127194455</a></p><p>VTP（VLAN Trunk Protocol）—CISCO私有的协议<br>VTP一个可以说很方便的协议，学习Cisco时也很常用的协议，他的作用就是可以在有大量交换设备，需要配置类似的vlan划分的时候，简化配置过程，使各个交换机互相学习Vlan Database</p><p>为什么要使用VTP呢 ?<br>考虑到在一个三层模型拥有多台交换设备的网络环境中，为了使得在每台交换设备上VLAN信息一致，那必须得在每台设备上单独配置相同的VLAN。如果设备足够多那么这样的效率是很低的并且如果经常需要临时的创建和删除某些VLAN在这样的大型网络中效率更低，VTP允许在一台交换机上添加、删除、修改VLAN信息然后同步到其他的交换机。</p><h1 id="VTP模式"><a href="#VTP模式" class="headerlink" title="VTP模式"></a>VTP模式</h1><p><img src="https://qiufuqi.github.io/img/hexo/20230406162245.png"><br>在VTP协议中我们把设备大体分为两类：Server和Client<br>Server端能够添加、删除、修改vlan信息并且把vlan信息保存在flash:vlan.dat中<br>Client只能向Server同步vlan信息并且vlan信息无法保存，每次重启都要向Server同步</p><p>server        创建、修改、删除、发送或转发通告（发送自己的消息，转发别人的消息）、同步（接受别人发来的消息）、保存<br>client        转发通告、同步、不保存<br>transparent   创建、修改、删除、转发通告、不同步、保存</p><p>为了丰富VTP的功能除了Server和Client模式之外，还设置了一个Transparent模式；<br>Transparent会传递vlan信息，但自己本身不同步Server的vlan信息，vlan信息保存在nvram:startup-config中；<br>Transparent对vlan的操作只在本交换机上有效；<br>三种模式对设备的数目没有限制（在一个交换网络中没有规定只能有一台server、client、transparent）</p><h1 id="VTP运行"><a href="#VTP运行" class="headerlink" title="VTP运行"></a>VTP运行</h1><p><img src="https://qiufuqi.github.io/img/hexo/20230406163357.png"></p><p>VTP帧发向组播MAC地址：0100.0CCC.CCCC<br>VTP同步的关键是配置修订号（指的是对设备进行了多少次的更新、修改）<br>VTPserver和clinent同步到最新的配置版本号，VTP通告在变化时，每5分钟发送。<br>配置修订号越大设备认为配置越新，<strong>修订号大的同步vlan信息给修订号小的，修订号小的设备vlan信息被覆盖</strong>；<br>正是因为同步是依据配置修订号来，导致VTP很少有人用。</p><p>局限性：</p><ol><li>依据修订号来同步vlan信息</li><li>思科私有</li></ol><h1 id="VTP作用"><a href="#VTP作用" class="headerlink" title="VTP作用"></a>VTP作用</h1><p>VTP维护整个管理域VLAN信息的一致性<br>VTP仅在Trunk端口上发送通告<br>同步到最新的VLAN信息</p><h1 id="VTP配置"><a href="#VTP配置" class="headerlink" title="VTP配置"></a>VTP配置</h1><h2 id="配置需求"><a href="#配置需求" class="headerlink" title="配置需求"></a>配置需求</h2><p>Trunk接口，VTP域名，指定VTP模式（默认server），配置VTP密码<br>配置命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)<span class="comment">#vtp domainTEST</span></span><br><span class="line">Changing VTP domain name from NULL to TESTS</span><br><span class="line">witch(config)<span class="comment">#vtp mode server</span></span><br><span class="line">Switch(config)<span class="comment">#vtp password cisco</span></span><br><span class="line">Setting device VLAN database password to cisco</span><br></pre></td></tr></table></figure><p>验证VTP配置</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 交换机 </category>
          
          <category> Cisco </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交换机 </tag>
            
            <tag> Cisco </tag>
            
            <tag> VTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cisco交换机常用命令</title>
      <link href="/cisco_shili/"/>
      <url>/cisco_shili/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/mansky0618/article/details/80292511">https://blog.csdn.net/mansky0618/article/details/80292511</a></p><p>VLAN（Virtual Local Area Network）的中文名为”虚拟局域网”。<br>虚拟局域网（VLAN）是一组逻辑上的设备和用户，这些设备和用户并不受物理位置的限制，可以根据功能、部门及应用等因素将它们组织起来，相互之间的通信就好像它们在同一个网段中一样，由此得名虚拟局域网。VLAN是一种比较新的技术，工作在OSI参考模型的第2层和第3层，一个VLAN就是一个广播域，VLAN之间的通信是通过第3层的路由器来完成的。与传统的局域网技术相比较，VLAN技术更加灵活，它具有以下优点： 网络设备的移动、添加和修改的管理开销减少；可以控制广播活动；可提高网络的安全性。<br>在计算机网络中，一个二层网络可以被划分为多个不同的广播域，一个广播域对应了一个特定的用户组，默认情况下这些不同的广播域是相互隔离的。不同的广播域之间想要通信，需要通过一个或多个路由器。这样的一个广播域就称为VLAN。<br><img src="https://qiufuqi.github.io/img/hexo/20230325141235.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">进入特许模式</span><br><span class="line">cisco：<span class="built_in">enable</span></span><br><span class="line">华为：system-view 或者 sys</span><br><span class="line"></span><br><span class="line">交换机配置命令查询</span><br><span class="line">cisco：show running-config 或者 show run</span><br><span class="line">华为：display current-configuration 或者 dis cur</span><br><span class="line"></span><br><span class="line">进入配置</span><br><span class="line">cisco： conf t</span><br><span class="line">华为只有2层模式 不像cisco enale之后还要conf t</span><br><span class="line"></span><br><span class="line">查看某个端口：</span><br><span class="line">cisco: show interfaces f0/1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">进入某个端口</span><br><span class="line">cisco: interface fastEthernet 0/1  或者 int f0/1</span><br><span class="line">华为： interface GigabitEthernet 0/0/1 或者 int g0/0/1</span><br><span class="line"></span><br><span class="line">创建vlan:</span><br><span class="line">cisco: vlan database  =&gt;  输入 vlan 30-60 回车即可 如果后面还有单独的，比如90 则输入vlan 30-60,90</span><br><span class="line">华为： vlan 2 或者批量 vlan batch 10 20 30 </span><br><span class="line"></span><br><span class="line">更改端口vlan或者属性：</span><br><span class="line">cisco: switchport access vlan 2 </span><br><span class="line">华为：</span><br><span class="line">[HW-SW-Ethernet0/0/1]port link-type access</span><br><span class="line">[HW-SW-Ethernet0/0/1]port default vlan 10</span><br><span class="line"></span><br><span class="line">更改端口属性</span><br><span class="line">cisco:  switchport mode trunk =&gt; switchport trunk allowed vlan all  </span><br><span class="line">华为：</span><br><span class="line"></span><br><span class="line">说明：把接口改为Access类型，然后划分到VLAN 10里面</span><br><span class="line">https://blog.csdn.net/qq_23930765/article/details/122863767</span><br><span class="line"></span><br><span class="line">删除某条命令</span><br><span class="line">cisco： no</span><br><span class="line">华为： undo</span><br><span class="line"></span><br><span class="line">退出</span><br><span class="line">cisco： <span class="built_in">exit</span> end</span><br><span class="line">华为： quit</span><br><span class="line"></span><br><span class="line">保存：</span><br><span class="line">cisco： write </span><br><span class="line">华为： save</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cisco常用交换机命令</p><h1 id="二次交换机"><a href="#二次交换机" class="headerlink" title="二次交换机"></a>二次交换机</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; <span class="built_in">enable</span>                                  //进入特权模式</span><br><span class="line">Switch<span class="comment"># vlan database                           //进入vlan数据库</span></span><br><span class="line">Switch(vlan)<span class="comment"># vlan 2                            //添加一个vlan，vlan号为 2 。默认所有端口处于vlan 1 ，因此本例子只需添加添加 vlan 2</span></span><br><span class="line">Switch(vlan)<span class="comment"># exit                              //退出 vlan数据库</span></span><br><span class="line">Switch<span class="comment"># configure terminal                      //进入全局配置模式</span></span><br><span class="line">Switch(config)<span class="comment"># interface FastEthernet 0/2      //进入端口Fa0/2设置</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport access vlan 2     //设置端口Fa0/2处于vlan 2，默认所有端口处于vlan 1 ，所以本实例不用对端口Fa0/1设置vlan</span></span><br><span class="line">Switch(config-if)<span class="comment"># exit                         //退出端口Fa0/2设置</span></span><br><span class="line">Switch(config)<span class="comment"># interface FastEthernet 0/3      //进入端口Fa0/3设置</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport access vlan 2     //设置端口Fa0/3处于vlan 2</span></span><br><span class="line">Switch(config-if)<span class="comment"># end                          //设置完成退出</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                  //启用某个端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.20.1 255.255.255.0          //设置端口IPizhi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Switch&gt; <span class="built_in">enable</span></span><br><span class="line">Switch<span class="comment"># configure terminal</span></span><br><span class="line">Switch(config)<span class="comment"># interface FastEthernet 0/24             //Fa0/24端口连接路由器</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport mode trunk                //设置该端口vlan模式为trunk</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport trunk allowed vlan all    //设置该端口trunk模式下接收所有vlan线路的信息</span></span><br><span class="line">Switch(config-if)<span class="comment"># end                                  //完成设置退出</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Router&gt; <span class="built_in">enable</span></span><br><span class="line">Router<span class="comment"># configure terminal</span></span><br><span class="line">Router(config)<span class="comment"># interface FastEthernet 0/0</span></span><br><span class="line">Router(config-if)<span class="comment"># no shutdown                                  //启动Fa0/0端口</span></span><br><span class="line"> </span><br><span class="line">Router(config-if)<span class="comment"># interface FastEthernet 0/0.1                 //添加设置Fa0/0端口的子端口Fa0/0.1</span></span><br><span class="line">                                                                //同理Fa0/1端口的子端口可以为Fa0/1.1，Fa0/0.6等</span><br><span class="line"> </span><br><span class="line">Router(config-subif)<span class="comment"># encapsulation dot1Q 1                     //对该子端口Fa0/0.1进行802.1q协议的封装</span></span><br><span class="line">                                                                //后面的数字 1 代表是的侦听VLAN号为 1 的传输数据</span><br><span class="line"> </span><br><span class="line">Router(config-subif)<span class="comment"># ip address 192.168.10.1 255.255.255.0     //设置该子端口Fa0/0.1的IP和子网掩码</span></span><br><span class="line">Router(config-subif)<span class="comment">#no shutdown                                //启动该子端口</span></span><br><span class="line"> </span><br><span class="line">Router(config-if)<span class="comment"># interface FastEthernet 0/0.2                 //添加设置Fa0/0端口的子端口Fa0/0.2</span></span><br><span class="line">Router(config-subif)<span class="comment"># encapsulation dot1Q 2                     //对该子端口Fa0/0.2进行802.1q协议的封装</span></span><br><span class="line"> </span><br><span class="line">Router(config-subif)<span class="comment"># ip address 192.168.20.1 255.255.255.0     //设置该子端口Fa0/0.2的IP和子网掩码</span></span><br><span class="line">Router(config-subif)<span class="comment"># no shutdown                               //启动该子端口</span></span><br><span class="line"> </span><br><span class="line">Router(config-subif)<span class="comment"># end                                       //完成设置退出</span></span><br><span class="line">Router<span class="comment"># show ip route                                           //查看路由信息</span></span><br><span class="line"> </span><br><span class="line">Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP</span><br><span class="line">       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area</span><br><span class="line">       N1 - OSPF NSSA external <span class="built_in">type</span> 1, N2 - OSPF NSSA external <span class="built_in">type</span> 2</span><br><span class="line">       E1 - OSPF external <span class="built_in">type</span> 1, E2 - OSPF external <span class="built_in">type</span> 2, E - EGP</span><br><span class="line">       i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area</span><br><span class="line">       * - candidate default, U - per-user static route, o - ODR</span><br><span class="line">       P - periodic downloaded static route</span><br><span class="line"> </span><br><span class="line">Gateway of last resort is not <span class="built_in">set</span></span><br><span class="line"> </span><br><span class="line">C    192.168.10.0/24 is directly connected, FastEthernet0/0.1</span><br><span class="line">C    192.168.20.0/24 is directly connected, FastEthernet0/0.2   </span><br></pre></td></tr></table></figure><h1 id="三层交换机"><a href="#三层交换机" class="headerlink" title="三层交换机"></a>三层交换机</h1><p>普通交换机没有路由功能，而三层交换机可以看作普通交换机和路由器合二为一的机器。<br>因此<strong>三层交换机具有路由功能，而且三层交换机的端口是vlan端口</strong>。</p><p>主机——三层交换机——主机<br><img src="https://qiufuqi.github.io/img/hexo/20230325141347.png"></p><p>三层交换机增加vlan和对主机的vlan划分部分<br>创建vlan 并 将端口划分至指定vlan下 （参考上面）；启用三层交换机的路由功能<br>ip routing</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; <span class="built_in">enable</span></span><br><span class="line">Switch<span class="comment"># configure terminal</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment">#ip routing                                   //启动三层交换机路由功能</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 1                            //添加设置关联Vlan号为1的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.10.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># exit                                     //退出该端口</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 2                            //添加设置关联Vlan号为2的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.20.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># exit                                     //退出该端口</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 3                            //添加设置关联Vlan号为3的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.30.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># end                                      //完成退出</span></span><br><span class="line"> </span><br><span class="line">Switch<span class="comment"># show ip route                                       //查看路由信息</span></span><br><span class="line"> </span><br><span class="line">Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP</span><br><span class="line">       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area</span><br><span class="line">       N1 - OSPF NSSA external <span class="built_in">type</span> 1, N2 - OSPF NSSA external <span class="built_in">type</span> 2</span><br><span class="line">       E1 - OSPF external <span class="built_in">type</span> 1, E2 - OSPF external <span class="built_in">type</span> 2, E - EGP</span><br><span class="line">       i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area</span><br><span class="line">       * - candidate default, U - per-user static route, o - ODR</span><br><span class="line">       P - periodic downloaded static route</span><br><span class="line"> </span><br><span class="line">Gateway of last resort is not <span class="built_in">set</span></span><br><span class="line"> </span><br><span class="line">C    192.168.10.0/24 is directly connected, Vlan1</span><br><span class="line">C    192.168.20.0/24 is directly connected, Vlan2</span><br><span class="line">C    192.168.30.0/24 is directly connected, Vlan3</span><br></pre></td></tr></table></figure><p>主机——交换机——三层交换机——交换机——主机<br>普通交换机添加vlan和对主机vlan划分部分省略。<br>若普通交换机连接三层交换机的端口已设置vlan模式为trunk，连接三层交换机后，三层交换机连接普通交换机的端口其模式会自动设置为trunk。<br><img src="https://qiufuqi.github.io/img/hexo/20230325144531.png"></p><p>二层交换机设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; <span class="built_in">enable</span></span><br><span class="line">Switch<span class="comment"># configure terminal</span></span><br><span class="line">Switch(config)<span class="comment"># interface FastEthernet 0/24</span></span><br><span class="line">Switch(config-if)<span class="comment"># switchport mode trunk        //设置Fa0/24端口vlan模式为trunk</span></span><br><span class="line">Switch(config-if)<span class="comment">#end</span></span><br></pre></td></tr></table></figure><p>三层交换机设置 和前面类似</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; <span class="built_in">enable</span></span><br><span class="line">Switch<span class="comment">#vlan database</span></span><br><span class="line">Switch(vlan)<span class="comment"># vlan 2                                        //添加vlan 2</span></span><br><span class="line">Switch(vlan)<span class="comment"># exit</span></span><br><span class="line"> </span><br><span class="line">Switch<span class="comment"># configure terminal</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment">#ip routing                                   //启动三层交换机路由功能</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 1                            //添加设置关联Vlan号为1的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.10.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># exit                                     //退出该端口</span></span><br><span class="line"> </span><br><span class="line">Switch(config)<span class="comment"># interface Vlan 2                            //添加设置关联Vlan号为2的路由端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># ip address 192.168.20.1 255.255.255.0    //为该路由端口设置IP和子网掩码</span></span><br><span class="line">Switch(config-if)<span class="comment"># no shutdown                              //启动该端口</span></span><br><span class="line">Switch(config-if)<span class="comment"># end                                      //退出该端口</span></span><br><span class="line"> </span><br><span class="line">Switch<span class="comment"># show ip route                                       //查看路由信息</span></span><br><span class="line"> </span><br><span class="line">Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP</span><br><span class="line">       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area</span><br><span class="line">       N1 - OSPF NSSA external <span class="built_in">type</span> 1, N2 - OSPF NSSA external <span class="built_in">type</span> 2</span><br><span class="line">       E1 - OSPF external <span class="built_in">type</span> 1, E2 - OSPF external <span class="built_in">type</span> 2, E - EGP</span><br><span class="line">       i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area</span><br><span class="line">       * - candidate default, U - per-user static route, o - ODR</span><br><span class="line">       P - periodic downloaded static route</span><br><span class="line"> </span><br><span class="line">Gateway of last resort is not <span class="built_in">set</span></span><br><span class="line"> </span><br><span class="line">C    192.168.10.0/24 is directly connected, Vlan1</span><br><span class="line">C    192.168.20.0/24 is directly connected, Vlan2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 交换机 </category>
          
          <category> Cisco </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交换机 </tag>
            
            <tag> Cisco </tag>
            
            <tag> 实例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>window防火墙端口放行</title>
      <link href="/window_firewalld/"/>
      <url>/window_firewalld/</url>
      
        <content type="html"><![CDATA[<p><strong>Windows Server启用防火墙并开放80端口</strong><br>Windows Server是自带防火墙的，可以过滤一些包。一般情况下为了安全都要打开防火墙，可以防止一些攻击行为。同时，由于启用防火墙后会封闭所有的端口，计算机根本就不会接受外部对端口发起的连接请求，也就无法对外提供服务。<br>如果要端口开放,必须要有进程程序安装对应该端口对应，比如安装web后对应80端口；同时服务器内部防火墙对端口不要做限制，或者需要添加例外。</p><h2 id="防火墙高级设置"><a href="#防火墙高级设置" class="headerlink" title="防火墙高级设置"></a>防火墙高级设置</h2><p>控制面板 =&gt; Windows防火墙 =&gt; 高级设置(左侧)<br><img src="https://qiufuqi.github.io/img/hexo/20221121084445.png"></p><h2 id="新建规则"><a href="#新建规则" class="headerlink" title="新建规则"></a>新建规则</h2><p>入站规则(右击) =&gt; 新建规则<br><img src="https://qiufuqi.github.io/img/hexo/20221121084619.png"></p><h2 id="选择规则类型"><a href="#选择规则类型" class="headerlink" title="选择规则类型"></a>选择规则类型</h2><p>规则类型 选择“端口”<br><img src="https://qiufuqi.github.io/img/hexo/20221121084656.png"></p><h2 id="输入端口号"><a href="#输入端口号" class="headerlink" title="输入端口号"></a>输入端口号</h2><p>输入要开启的端口号，例如“80“点击“下一步”<br><img src="https://qiufuqi.github.io/img/hexo/20221121085200.png"><br>选择“允许连接”，点“下一步”；可按默认选中“域”“专用”“公用”<br><img src="https://qiufuqi.github.io/img/hexo/20221121085254.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221121085303.png"></p><h2 id="输入规则名称"><a href="#输入规则名称" class="headerlink" title="输入规则名称"></a>输入规则名称</h2><p>输入名称和描述，点击完成<br><img src="https://qiufuqi.github.io/img/hexo/20221121085339.png"></p><h2 id="查看规则"><a href="#查看规则" class="headerlink" title="查看规则"></a>查看规则</h2><p>可看到自己创建的入站规则<br><img src="https://qiufuqi.github.io/img/hexo/20221121085401.png"></p><p>完成后，服务器中的防火墙对网页上的80端口就不再阻拦，输入服务器地址，连接vpn后，外部网络也可访问服务器的项目。</p>]]></content>
      
      
      <categories>
          
          <category> Windown </category>
          
          <category> 放行端口 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windown </tag>
            
            <tag> 端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控Oracle</title>
      <link href="/zabbix_oracle/"/>
      <url>/zabbix_oracle/</url>
      
        <content type="html"><![CDATA[<p>zabbix是一款非常强大，同时也是应用最为广泛的开源监控软件。</p><h2 id="监控方式"><a href="#监控方式" class="headerlink" title="监控方式"></a>监控方式</h2><p>zabbix监控的方式主要有以下三种类型</p><h3 id="Zabbix-agent"><a href="#Zabbix-agent" class="headerlink" title="Zabbix agent"></a>Zabbix agent</h3><p>在被监控机上面安装zabbix agent，zabbix agent将被监控机采集到的数据发送给zabbix server。这种方式最常用，一般用来采集服务器的cpu、内存等信息。<a href="/zabbix_agent">参考</a></p><h3 id="SNMP"><a href="#SNMP" class="headerlink" title="SNMP"></a>SNMP</h3><p>一些网络设备如交换机，上面无法安装zabbix agent，所以只能通过snmp的方式收集监控数据如端口状态，流量等。</p><h3 id="External-check"><a href="#External-check" class="headerlink" title="External check"></a>External check</h3><p>在zabbix server上面运行查询脚本，直接查询被监控机上的数据。<strong>此种方式在被监控机上面不需要做任何部署</strong>，所有查询全部从zabbix server上面发出，所以对zabbix server的性能要求较高，官方不推荐大量使用该方式。对于少量的oracle数据库服务器，可以采用该方式。</p><h2 id="规划监控项"><a href="#规划监控项" class="headerlink" title="规划监控项"></a>规划监控项</h2><ul><li><p>数据库空间不足或数据库发生故障，DBA需要立即处理。<br>监控项包括表空间、用户状态、实例状态、锁、大量等待事件、闪回区使用率等。此类监控项需要给其设置触发器，一旦出现异常，及时告警。</p></li><li><p>数据库运行状态的一些统计信息，为DBA定位数据库性能问题发生的时间和类别提供参考。<br>监控项包括常见的等待事件发生的次数，命中率、硬解析比例等。</p></li></ul><p>下面表格中列出附件中模板的监控项<br><img src="https://qiufuqi.github.io/img/hexo/20221117085817.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221117085828.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221117085840.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>进入正式安装环节，我假定你已经安装了zabbix server，因此这里略过zabbix server的安装步骤。<br><strong>以下所有操作均在zabbix服务器上面执行</strong></p><h3 id="安装oracle客户端"><a href="#安装oracle客户端" class="headerlink" title="安装oracle客户端"></a>安装oracle客户端</h3><p>从<a href="https://www.oracle.com/cn/database/technologies/instant-client/downloads.html">官网</a>下载如下三个rpm包；<br>百度网盘：<a href="https://pan.baidu.com/s/1f7jEKpYQ1GviooFrN38zjg">https://pan.baidu.com/s/1f7jEKpYQ1GviooFrN38zjg</a> 提取码: xsqw<br>oracle-instantclient11.2-basic-11.2.0.4.0-1.x86_64.rpm<br>oracle-instantclient11.2-devel-11.2.0.4.0-1.x86_64.rpm<br>oracle-instantclient11.2-sqlplus-11.2.0.4.0-1.x86_64.rpm<br>使用root安装oracle客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix opt]<span class="comment"># rpm -ivh oracle-instantclient11.2-basic-11.2.0.4.0-1.x86_64.rpm</span></span><br><span class="line">[root@zabbix opt]<span class="comment"># rpm -ivh oracle-instantclient11.2-devel-11.2.0.4.0-1.x86_64.rpm</span></span><br><span class="line">[root@zabbix opt]<span class="comment"># rpm -ivh oracle-instantclient11.2-sqlplus-11.2.0.4.0-1.x86_64.rpm</span></span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix client64]<span class="comment"># vi /etc/profile</span></span><br><span class="line">·········</span><br><span class="line"><span class="built_in">export</span> ORACLE_HOME=/usr/lib/oracle/11.2/client64</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$ORACLE_HOME</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ORACLE_HOME</span>/bin</span><br><span class="line">·········</span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line">[root@zabbix client64]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure><h3 id="配置动态库"><a href="#配置动态库" class="headerlink" title="配置动态库"></a>配置动态库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ld.so.conf.d]<span class="comment"># vi /etc/ld.so.conf/oracle.conf</span></span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line">[root@zabbix ld.so.conf.d]<span class="comment"># ldconfig</span></span><br></pre></td></tr></table></figure><h3 id="oracle进行测试"><a href="#oracle进行测试" class="headerlink" title="oracle进行测试"></a>oracle进行测试</h3><p>出现下面的提示证明oracle client安装成功<br><strong>sqlplus 用户名/密码@ip:1521/服务名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]<span class="comment"># sqlplus orcl1/密码@10.11.7.126:1521/ORCL</span></span><br><span class="line">SQL*Plus: Release 11.2.0.4.0 Production on Thu Nov 17 09:32:43 2022</span><br><span class="line">Copyright (c) 1982, 2013, Oracle.  All rights reserved.</span><br><span class="line">Connected to:</span><br><span class="line">Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit Production</span><br><span class="line">With the Partitioning, OLAP, Data Mining and Real Application Testing options</span><br><span class="line"></span><br><span class="line">SQL&gt;</span><br><span class="line">SQL&gt; <span class="built_in">exit</span></span><br><span class="line">Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit Production</span><br><span class="line">With the Partitioning, OLAP, Data Mining and Real Application Testing options</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221117093301.png"></p><h3 id="安装phthon相关包"><a href="#安装phthon相关包" class="headerlink" title="安装phthon相关包"></a>安装phthon相关包</h3><p>python升级(/python_upgrate)<br>查看python版本 python -V<br>python版本与cx_Oracle版本要一致，我的安装cx_Oracle2.7失败，改用了python3.6</p><p>安装cx_Oracle(python连接oracle的包)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]<span class="comment"># wget http://downloads.sourceforge.net/project/cx-oracle/5.1.2/cx_Oracle-5.1.2-11g-py26-1.x86_64.rpm</span></span><br><span class="line">[root@zabbix ~]<span class="comment"># rpm -ivh cx_Oracle-5.1.2-11g-py26-1.x86_64.rpm</span></span><br><span class="line">或者</span><br><span class="line">[root@zabbix ~]<span class="comment"># pip install cx_Oracle</span></span><br></pre></td></tr></table></figure><p>安装argparse,下载3.6版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]<span class="comment"># wget https://bootstrap.pypa.io/pip/3.6/get-pip.py --no-check-certificate</span></span><br><span class="line">[root@zabbix ~]<span class="comment"># python get-pip.py</span></span><br><span class="line">[root@zabbix ~]<span class="comment"># pip install argparse</span></span><br></pre></td></tr></table></figure><h3 id="上传python脚本"><a href="#上传python脚本" class="headerlink" title="上传python脚本"></a>上传python脚本</h3><p>下载附件<a href="https://github.com/qiufuqi/zabbix_template">下载地址</a><br>将附件中的pyora.py脚本放入/usr/lib/zabbix/externalscripts/目录下<br>赋权限，让zabbix用户能够执行该脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]<span class="comment"># cd /usr/lib/zabbix/externalscripts/</span></span><br><span class="line">[root@zabbix externalscripts]<span class="comment"># chmod 755 /usr/lib/zabbix/externalscripts/pyora.py</span></span><br></pre></td></tr></table></figure><p>[注意：先在被监控机的oracle数据库中创建监控用户，用户名和密码可以自己随意指定<br>create user zabbix identified by zabbix;<br>grant connect, select any dictionary to zabbix;</p><h3 id="测试脚本"><a href="#测试脚本" class="headerlink" title="测试脚本"></a>测试脚本</h3><p>orcl 可进入oracle 执行 lsnrctl status查看<br>python pyora.py –username zabbix –password zabbix –address 10.11.7.126 –port 1521 –database orcl show_tablespaces<br>上面测试脚本的参数说明：</p><ul><li>username: 用户名</li><li>password: 密码</li><li>address: 被监控机ip地址</li><li>port: 端口号</li><li>database: orcl show_tablespaces<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix externalscripts]<span class="comment"># python pyora.py --username zabbix --password zabbix --address 10.11.7.126 --port 1521 --database orcl show_tablespaces</span></span><br><span class="line">&#123;<span class="string">&quot;data&quot;</span>: [&#123;<span class="string">&quot;&#123;#TABLESPACE&#125;&quot;</span>: <span class="string">&quot;SYSTEM&quot;</span>&#125;, &#123;<span class="string">&quot;&#123;#TABLESPACE&#125;&quot;</span>: <span class="string">&quot;SYSAUX&quot;</span>&#125;, &#123;<span class="string">&quot;&#123;#TABLESPACE&#125;&quot;</span>: <span class="string">&quot;UNDOTBS1&quot;</span>&#125;, &#123;<span class="string">&quot;&#123;#TABLESPACE&#125;&quot;</span>: <span class="string">&quot;USERS&quot;</span>&#125;, &#123;<span class="string">&quot;&#123;#TABLESPACE&#125;&quot;</span>: <span class="string">&quot;ECOLOGY&quot;</span>&#125;, &#123;<span class="string">&quot;&#123;#TABLESPACE&#125;&quot;</span>: <span class="string">&quot;EXAMPLE&quot;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure>有返回结果表示脚本能正常运行</li></ul><h3 id="上传模板文件"><a href="#上传模板文件" class="headerlink" title="上传模板文件"></a>上传模板文件</h3><p>将附件中的Pyora_ExternalCheck_11G.xml模板导入到zabbix server中<br>在zabbix页面中，依次点击Configuration – Templates – Import – 选择文件 – Import，即完成了导入<br><img src="https://qiufuqi.github.io/img/hexo/20221117163441.png"></p><h3 id="添加机器"><a href="#添加机器" class="headerlink" title="添加机器"></a>添加机器</h3><p>添加机器，并链接到模板<br>在zabbix页面中，依次点击Configuration – Hosts – Create host – Hostname (输入ip地址) – groups (选Linux servers) – Templates (选择Pyora_ExternalCheck_11G) – 点击上面的Add – Macros – 点击上面的Add添加宏，全部添加完毕后，点击下面的Add，主机即添加完毕。<br><img src="https://qiufuqi.github.io/img/hexo/20221117164335.png"></p><p><a href="https://blog.csdn.net/zfw_666666/article/details/124712980">https://blog.csdn.net/zfw_666666/article/details/124712980</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> Zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS升级Python3</title>
      <link href="/python_upgrate/"/>
      <url>/python_upgrate/</url>
      
        <content type="html"><![CDATA[<p>在linux中有自带的python，但是python的版本是2.7，但是我们需要用到的是python3.x，所以就不得不升级python2.7为python3.x<br>共计2种方法，推荐使用第二种</p><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><h3 id="查看python的版本"><a href="#查看python的版本" class="headerlink" title="查看python的版本"></a>查看python的版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version  或者  <span class="comment"># python -V</span></span><br></pre></td></tr></table></figure><h3 id="下载新版本"><a href="#下载新版本" class="headerlink" title="下载新版本"></a>下载新版本</h3><p>下载最新版本python并解压缩<br><a href="https://www.python.org/downloads/source/">官网下载版本</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz</span><br><span class="line">tar -zxvf Python-3.7.7.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.7.7/</span><br></pre></td></tr></table></figure><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p><strong>如果没有升级过Python就需要安装Python相关的依赖包</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br><span class="line">yum install -y make gcc gcc-c++</span><br></pre></td></tr></table></figure><p>安装完依赖包后开始安装python3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="版本更换"><a href="#版本更换" class="headerlink" title="版本更换"></a>版本更换</h3><p>在/usr/local/bin/下有一个python3的链接，指向bin目录下的python3.7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br><span class="line">Python 2.7.16</span><br></pre></td></tr></table></figure><p>查看python的路径，在/usr/bin下面，可以看到python的链接是python2.7，所以执行python就相当于是执行python2.6<br>设置3.x为默认版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -la /usr/bin | grep python</span><br><span class="line"><span class="built_in">mv</span> /usr/bin/python /usr/bin/python.bak</span><br></pre></td></tr></table></figure><p>进入解压的目录当中，有一个python的可执行文件或者使用命令查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">find / -name python</span><br><span class="line">/root/Python-3.3.0/python</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若是输出为3.x，就说明是python3</span></span><br><span class="line"><span class="built_in">ln</span> -s /home/ec2-user/Python-3.7.7/python /usr/bin/python</span><br><span class="line">python --version</span><br></pre></td></tr></table></figure><h3 id="配置yum"><a href="#配置yum" class="headerlink" title="配置yum"></a>配置yum</h3><p>升级Python版本之后将由默认的python指向了python3，yum不能正常使用，需要更改yum的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/bin/yum</span></span><br><span class="line"><span class="comment"># vi /usr/libexec/urlgrabber-ext-down</span></span><br></pre></td></tr></table></figure><p>修改文件内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/python ==&gt; #!/usr/bin/python2.7</span></span><br></pre></td></tr></table></figure><p>安装pip<br>下载pip，<a href="https://pypi.org/project/pip/">官网地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># pip3 install --upgrade pip</span></span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><h3 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-node ~]<span class="comment"># yum -y install python3</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># cd /usr/bin/</span></span><br><span class="line">[root@slave-node bin]<span class="comment"># ll|grep python</span></span><br><span class="line">lrwxrwxrwx. 1 root root         9 Oct 19 15:32 python2 -&gt; python2.7</span><br><span class="line">-rwxr-xr-x. 1 root root      7216 Oct 31  2018 python2.7</span><br><span class="line">lrwxrwxrwx. 1 root root         7 Oct 19 15:32 python2.bak -&gt; python2</span><br><span class="line">lrwxrwxrwx  1 root root         9 Nov 17 16:04 python3 -&gt; python3.6</span><br><span class="line">-rwxr-xr-x  2 root root     11328 Nov 17  2020 python3.6</span><br><span class="line">-rwxr-xr-x  2 root root     11328 Nov 17  2020 python3.6m</span><br><span class="line">[root@slave-node bin]<span class="comment"># mv python python2.bak</span></span><br><span class="line">[root@slave-node bin]<span class="comment"># ln -sf python3.6 python</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只用执行一次，防止yum不可用</span></span><br><span class="line">[root@slave-node bin]<span class="comment"># sed -i &#x27;s?#!/usr/bin/python?&amp;2?&#x27; /usr/bin/yum</span></span><br></pre></td></tr></table></figure><h2 id="pip-命令报错-解决方法"><a href="#pip-命令报错-解决方法" class="headerlink" title="pip:命令报错 解决方法"></a>pip:命令报错 解决方法</h2><p>1、下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认版本，或者指定版本</span></span><br><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line"></span><br><span class="line">wget https://bootstrap.pypa.io/pip/3.6/get-pip.py</span><br><span class="line">wget https://bootstrap.pypa.io/pip/2.7/get-pip.py</span><br></pre></td></tr></table></figure><p>2、安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python get-pip.py</span><br></pre></td></tr></table></figure><p>3、查看pip版本（如果本步骤正常，忽略4/5步）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip -V</span><br></pre></td></tr></table></figure><p>4、查找pip安装路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name pip</span><br></pre></td></tr></table></figure><p>5、将pip添加到系统命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s  /usr/local/python/bin/pip /usr/bin/pip</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装FTP</title>
      <link href="/centos_ftp/"/>
      <url>/centos_ftp/</url>
      
        <content type="html"><![CDATA[<p><strong>CentOS 7 部署FTP</strong><br><a href="https://www.cnblogs.com/staryea/p/8520817.html">配置参考</a></p><h2 id="安装FTP服务"><a href="#安装FTP服务" class="headerlink" title="安装FTP服务"></a>安装FTP服务</h2><p>部署ftp服务，并设置开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install -y vsftpd</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl start vsftpd</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl enable vsftpd</span></span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /etc/vsftpd &amp;&amp; cp vsftpd.conf vsftpd.conf.bak</span></span><br><span class="line">[root@localhost vsftpd]<span class="comment"># vi vsftpd.conf</span></span><br><span class="line">·········</span><br><span class="line">在101行,102,104行</span><br><span class="line">101 chroot_local_user=YES  --改为YES chroot_local_user=YES将所有用户限定在主目录内</span><br><span class="line">102 chroot_list_enable=YES  --改为YES  chroot_list_enable=YES表示要启用chroot_list_file</span><br><span class="line">103 <span class="comment"># (default follows)</span></span><br><span class="line">104 chroot_list_file=/etc/vsftpd/chroot_list --注释放开 chroot_list_file这时列出的是那些“不会被限制在主目录下”的用户。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后追加</span></span><br><span class="line">userlist_deny=NO  --新增</span><br><span class="line">userlist_enable=YES --默认是YES</span><br></pre></td></tr></table></figure><h2 id="增加用户"><a href="#增加用户" class="headerlink" title="增加用户"></a>增加用户</h2><p>root用户执行 创建用户 &amp;&amp; 设置密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># useradd -d /home/vcenter -g ftp -s /sbin/nologin ftp_vcenter</span></span><br><span class="line">[root@localhost home]<span class="comment"># passwd ftp_vcenter </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /home/vcenter是ftp_vcenter用户的主目录 </span></span><br><span class="line"><span class="comment"># ftp_vcenter是ftp用户</span></span><br><span class="line"><span class="comment"># -g ftp是ftp组</span></span><br><span class="line"><span class="comment"># 如果创建错误 groupdel 或者userdel</span></span><br><span class="line"><span class="comment"># userdel -r ftp_vcenter</span></span><br></pre></td></tr></table></figure><h2 id="配置chroot-list文件"><a href="#配置chroot-list文件" class="headerlink" title="配置chroot_list文件"></a>配置chroot_list文件</h2><p>ftp_vcenter 代表 这个用户不被限制主目录内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># vi /etc/vsftpd/chroot_list</span></span><br><span class="line">ftp_vcenter</span><br></pre></td></tr></table></figure><h2 id="配置允许访问用户"><a href="#配置允许访问用户" class="headerlink" title="配置允许访问用户"></a>配置允许访问用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># vi /etc/vsftpd/user_list</span></span><br><span class="line">·········</span><br><span class="line">ftp_vcenter</span><br></pre></td></tr></table></figure><h2 id="更改pam-d"><a href="#更改pam-d" class="headerlink" title="更改pam.d"></a>更改pam.d</h2><p>注释两个auth</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost pam.d]<span class="comment"># cat /etc/pam.d/vsftpd </span></span><br><span class="line"><span class="comment">#%PAM-1.0</span></span><br><span class="line">session    optional     pam_keyinit.so    force revoke</span><br><span class="line"><span class="comment">#auth       requiredpam_listfile.so item=user sense=deny file=/etc/vsftpd/ftpusers onerr=succeed</span></span><br><span class="line"><span class="comment">#auth       requiredpam_shells.so</span></span><br><span class="line">auth       includepassword-auth</span><br><span class="line">account    includepassword-auth</span><br><span class="line">session    required     pam_loginuid.so</span><br><span class="line">session    includepassword-auth</span><br></pre></td></tr></table></figure><h2 id="重启FTP服务"><a href="#重启FTP服务" class="headerlink" title="重启FTP服务"></a>重启FTP服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># service vsftpd restart</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20230224164210.png"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>vsftpd.ftpusers：位于/etc/vsftpd目录下。它指定了哪些用户账户不能访问FTP服务器，例如root等。 如果想要root 登录 则注释里面的root<br><img src="https://qiufuqi.github.io/img/hexo/20230224163231.png"></p><p>vsftpd.user_list：位于/etc/vsftpd目录下。该文件里的用户账户在默认情况下也不能访问FTP服务器，<br>仅当vsftpd .conf配置文件里启用userlist_enable=NO选项时才允许访问。默认是YES，代表这个配置文件生效<br>我们在这里 如果只想让这里面的用户登录到FTP 需要添加 userlist_deny=NO 参数这个参数=NO 代表 这个配置信息的用户可以访问FTP<br><img src="https://qiufuqi.github.io/img/hexo/20230224163327.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> FTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> FTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DELL R740配置raid5</title>
      <link href="/dell740_raid5/"/>
      <url>/dell740_raid5/</url>
      
        <content type="html"><![CDATA[<p><strong>Dell R740服务器配置RAID5+1</strong><br>RAID5+1，一块盘做热备，最少3块盘，部分dell机型已不支持BIOS做raid，推荐使用dell普通模式</p><h1 id="普通模式raid"><a href="#普通模式raid" class="headerlink" title="普通模式raid"></a>普通模式raid</h1><p>开机点击F2，选择Device Settings<br><img src="https://qiufuqi.github.io/img/hexo/20230714084708.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230714084800.png"></p><p>选择第一个RAID控制器：RAID Controller in SL 3: Dell PERC H755 Front Configuration Utility<br><img src="https://qiufuqi.github.io/img/hexo/20230714084859.png"></p><p>进入主菜单，有不同的选项，选择第一个Configuration Management<br><img src="https://qiufuqi.github.io/img/hexo/20230714085022.png"><br>(Physical Disk Management查看物理磁盘)</p><p>进入管理页面，首先选择:Clear Configuration 清除配置(dell 会自动安装raid，需要手动清除换成自己所需要的)<br><img src="https://qiufuqi.github.io/img/hexo/20230714145012.png"></p><p>创建虚拟化磁盘：Create Virtual Disk，进入创建页面，选择raid level，并选择磁盘<br><img src="https://qiufuqi.github.io/img/hexo/20230714145130.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230714145220.png"></p><p>选择创建虚拟化磁盘，至此创建完成，可进行查看<br><img src="https://qiufuqi.github.io/img/hexo/20230714145252.png"></p><p><img src="https://qiufuqi.github.io/img/hexo/20230714145327.png"><br><img src="https://qiufuqi.github.io/img/hexo/20230714145340.png"></p><h1 id="BIOS做raid"><a href="#BIOS做raid" class="headerlink" title="BIOS做raid"></a>BIOS做raid</h1><h2 id="F2到设置页面"><a href="#F2到设置页面" class="headerlink" title="F2到设置页面"></a>F2到设置页面</h2><p>开机点击F2选择第一个选项进入到BIOS<br><img src="https://qiufuqi.github.io/img/hexo/20221110163059.png"></p><h2 id="选择Boot-Settings"><a href="#选择Boot-Settings" class="headerlink" title="选择Boot Settings"></a>选择Boot Settings</h2><p><img src="https://qiufuqi.github.io/img/hexo/20221110163112.png"></p><h2 id="选择BIOS"><a href="#选择BIOS" class="headerlink" title="选择BIOS"></a>选择BIOS</h2><p>选择BIOS，然后按Esc，保存配置重启服务器<br><img src="https://qiufuqi.github.io/img/hexo/20221110163124.png"></p><h2 id="进入阵列卡"><a href="#进入阵列卡" class="headerlink" title="进入阵列卡"></a>进入阵列卡</h2><p>服务器重启后，重复按Ctrl+R进入阵列卡，如下图所示：<br><img src="https://qiufuqi.github.io/img/hexo/20221110163135.png"></p><h2 id="点击F2"><a href="#点击F2" class="headerlink" title="点击F2"></a>点击F2</h2><p>选择倒数第二个选项<br><img src="https://qiufuqi.github.io/img/hexo/20221110163151.png"></p><h2 id="空格磁盘"><a href="#空格磁盘" class="headerlink" title="空格磁盘"></a>空格磁盘</h2><p>空格全选所有磁盘，Tab切换到OK确认<br><img src="https://qiufuqi.github.io/img/hexo/20221110163200.png"></p><h2 id="点击F2-1"><a href="#点击F2-1" class="headerlink" title="点击F2"></a>点击F2</h2><p>点击F2进入第一个选项：<br><img src="https://qiufuqi.github.io/img/hexo/20221110163211.png"></p><h2 id="选择RAID"><a href="#选择RAID" class="headerlink" title="选择RAID"></a>选择RAID</h2><p>如果有RAID-6就直接全选所有硬盘然后选择等级为RAID-6<br><img src="https://qiufuqi.github.io/img/hexo/20221110163223.png"></p><h2 id="点击OK按钮"><a href="#点击OK按钮" class="headerlink" title="点击OK按钮"></a>点击OK按钮</h2><p>OK后退出如下图：<br><img src="https://qiufuqi.github.io/img/hexo/20221110163317.png"></p><h2 id="光标移至红框处按F2"><a href="#光标移至红框处按F2" class="headerlink" title="光标移至红框处按F2"></a>光标移至红框处按F2</h2><p><img src="https://qiufuqi.github.io/img/hexo/20221110163329.png"></p><h2 id="选择Manage-Ded-HS"><a href="#选择Manage-Ded-HS" class="headerlink" title="选择Manage Ded, HS"></a>选择Manage Ded, HS</h2><p><img src="https://qiufuqi.github.io/img/hexo/20221110163348.png"></p><h2 id="选中剩余硬盘："><a href="#选中剩余硬盘：" class="headerlink" title="选中剩余硬盘："></a>选中剩余硬盘：</h2><p>选中剩余的一个一块硬盘然后点击OK：<br><img src="https://qiufuqi.github.io/img/hexo/20221110163357.png"></p><h2 id="点击F2-2"><a href="#点击F2-2" class="headerlink" title="点击F2"></a>点击F2</h2><p>选中刚才配置的硬盘点击F2，快速初始化硬盘<br><img src="https://qiufuqi.github.io/img/hexo/20221110163407.png"></p><h2 id="RAID-5-1磁盘阵列已配置完成"><a href="#RAID-5-1磁盘阵列已配置完成" class="headerlink" title="RAID 5+1磁盘阵列已配置完成"></a>RAID 5+1磁盘阵列已配置完成</h2><p>如下所示RAID 5+1磁盘阵列已配置完成，重启服务器即可使用U盘安装系统：<br><img src="https://qiufuqi.github.io/img/hexo/20221110163420.png"></p><h2 id="重启系统安装"><a href="#重启系统安装" class="headerlink" title="重启系统安装"></a>重启系统安装</h2><p>重启进入到Boot Manager选择One-shot BIOS Boot Menu,选择对应插入的U盘就可进入到系统安装环节。<br><img src="https://qiufuqi.github.io/img/hexo/20221110163431.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221110163440.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> RAID </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> DELL </tag>
            
            <tag> RAID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IBM X3650 M3配置多raid</title>
      <link href="/ibm_raid_more/"/>
      <url>/ibm_raid_more/</url>
      
        <content type="html"><![CDATA[<p><strong>IBM X3650 M3服务器上多RAID配置</strong><br><a href="https://blog.51cto.com/u_15233520/5226348">配置参考</a></p><p>物理机，两块系统盘做raid1，其余盘每块硬盘做raid0，4块SATA和2块SSD   <br><img src="https://qiufuqi.github.io/img/hexo/20221207170745.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221207170756.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221207170820.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221207170834.png"></p><p>调整 cache写策略为write through     <br><img src="https://qiufuqi.github.io/img/hexo/20221207170847.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221207170856.png"></p><p>全部硬盘 raid做完： <br><img src="https://qiufuqi.github.io/img/hexo/20221207170910.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> RAID </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> RAID </tag>
            
            <tag> IBM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IBM X3650 M3配置raid5</title>
      <link href="/ibm_raid5/"/>
      <url>/ibm_raid5/</url>
      
        <content type="html"><![CDATA[<p><strong>IBM X3650 M3服务器上RAID配置</strong></p><h4 id="进入Web-BIOS"><a href="#进入Web-BIOS" class="headerlink" title="进入Web BIOS"></a>进入Web BIOS</h4><ul><li>进入Web BIOS启动机器，自检过程中会有 <Ctrl> + <H> 的提示，同时按下这两个键，再点击Start，就可以进入WEB BIOS的图形设置界面<br><img src="https://qiufuqi.github.io/img/hexo/20221110164336.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221110164355.png"></li><li>系统启动后，按F1进入bios进行设置  选择system setting =&gt; Adpters and UEFI Drivers =&gt; 选择LSI EFI SAS Driver下的PCI的驱动设置<br><img src="https://qiufuqi.github.io/img/hexo/20221110164633.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221110164715.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221110164355.png"></li></ul><h4 id="进入设置步骤"><a href="#进入设置步骤" class="headerlink" title="进入设置步骤"></a>进入设置步骤</h4><p>进入WebBIOS后点击Configuration Wizard，进入阵列设置向导<br><img src="https://qiufuqi.github.io/img/hexo/20221110164756.png"><br>有三个选项：</p><ul><li>Clear Configuration（清除配置）：清除已有的配置信息，注意会丢失所有的数据</li><li>New Configuration（全新配置）：清除已有的配置信息，并且全新创建新的配置</li><li>Add Configuration（添加配置）：保留原有配置信息，并且添加新的硬盘到原有的配置中（该配置通常不会引起数据丢失，但该操作有风险，建议先备份数据！）<br><img src="https://qiufuqi.github.io/img/hexo/20221110164814.png"></li></ul><p>点Next进入下一步，选择Yes确定<br><img src="https://qiufuqi.github.io/img/hexo/20221110164851.png"></p><p>选择手动配置 Manual Configuration，选择Next<br><img src="https://qiufuqi.github.io/img/hexo/20221110164905.png"></p><p>左边选择要配置在阵列中的硬盘，然后按Add to Array，从左边的Drivers中选到右边 Drivers Groups中的Drive group 0做RAID 1<br><img src="https://qiufuqi.github.io/img/hexo/20221110164929.png"></p><p>然后选择Accept DG，创建新的Drive group 1，再选择左边的硬盘Add to Array到右边的Drive group 1中做JBOD或RAID 0，选好硬盘后，选择 Accept DG后点击Next进入下图界面<br><img src="https://qiufuqi.github.io/img/hexo/20221110164957.png"></p><p>点Next进入下图，在左侧的ArrayWithFreeSpace中选中刚才做好的 Disk Groups，按Add to SPAN添加到右侧的span中，然后点Next<br><img src="https://qiufuqi.github.io/img/hexo/20221110165029.png"></p><p>进入Virtual Disk配置界面，选好Virtual Disk参数后，点选Accept接受配置，Next</p><ul><li>RAID Level中可以选择要配置的RAID级别</li><li>右侧的Possible RAID Level中显示可能的RAID级别的磁盘容量，比如示例中三个73G的硬盘配置raid0容量约为200G，而如果配置RAID5容量约为134G</li><li>Select size选项中可以修改Virtual Disk的容量，通常这个值设定为该磁盘组RAID级别的最大容量，注意单位选择GB<br><img src="https://qiufuqi.github.io/img/hexo/20221110165111.png"></li></ul><p>如要对Drive group 1做操作，按照对Drive group 0的操作重复即可<br>在最后的确认画面里点选Accept接受配置，然后会要求确认保存配置和初始化清除数据，就完成了对阵列的配置<br><img src="https://qiufuqi.github.io/img/hexo/20221110165130.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> RAID </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> RAID </tag>
            
            <tag> IBM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RAID简介</title>
      <link href="/raid_text/"/>
      <url>/raid_text/</url>
      
        <content type="html"><![CDATA[<p>RAID（独立冗余磁盘阵列）是一种把多块独立的硬盘（物理硬盘）按不同的方式组合起来形成一个硬盘组（逻辑硬盘），从而提供比单个硬盘更高的存储性能与数据备份能力的技术。</p><h1 id="RAID分类"><a href="#RAID分类" class="headerlink" title="RAID分类"></a>RAID分类</h1><p>通常我们有5种常见的RAID级别 raid0 raid1 raid3 raid5 raid10，不同的RAID级别提供不同的性能，数据的有效性和完整性取决于特定的I/O环境。没有任何一种RAID级别可以完美的适合任何用户。<br>较为常用的是raid5</p><h2 id="RAID0"><a href="#RAID0" class="headerlink" title="RAID0"></a>RAID0</h2><p>RAID0最少要两块硬盘才能实现。<br><img src="https://qiufuqi.github.io/img/hexo/20221110161738.png"><br>RAID 0 将数据分条，存储到多个磁盘中，不带任何冗余信息。数据被分割成块，继续分布到磁盘中。这一级别也被认为是纯粹的数据分条。创建RAID 0 需要一个或多个磁盘。也就是说，单独的一个磁盘可以被认为是一个RAID 0 阵列。在所有的级别中，RAID 0的速度是最快的。但是RAID 0没有冗余功能的，如果一个磁盘（物理）损坏，则所有的数据都无法使用。</p><h2 id="RAID1"><a href="#RAID1" class="headerlink" title="RAID1"></a>RAID1</h2><p>RAID1最少要两块硬盘才能实现。<br><img src="https://qiufuqi.github.io/img/hexo/20221110161920.png"><br>RAID 1至少要有两个（只有两个）硬盘才能组成，因此也称为镜像（Mirroring）方式。所谓镜像就是每两个硬盘的内容一模一样，但是对操作系统而言只呈现一个硬盘，以便于管理。由此可见，RAID 1对数据进行了完全的备份，其可靠性是最高的。当然，其数据的写入时间可能会稍长一点，但因为两个镜象硬盘可以同时读取数据，故读数据与RAID 0一样。</p><p>磁盘阵列的总容量为其中N/2块硬盘的容量在RAID 级别中，RAID 1通过数据镜像提供了最高的信息可用性。镜像硬盘相当于一个备份盘，可想而知，这种硬盘模式的安全性是非常高的，RAID 1的数据安全性在所有的RAID级别上来说是最好的。但是其磁盘的利用率却只有50%，是所有RAID级别中最低的。</p><h2 id="RAID3"><a href="#RAID3" class="headerlink" title="RAID3"></a>RAID3</h2><p><img src="https://qiufuqi.github.io/img/hexo/20221110162131.png"><br>RAID 3 是最常使用的硬盘阵列技术。RAID 3至少需要3个硬盘。RAID 3的总容量为各个硬盘容量之和减去一块硬盘的容量。</p><p>应用此技术，数据被分条存储在多个磁盘内。另外，会产生奇偶校验，并一并存储在磁盘内.使用RAID 3，数据知识块会比平均I/O大小来的小的多，同时磁盘主轴会被同步，以便提高数据传送的带宽。由于使用奇偶校验，RAID 3的数据条带可以抵抗其中的一个磁盘出错而不丢失任何信息。RAID 3对于大量的连续数据可提供很好的传输率，但对于随机数据，奇偶盘会成为写操作的瓶颈。利用单独的校验盘来保护数据虽然没有镜像的安全性高，但是硬盘利用率得到了很大的提高，为（n-1）/n。</p><h2 id="RAID5"><a href="#RAID5" class="headerlink" title="RAID5"></a>RAID5</h2><p><img src="https://qiufuqi.github.io/img/hexo/20221110162141.png"><br>RAID 5 和RAID 3极为相似，都是数据分条，奇偶校验产生冗余。但是，它不采用一个固定的硬盘来存储奇偶校验值，所有数据和校验值都分布在所有硬盘上。RAID5最大的好处是在一块盘掉线的情况下，RAID照常工作，相对于RAID0必须每一块盘都正常才可以正常工作的状况容错性能好多了。因此RAID5是RAID级别中最常见的一个类型。</p><h2 id="RAID10"><a href="#RAID10" class="headerlink" title="RAID10"></a>RAID10</h2><p>RAID10至少需要4块盘<br><img src="https://qiufuqi.github.io/img/hexo/20221110162303.png"><br>RAID 10的容错功能和RAID 1相同，分条使用RAID 1 段得到较高的I/O率。RAID 10巧妙的利用了RAID 0的速度以及RAID 1的保护两种特性，不过它的缺点是需要的硬盘数较多，因为至少必须拥有四个以上的偶数硬盘才能使用。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> RAID </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> RAID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx双机热备-主主模式</title>
      <link href="/nginx_zhuzhu/"/>
      <url>/nginx_zhuzhu/</url>
      
        <content type="html"><![CDATA[<p>前文已经讲述了<a href="/nginx_zhucong">Nginx双机热备-主从模式</a>,本文主要讲述主主模式的配置。<br>即前端使用两台负载均衡服务器，互为主备，且都处于活动状态，同时各自绑定一个公网虚拟IP，提供负载均衡服务；当其中一台发生故障时，另一台接管发生故障服务器的公网虚拟IP（这时由非故障机器一台负担所有的请求）。这种方案，经济实惠，非常适合于当前架构环境。</p><p>keepalived不支持跨网段ip地址<br>keepalived采用arp广播模式，无法跨网段。也就是10.11.7.235与10.128.2.106这种ip地址是无法通的,必须是在同一个子网内.</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>操作系统：centos7.6<br>master机器(master-node)：10.11.7.231  vip：10.11.7.235<br>slave机器(slave-node)：10.11.7.232    vip: 10.11.7.236<br>slave机器(slave-node)：10.11.7.233    vip: 10.11.7.237<br>主主模式需要三个负载均衡的VIP:10.11.7.235 10.11.7.236 10.11.7.237</p><h2 id="添加检测脚本"><a href="#添加检测脚本" class="headerlink" title="添加检测脚本"></a>添加检测脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新vip的arp记录到网关（注意脚本中的网卡别填错了，要跟vip所在网卡一致）</span></span><br><span class="line">[root@master-node ~]<span class="comment"># vi /etc/keepalived/clean_arp.sh         </span></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">VIP=<span class="variable">$1</span></span><br><span class="line"><span class="comment"># 负载均衡器的公网网关地址</span></span><br><span class="line">GATEWAY=<span class="variable">$2</span>                                                       </span><br><span class="line">/sbin/arping -I em1 -c 5 -s <span class="variable">$VIP</span> <span class="variable">$GATEWAY</span> &amp;&gt;/dev/null</span><br><span class="line">[root@master-node ~]<span class="comment"># chmod 755 /etc/keepalived/clean_arp.sh</span></span><br></pre></td></tr></table></figure><h2 id="keepalived配置"><a href="#keepalived配置" class="headerlink" title="keepalived配置"></a>keepalived配置</h2><p>在主从模式的基础上修改，可参考<a href="/nginx_zhucong">主从模式</a><br><strong>master-node节点的keepalived配置,并重启keepalived服务</strong><br>master负载机上的keepalived配置：（注意，这里是双主配置，MASTER-BACKUP和BACKUP-MASTER;如果是多主，比如三主，就是MATER-BACKUP-BACKUP（101-99-99）、BACKUP-MASTER-BACKUP（99-101-97）和BACKUP-BACKUP-MASTER（97-97-101））<br>注意：配置中的虚拟路由标识<strong>virtual_router_id在MASTER和BACKUP处配置不能一样</strong>（但在主从模式下配置是一样的）<br>同一个virtual_router_id下 priority需设置不一样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># vi /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id master-node</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_http_port &#123;</span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_nginx.sh&quot;</span></span><br><span class="line">    interval 2</span><br><span class="line">    weight -5</span><br><span class="line">    fall 2</span><br><span class="line">    rise 1 </span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens192</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 101</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_http_port</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.11.7.235/24</span><br><span class="line">    &#125;</span><br><span class="line">    notify_master <span class="string">&quot;/etc/keepalived/clean_arp.sh 10.11.7.235 10.11.7.2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;           </span><br><span class="line">    state BACKUP          </span><br><span class="line">    interface ens192           </span><br><span class="line">    virtual_router_id 52      </span><br><span class="line">    priority 99              </span><br><span class="line">    advert_int 1              </span><br><span class="line">    authentication &#123;           </span><br><span class="line">        auth_type PASS        </span><br><span class="line">        auth_pass 1111         </span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;                    </span><br><span class="line">      chk_http_port                </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;       </span><br><span class="line">      10.11.7.236/24</span><br><span class="line">    &#125;</span><br><span class="line">notify_master <span class="string">&quot;/etc/keepalived/clean_arp.sh 10.11.7.236  10.11.7.2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_3 &#123;           </span><br><span class="line">    state BACKUP          </span><br><span class="line">    interface ens192           </span><br><span class="line">    virtual_router_id 53</span><br><span class="line">    priority 99           </span><br><span class="line">    advert_int 1              </span><br><span class="line">    authentication &#123;           </span><br><span class="line">        auth_type PASS        </span><br><span class="line">        auth_pass 1111         </span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;                    </span><br><span class="line">      chk_http_port                </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;       </span><br><span class="line">      10.11.7.237/24</span><br><span class="line">    &#125;</span><br><span class="line">notify_master <span class="string">&quot;/etc/keepalived/clean_arp.sh 10.11.7.237  10.11.7.2&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>slave-node节点的keepalived配置 backup-master-backup,并重启keepalived服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">! Configuration File <span class="keyword">for</span> keepalived    </span><br><span class="line">global_defs &#123;              </span><br><span class="line">  router_id slave-node                    </span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_http_port &#123;         </span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_nginx.sh&quot;</span>   </span><br><span class="line">    interval 2                      </span><br><span class="line">    weight -5                       </span><br><span class="line">    fall 2                   </span><br><span class="line">    rise 1                  </span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;            </span><br><span class="line">    state BACKUP           </span><br><span class="line">    interface ens192            </span><br><span class="line">    virtual_router_id 51        </span><br><span class="line">    priority 99               </span><br><span class="line">    advert_int 1               </span><br><span class="line">    authentication &#123;            </span><br><span class="line">        auth_type PASS         </span><br><span class="line">        auth_pass 1111          </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;        </span><br><span class="line">        10.11.7.235/24</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;                     </span><br><span class="line">      chk_http_port                 </span><br><span class="line">    &#125;</span><br><span class="line">  notify_master <span class="string">&quot;/etc/keepalived/clean_arp.sh 10.11.7.235 10.11.7.2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;           </span><br><span class="line">    state MASTER          </span><br><span class="line">    interface ens192           </span><br><span class="line">    virtual_router_id 52      </span><br><span class="line">    priority 101              </span><br><span class="line">    advert_int 1              </span><br><span class="line">    authentication &#123;           </span><br><span class="line">        auth_type PASS        </span><br><span class="line">        auth_pass 1111         </span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;                    </span><br><span class="line">      chk_http_port                </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;       </span><br><span class="line">      10.11.7.236/24</span><br><span class="line">    &#125;</span><br><span class="line">notify_master <span class="string">&quot;/etc/keepalived/clean_arp.sh 10.11.7.236 10.11.7.2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_3 &#123;           </span><br><span class="line">    state BACKUP          </span><br><span class="line">    interface ens192           </span><br><span class="line">    virtual_router_id 53</span><br><span class="line">    priority 97            </span><br><span class="line">    advert_int 1              </span><br><span class="line">    authentication &#123;           </span><br><span class="line">        auth_type PASS        </span><br><span class="line">        auth_pass 1111         </span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;                    </span><br><span class="line">      chk_http_port                </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;       </span><br><span class="line">      10.11.7.237/24</span><br><span class="line">    &#125;</span><br><span class="line">notify_master <span class="string">&quot;/etc/keepalived/clean_arp.sh 10.11.7.237  10.11.7.2&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>slave-node节点的keepalived配置 backup-backup-master,并重启keepalived服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">! Configuration File <span class="keyword">for</span> keepalived    </span><br><span class="line">global_defs &#123;              </span><br><span class="line">  router_id slave-node                    </span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_http_port &#123;         </span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_nginx.sh&quot;</span>   </span><br><span class="line">    interval 2                      </span><br><span class="line">    weight -5                       </span><br><span class="line">    fall 2                   </span><br><span class="line">    rise 1                  </span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;            </span><br><span class="line">    state BACKUP           </span><br><span class="line">    interface ens192            </span><br><span class="line">    virtual_router_id 51        </span><br><span class="line">    priority 97              </span><br><span class="line">    advert_int 1               </span><br><span class="line">    authentication &#123;            </span><br><span class="line">        auth_type PASS         </span><br><span class="line">        auth_pass 1111          </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;        </span><br><span class="line">        10.11.7.235/24</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;                     </span><br><span class="line">      chk_http_port                 </span><br><span class="line">    &#125;</span><br><span class="line">  notify_master <span class="string">&quot;/etc/keepalived/clean_arp.sh 10.11.7.235 10.11.7.2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;           </span><br><span class="line">    state BACKUP          </span><br><span class="line">    interface ens192           </span><br><span class="line">    virtual_router_id 52      </span><br><span class="line">    priority 97              </span><br><span class="line">    advert_int 1              </span><br><span class="line">    authentication &#123;           </span><br><span class="line">        auth_type PASS        </span><br><span class="line">        auth_pass 1111         </span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;                    </span><br><span class="line">      chk_http_port                </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;       </span><br><span class="line">      10.11.7.236/24</span><br><span class="line">    &#125;</span><br><span class="line">notify_master <span class="string">&quot;/etc/keepalived/clean_arp.sh 10.11.7.236 10.11.7.2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_3 &#123;           </span><br><span class="line">    state MASTER          </span><br><span class="line">    interface ens192           </span><br><span class="line">    virtual_router_id 53</span><br><span class="line">    priority 101             </span><br><span class="line">    advert_int 1              </span><br><span class="line">    authentication &#123;           </span><br><span class="line">        auth_type PASS        </span><br><span class="line">        auth_pass 1111         </span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;                    </span><br><span class="line">      chk_http_port                </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;       </span><br><span class="line">      10.11.7.237/24</span><br><span class="line">    &#125;</span><br><span class="line">notify_master <span class="string">&quot;/etc/keepalived/clean_arp.sh 10.11.7.237  10.11.7.2&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="VIP漂移验证"><a href="#VIP漂移验证" class="headerlink" title="VIP漂移验证"></a>VIP漂移验证</h2><p>关闭两台负载机其中一台的keepalived服务，那么它的VIP就会自动漂移到另一台机器上。<br>关闭两台机器的nginx，会自动重启（前提是keepalived服务要启动）！对网站域名的访问丝毫不受影响。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Nginx </category>
          
          <category> 双机热备-主主 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> 主主 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix监控2-Agent客户端</title>
      <link href="/zabbix_agent/"/>
      <url>/zabbix_agent/</url>
      
        <content type="html"><![CDATA[<p><strong>Zabbix监控客户端：window版本 和 linux版本</strong><br>zabbix服务器：10.11.7.60<br>zabbix agent官网<a href="https://www.zabbix.com/cn/download_agents?version=5.0+LTS&release=5.0.16&os=Windows&os_version=Any&hardware=amd64&encryption=OpenSSL&packaging=MSI&show_legacy=0#tab:44">下载地址</a></p><h1 id="Window版本"><a href="#Window版本" class="headerlink" title="Window版本"></a>Window版本</h1><p>源码压缩包安装，安装包安装，window服务器：10.128.2.200</p><h2 id="Window压缩包"><a href="#Window压缩包" class="headerlink" title="Window压缩包"></a>Window压缩包</h2><h3 id="下载window安装包"><a href="#下载window安装包" class="headerlink" title="下载window安装包"></a>下载window安装包</h3><p>下载对应window版本安装包<br>链接: <a href="https://pan.baidu.com/s/1iN9ie7EkeVEELU_N14bS_Q">https://pan.baidu.com/s/1iN9ie7EkeVEELU_N14bS_Q</a> 提取码: mcte </p><h3 id="上传至服务器"><a href="#上传至服务器" class="headerlink" title="上传至服务器"></a>上传至服务器</h3><p>1、将压缩包上传至目标服务器<br>2、新建一个文件夹zabbix（英文路径），将压缩包解压至zabbix文件夹中<br>3、解压文件共两个子文件夹：bin   conf<br>4、进入conf文件夹，修改配置文件 zabbix_agentd.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 23行 日志路径写自己解压的路径，或者自己定义一个路径，此路径存放zabbix的日志</span></span><br><span class="line">LogFile=D:\zabbix\zabbix_agentd.log  </span><br><span class="line"><span class="comment"># 106行 zabbix服务器地址</span></span><br><span class="line">Server=10.11.7.60</span><br><span class="line"><span class="comment"># 147行 zabbix服务器地址</span></span><br><span class="line">ServerActive=10.11.7.60</span><br><span class="line"><span class="comment"># 158行 window服务器地址</span></span><br><span class="line">Hostname=10.128.2.200</span><br></pre></td></tr></table></figure><p>5、以管理员身份运行命令行，下面操作在命令行执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路径是自己解压的路径  bin文件夹</span></span><br><span class="line"><span class="built_in">cd</span> C:\zabbix\bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装客户端  路径是自己解压的路径  conf文件夹的路径</span></span><br><span class="line">C:\zabbix\bin&gt; zabbix_agentd.exe -i -c C:\zabbix\conf\zabbix_agentd.conf</span><br><span class="line">zabbix_agentd.exe [4808]: service [Zabbix Agent] installed successfully</span><br><span class="line">zabbix_agentd.exe [4808]: event <span class="built_in">source</span> [Zabbix Agent] installed successfully</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">C:\zabbix\bin&gt; zabbix_agentd.exe -s -c C:\zabbix\conf\zabbix_agentd.conf</span><br><span class="line">zabbix_agentd.exe [4748]: service [Zabbix Agent] started successfully</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221108140924.png"></p><h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><p>上述操作出现错误则卸载重新安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\zabbix\bin</span><br><span class="line">C:\zabbix\bin&gt; zabbix_agentd.exe -d -c C:\zabbix\conf\zabbix_agentd.conf</span><br><span class="line">zabbix_agentd.exe [4860]: service [Zabbix Agent] uninstalled successfully</span><br><span class="line">zabbix_agentd.exe [4860]: event <span class="built_in">source</span> [Zabbix Agent] uninstalled successfully</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line">  -c：指定配置文件所有位置</span><br><span class="line">  -i：安装客户端</span><br><span class="line">  -s：启动客户端</span><br><span class="line">  -x：停止客户端</span><br><span class="line">  -d：卸载客户端</span><br></pre></td></tr></table></figure><h3 id="防火墙端口放行"><a href="#防火墙端口放行" class="headerlink" title="防火墙端口放行"></a>防火墙端口放行</h3><p>打开window防火墙：控制面板\系统和安全\Windows 防火墙，点击：允许应用或功能通过windows防火墙<br><img src="https://qiufuqi.github.io/img/hexo/20221108141534.png"><br>点击：允许其他应用–浏览 找到制定应用<br><img src="https://qiufuqi.github.io/img/hexo/20221108141604.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221108141702.png"></p><h2 id="安装包安装"><a href="#安装包安装" class="headerlink" title="安装包安装"></a>安装包安装</h2><p>官网<a href="https://www.zabbix.com/cn/download_agents?version=5.0+LTS&release=5.0.16&os=Windows&os_version=Any&hardware=amd64&encryption=OpenSSL&packaging=MSI&show_legacy=0#tab:44">下载地址</a></p><h3 id="双机安装包"><a href="#双机安装包" class="headerlink" title="双机安装包"></a>双机安装包</h3><p><img src="https://qiufuqi.github.io/img/hexo/20221108150142.png"></p><h3 id="配置zabbix-server参数信息"><a href="#配置zabbix-server参数信息" class="headerlink" title="配置zabbix-server参数信息"></a>配置zabbix-server参数信息</h3><p><img src="https://qiufuqi.github.io/img/hexo/20221108150221.png"></p><h3 id="选择zabbix-agent安装目录"><a href="#选择zabbix-agent安装目录" class="headerlink" title="选择zabbix-agent安装目录"></a>选择zabbix-agent安装目录</h3><p>默认安装目录C:\Program Files\Zabbix Agent\，需要记住次安装目录，手动启动时需要进入此目录启动客户端。<br><img src="https://qiufuqi.github.io/img/hexo/20221108150327.png"></p><h3 id="启动zabbix-agent客户端"><a href="#启动zabbix-agent客户端" class="headerlink" title="启动zabbix-agent客户端"></a>启动zabbix-agent客户端</h3><p>进入指定目录下C:\Program Files\Zabbix Agent\ ，双机zabbix_agentd.exe</p><h1 id="Linux版本"><a href="#Linux版本" class="headerlink" title="Linux版本"></a>Linux版本</h1><p>rpm包安装、源码安装， 推荐使用rpm安装（yum）</p><h2 id="RPM安装"><a href="#RPM安装" class="headerlink" title="RPM安装"></a>RPM安装</h2><p>rpm<a href="https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/">下载地址</a>，选择对应版本。<br>防火墙关闭或者放行端口 zabbix-agent默认端口为10050，zabbix-server默认端口是10051</p><h3 id="安装zabbix-agent"><a href="#安装zabbix-agent" class="headerlink" title="安装zabbix-agent"></a>安装zabbix-agent</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#会默认创建zabbix用户</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-agent-5.0.16-1.el7.x86_64.rpm</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># yum clean all</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># yum -y install zabbix-agent              #查看版本是5.0.16，与我安装的zabbix服务器版本一致</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># systemctl start zabbix-agent#启动zabbix-agent</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># systemctl enable zabbix-agent#开机自启zabbix-agent</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># lsof -i:10050    #zabbix-agent默认端口为10050，zabbix-server默认端口是10051</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># netstat -anp|grep zabbix</span></span><br><span class="line">tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN      18888/zabbix_agentd </span><br><span class="line">tcp6       0      0 :::10050                :::*                    LISTEN      18888/zabbix_agentd</span><br><span class="line">[root@slave-node ~]<span class="comment"># tail -f /var/log/zabbix/zabbix_agentd.log #查看zabbix-agent是否启动报错，能不能正常与zabbix-server端通信</span></span><br></pre></td></tr></table></figure><h3 id="配置zabbix-agent"><a href="#配置zabbix-agent" class="headerlink" title="配置zabbix-agent"></a>配置zabbix-agent</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zabbix-agent的配置文件路径位于/etc/zabbix/zabbix_agentd.conf</span></span><br><span class="line">[root@slave-node ~]<span class="comment"># rpm -qa| grep zabbix*</span></span><br><span class="line">zabbix-agent-5.0.16-1.el7.x86_64</span><br><span class="line">[root@slave-node ~]<span class="comment"># rpm -ql zabbix-agent-5.0.16-1.el7.x86_64</span></span><br><span class="line">/etc/logrotate.d/zabbix-agent</span><br><span class="line">/etc/zabbix/zabbix_agentd.conf</span><br><span class="line">/etc/zabbix/zabbix_agentd.d</span><br><span class="line">·········</span><br><span class="line">/var/run/zabbix</span><br><span class="line"></span><br><span class="line">[root@slave-node ~]<span class="comment"># vi /etc/zabbix/zabbix_agentd.conf  #主要修改下面几个参数</span></span><br><span class="line">Server=10.11.7.60<span class="comment">#被动模式，指定zabbix-server服务端的ip地址，多个ip的话使用逗号分隔</span></span><br><span class="line">ServerActive=10.11.7.60:10051<span class="comment">#主动模式，指定zabbix-server的ip地址，使用逗号分隔多IP，如果注释这个选项，那么当前服务器的主动监控就被禁用了</span></span><br><span class="line">Hostname=10.11.7.232      <span class="comment">#当使用主动模式时,这个名称的设置必须与zabbix-web监控页面创建的主机名称保持一致</span></span><br><span class="line"></span><br><span class="line">[root@slave-node ~]<span class="comment"># systemctl restart zabbix-agent</span></span><br></pre></td></tr></table></figure><h2 id="安装包安装-1"><a href="#安装包安装-1" class="headerlink" title="安装包安装"></a>安装包安装</h2><p>不建议使用这种方式，可能会遇到缺失组件问题。<br>源码<a href="https://www.zabbix.com/cn/download_agents?version=5.0+LTS&release=5.0.16&os=Linux&os_version=4.12&hardware=ppc64le&encryption=No+encryption&packaging=Archive&show_legacy=0#tab:44">下载地址</a></p><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p>解压之后，出现下面三个目录:bin,conf,sbin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># mkdir /opt/zabbix &amp;&amp; cd /opt/zabbix</span></span><br><span class="line">[root@master-node ~]<span class="comment"># wget https://cdn.zabbix.com/zabbix/binaries/stable/5.0/5.0.16/zabbix_agent-5.0.16-linux-3.0-amd64-static.tar.gz</span></span><br><span class="line">[root@master-node ~]<span class="comment"># tar -zxvf zabbix_agent-5.0.16-linux-3.0-amd64-static.tar.gz</span></span><br></pre></td></tr></table></figure><h3 id="创建用户和组"><a href="#创建用户和组" class="headerlink" title="创建用户和组"></a>创建用户和组</h3><p>新建zabbix用户并将其加入到zabbix组，并将他设置为不可登录的类型的用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node zabbix_agent]<span class="comment"># groupadd zabbix</span></span><br><span class="line">[root@master-node zabbix_agent]<span class="comment"># useradd -g zabbix zabbix -s /sbin/nologin</span></span><br></pre></td></tr></table></figure><h3 id="进入bin目录"><a href="#进入bin目录" class="headerlink" title="进入bin目录"></a>进入bin目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node zabbix_agent]<span class="comment"># cd bin &amp;&amp; ls</span></span><br><span class="line">zabbix_get  zabbix_sender</span><br><span class="line">[root@master-node zabbix_agent]<span class="comment"># cp /opt/zabbix/sbin/zabbix_sender /opt/zabbix/sbin/zabbix_get /usr/bin/</span></span><br></pre></td></tr></table></figure><h3 id="进入sbin目录"><a href="#进入sbin目录" class="headerlink" title="进入sbin目录"></a>进入sbin目录</h3><p>可执行文件是zabbix_agentd的客户端的可执行文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node bin]<span class="comment"># cd ../sbin/ &amp;&amp; ls</span></span><br><span class="line">zabbix_agentd</span><br><span class="line">[root@master-node sbin]<span class="comment"># cp /opt/zabbix/sbin/zabbix_agentd /usr/sbin/</span></span><br></pre></td></tr></table></figure><h3 id="进入conf目录"><a href="#进入conf目录" class="headerlink" title="进入conf目录"></a>进入conf目录</h3><p>zabbix_agentd.conf，是zabbix-agent的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node sbin]<span class="comment"># cd ../conf/ &amp;&amp; ls</span></span><br><span class="line">zabbix_agentd  zabbix_agentd.conf</span><br><span class="line">[root@master-node conf]<span class="comment"># cp /opt/zabbix/conf/zabbix_agentd.conf  /usr/local/etc/</span></span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node conf]<span class="comment"># vi /usr/local/etc/zabbix_agentd.conf</span></span><br><span class="line">LogFile=/var/log/zabbix/zabbix_agentd.log</span><br><span class="line">Server=10.11.7.60<span class="comment">#被动模式，指定zabbix-server服务端的ip地址，多个ip的话使用逗号分隔</span></span><br><span class="line"><span class="comment"># ServerActive=10.11.7.60#主动模式，指定zabbix-server的ip地址，使用逗号分隔多IP，如果注释这个选项，那么当前服务器的主动监控就被禁用了</span></span><br><span class="line">Hostname=10.11.7.232      <span class="comment">#当使用主动模式时,这个名称的设置必须与zabbix-web监控页面创建的主机名称保持一致</span></span><br></pre></td></tr></table></figure><h3 id="创建日志文件"><a href="#创建日志文件" class="headerlink" title="创建日志文件"></a>创建日志文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node conf]<span class="comment"># mkdir /var/log/zabbix/</span></span><br><span class="line">[root@master-node conf]<span class="comment"># chown zabbix:zabbix /var/log/zabbix/</span></span><br><span class="line">[root@master-node conf]<span class="comment"># chmod 777 /var/log/zabbix/</span></span><br><span class="line">[root@master-node conf]<span class="comment"># touch  /var/log/zabbix/zabbix_agentd.log</span></span><br><span class="line">[root@master-node conf]<span class="comment"># chmod 777 /var/log/zabbix/zabbix_agentd.log</span></span><br></pre></td></tr></table></figure><h3 id="添加监控端口"><a href="#添加监控端口" class="headerlink" title="添加监控端口"></a>添加监控端口</h3><p>如果存在，则无需处理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node conf]<span class="comment"># vi /etc/services</span></span><br><span class="line">zabbix-agent 10050/tcp</span><br><span class="line">zabbix-agent 10050/udp</span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># cp /opt/zabbix/sbin/zabbix_agentd /etc/init.d/</span></span><br><span class="line"><span class="comment"># 启动服务 </span></span><br><span class="line">[root@master-node ~]<span class="comment"># /etc/init.d/zabbix_agentd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务可能没有启动起来  没有权限 建立zabbix_agentd.pid并赋予权限</span></span><br><span class="line">[root@master-node ~]<span class="comment"># ps -ef | grep zabbix  </span></span><br><span class="line">[root@localhost sbin]<span class="comment"># touch  /tmp/zabbix_agentd.pid</span></span><br><span class="line">[root@localhost sbin]<span class="comment"># chmod 777 /tmp/zabbix_agentd.pid</span></span><br><span class="line">[root@master-node ~]<span class="comment"># /etc/init.d/zabbix_agentd     # 已正常启动</span></span><br></pre></td></tr></table></figure><h1 id="添加zabbix监控"><a href="#添加zabbix监控" class="headerlink" title="添加zabbix监控"></a>添加zabbix监控</h1><h2 id="window添加监控"><a href="#window添加监控" class="headerlink" title="window添加监控"></a>window添加监控</h2><p>客户机：10.128.2.200<br>zabbix服务器端，点击左侧边栏，配置—-主机—-右上角的创建主机；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">主机名称：10.128.2.200 写IP地址，便于分辨，此处填写内容与下文中158行内容需保持一致</span><br><span class="line">可见的名称：10.128.2.200  可写可不写</span><br><span class="line">群组：Templates/Operating systems;</span><br><span class="line">interfaces：类型客户端，IP 10.128.2.200，端口10050；</span><br><span class="line">描述：可加可不加</span><br><span class="line">其他不动</span><br><span class="line"></span><br><span class="line">模板：Template OS Windows by Zabbix agent</span><br><span class="line">其他的不动</span><br></pre></td></tr></table></figure><p>主机：<br><img src="https://qiufuqi.github.io/img/hexo/20230614152432.png"><br>模板：<br><img src="https://qiufuqi.github.io/img/hexo/20230614152444.png"><br>创建完成后可看见ZBX绿色图标<br><img src="https://qiufuqi.github.io/img/hexo/20221108142656.png"></p><h2 id="linux添加监控"><a href="#linux添加监控" class="headerlink" title="linux添加监控"></a>linux添加监控</h2><p>客户机：10.11.7.232<br>zabbix服务器端，点击左侧边栏，配置—-主机—-右上角的创建主机；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">主机名称：10.11.7.232 写IP地址，便于分辨，此处填写内容与下文中158行内容需保持一致</span><br><span class="line">可见的名称：10.11.7.232  可写可不写</span><br><span class="line">群组：Templates/Operating systems;</span><br><span class="line">interfaces：类型客户端，IP 10.11.7.232，端口10050；</span><br><span class="line">描述：可加可不加</span><br><span class="line">其他不动</span><br><span class="line"></span><br><span class="line">模板：Template OS Linux by Zabbix agent</span><br><span class="line">其他的不动</span><br></pre></td></tr></table></figure><p>主机：<br><img src="https://qiufuqi.github.io/img/hexo/20230614152432.png"><br>模板：<br><img src="https://qiufuqi.github.io/img/hexo/20230614152444.png"><br>创建完成后可看见ZBX绿色图标<br><img src="https://qiufuqi.github.io/img/hexo/20221115171250.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
          <category> Agent </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
            <tag> Agent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix-(zabbix-agent)主动和被动模式</title>
      <link href="/zabbix_agent_model/"/>
      <url>/zabbix_agent_model/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_38623994/article/details/100675280">https://blog.csdn.net/weixin_38623994/article/details/100675280</a><br>Zabbix监控系统系列之十四：Oracle监控</p><p>Zabbix监控系统系列<br><a href="https://blog.csdn.net/weixin_38623994/category_9219081.html">https://blog.csdn.net/weixin_38623994/category_9219081.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
            <tag> agent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx反向代理</title>
      <link href="/nginx_daili/"/>
      <url>/nginx_daili/</url>
      
        <content type="html"><![CDATA[<p>Nginx反向代理<br><a href="/nginx_install">Nginx 1.20.2 安装</a></p><h1 id="代理Mysql"><a href="#代理Mysql" class="headerlink" title="代理Mysql"></a>代理Mysql</h1><p><strong>stream和http是同级别的，不要放入http里面；不支持不同域名转发不同Mysql的功能。</strong><br>nginx.conf添加如下配置:外网13306端口映射到内网IP:3306端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多个映射 只需要变更端口</span></span><br><span class="line">stream &#123;</span><br><span class="line">    upstream mysql_3306 &#123;</span><br><span class="line">        <span class="built_in">hash</span> <span class="variable">$remote_addr</span> consistent;</span><br><span class="line">        server IP:3306 weight=5 max_fails=3 fail_timeout=30s;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 13306; <span class="comment"># 相当于用nginx所在服务器的13306端口，代替了 upstream mysql_up 那里配置的ip与3306端口，当然也可以是同一台机器中的内部转发</span></span><br><span class="line">        proxy_connect_timeout 10s;</span><br><span class="line">        proxy_timeout 30000s; <span class="comment">#设置客户端和代理服务之间的超时时间，如果5分钟内没操作将自动断开。</span></span><br><span class="line">        proxy_pass mysql_3306;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 多个端口映射时</span></span><br><span class="line">    upstream mysql_3307 &#123;</span><br><span class="line">        <span class="built_in">hash</span> <span class="variable">$remote_addr</span> consistent;</span><br><span class="line">        server IP:3306 weight=5 max_fails=3 fail_timeout=30s;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 13307; <span class="comment"># 相当于用nginx所在服务器的13306端口，代替了 upstream mysql_up 那里配置的ip与3306端口，当然也可以是同一台机器中的内部转发</span></span><br><span class="line">        proxy_connect_timeout 10s;</span><br><span class="line">        proxy_timeout 30000s; <span class="comment">#设置客户端和代理服务之间的超时时间，如果5分钟内没操作将自动断开。</span></span><br><span class="line">        proxy_pass mysql_3307;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 或者</span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 10036;</span><br><span class="line">        proxy_connect_timeout 5s;</span><br><span class="line">        proxy_timeout 300s;</span><br><span class="line">        proxy_pass 10.11.7.87:3306 ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代理NTP"><a href="#代理NTP" class="headerlink" title="代理NTP"></a>代理NTP</h1><p>ntp时间同步服务使用端口123，协议UDP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多个映射 只需要变更端口</span></span><br><span class="line">stream &#123;</span><br><span class="line">    upstream ntp_123 &#123;</span><br><span class="line">        server 10.11.7.22:123;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 123 udp; <span class="comment">#由于ntp使用udp协议，这里采用udp协议</span></span><br><span class="line">        proxy_pass ntp_123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx安装部署</title>
      <link href="/nginx_install/"/>
      <url>/nginx_install/</url>
      
        <content type="html"><![CDATA[<p>Linux环境中安装nginx（1.20.2），系统版本centos7.6<br>Nginx 1.20.2 安装<br>安装方式如下：</p><ul><li>YUM安装 – 推荐使用yum安装</li><li>编译安装</li><li><a href="/docker_nginx">docker安装</a></li><li>脚本安装</li></ul><h1 id="YUM安装"><a href="#YUM安装" class="headerlink" title="YUM安装"></a>YUM安装</h1><p>yum安装：官方源安装，epol安装 二选一</p><h2 id="添加YUM源"><a href="#添加YUM源" class="headerlink" title="添加YUM源"></a>添加YUM源</h2><p>官方源安装<br>链接: <a href="http://nginx.org/en/linux_packages.html#RHEL-CentOS">http://nginx.org/en/linux_packages.html#RHEL-CentOS</a> 可以对照自己的系统进行添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># vi /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>epol安装 (不建议,只能默认版本)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span></span><br></pre></td></tr></table></figure><h2 id="加载yum包"><a href="#加载yum包" class="headerlink" title="加载yum包"></a>加载yum包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># yum clean all</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Cleaning repos: base extras nginx-stable updates</span><br><span class="line">Cleaning up list of fastest mirrors</span><br><span class="line">Other repos take up 609 k of disk space (use --verbose <span class="keyword">for</span> details)</span><br><span class="line">[root@master-node ~]<span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure><h2 id="安装指定版本"><a href="#安装指定版本" class="headerlink" title="安装指定版本"></a>安装指定版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># yum list nginx --showduplicates</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.nju.edu.cn</span><br><span class="line"> * extras: mirrors.nju.edu.cn</span><br><span class="line"> * updates: mirrors.nju.edu.cn</span><br><span class="line">Available Packages</span><br><span class="line">nginx.x86_64           1:1.8.0-1.el7.ngx              nginx-stable</span><br><span class="line">·········</span><br><span class="line">nginx.x86_64           1:1.20.1-1.el7.ngx             nginx-stable</span><br><span class="line">nginx.x86_64           1:1.20.2-1.el7.ngx             nginx-stable</span><br><span class="line">nginx.x86_64           1:1.22.0-1.el7.ngx             nginx-stable</span><br><span class="line"></span><br><span class="line">[root@master-node ~]<span class="comment"># yum -y install nginx-1.20.2-1.el7.ngx</span></span><br></pre></td></tr></table></figure><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># nginx -v</span></span><br><span class="line">nginx version: nginx/1.20.2</span><br><span class="line">[root@master-node ~]<span class="comment"># rpm -qi nginx</span></span><br><span class="line">Name        : nginx</span><br><span class="line">Epoch       : 1</span><br><span class="line">Version     : 1.20.2</span><br><span class="line">·········</span><br><span class="line">nginx [engine x] is an HTTP and reverse proxy server, as well as</span><br><span class="line">a mail proxy server.</span><br></pre></td></tr></table></figure><h2 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h2><p>启动nginx 和 开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@master-node ~]<span class="comment"># systemctl enable nginx</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.</span><br></pre></td></tr></table></figure><h2 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># rpm -qc nginx</span></span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/etc/nginx/conf.d/default.conf</span><br><span class="line">/etc/nginx/fastcgi_params</span><br><span class="line">/etc/nginx/mime.types</span><br><span class="line">/etc/nginx/nginx.conf</span><br><span class="line">/etc/nginx/scgi_params</span><br><span class="line">/etc/nginx/uwsgi_params</span><br></pre></td></tr></table></figure><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测nginx配置是否正确</span></span><br><span class="line">[root@master-node ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看nginx进程 并实现不中断服务加载配置</span></span><br><span class="line">[root@master-node ~]<span class="comment"># ps -ef|grep nginx</span></span><br><span class="line">root     12483     1  0 15:52 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class="line">nginx    12484 12483  0 15:52 ?        00:00:00 nginx: worker process</span><br><span class="line">nginx    12485 12483  0 15:52 ?        00:00:00 nginx: worker process</span><br><span class="line">nginx    12486 12483  0 15:52 ?        00:00:00 nginx: worker process</span><br><span class="line">nginx    12487 12483  0 15:52 ?        00:00:00 nginx: worker process</span><br><span class="line">root     12553 12296  0 15:56 pts/0    00:00:00 grep --color=auto nginx</span><br><span class="line">[root@master-node ~]<span class="comment"># kill -HUP 12483   </span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># rpm -Uvh http://nginx.org/packages/centos/7/x86_64/RPMS/nginx-1.18.0-1.el7.ngx.x86_64.rpm // rpm方式升级并安装某个版本的Nginx</span></span><br></pre></td></tr></table></figure><h1 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h1><p>编译安装优势</p><ul><li>能够实现定制功能，需要什么功能就可以使用参数加上</li><li>可以指定安装的路径</li></ul><h2 id="获取安装包"><a href="#获取安装包" class="headerlink" title="获取安装包"></a>获取安装包</h2><p>下载<a href="http://nginx.org/download/">安装包</a>并解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-node opt]<span class="comment"># wget http://nginx.org/download/nginx-1.20.2.tar.gz</span></span><br><span class="line">[root@slave-node opt]<span class="comment"># tar -zxvf nginx-1.20.2.tar.gz</span></span><br></pre></td></tr></table></figure><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-node opt]<span class="comment"># yum -y install pcre-devel zlib-devel gcc gcc-c++ make</span></span><br></pre></td></tr></table></figure><h2 id="创建用户、组"><a href="#创建用户、组" class="headerlink" title="创建用户、组"></a>创建用户、组</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-node opt]<span class="comment"># useradd -M -s /sbin/nologin nginx</span></span><br></pre></td></tr></table></figure><h2 id="编译安装-1"><a href="#编译安装-1" class="headerlink" title="编译安装"></a>编译安装</h2><p>安装路径/etc/nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-node nginx-1.20.2]<span class="comment"># cd /opt/nginx-1.20.2</span></span><br><span class="line">[root@slave-node nginx-1.20.2]<span class="comment"># ./configure --help</span></span><br><span class="line">--with-http_ssl_module <span class="comment"># 配置HTTPS时使用</span></span><br><span class="line">--with-http_v2_module <span class="comment"># 配置GOLANG语言时使用</span></span><br><span class="line">--with-stream <span class="comment"># 启用TCP/UDP代理服务</span></span><br><span class="line"></span><br><span class="line">[root@slave-node nginx-1.20.2]<span class="comment"># ./configure --prefix=/etc/nginx --user=nginx --group=nginx --with-http_stub_status_module</span></span><br><span class="line"></span><br><span class="line">./configure \</span><br><span class="line">--prefix=/etc/nginx \<span class="comment">#指定nginx的安装路径</span></span><br><span class="line">--user=nginx \<span class="comment">#指定用户名</span></span><br><span class="line">--group=nginx \<span class="comment">#指定组名</span></span><br><span class="line">--with-http_stub_status_module<span class="comment">#启用 http_stub_status_module 模块以支持状态统计</span></span><br><span class="line"></span><br><span class="line">[root@slave-node nginx-1.20.2]<span class="comment"># make &amp;&amp; make install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#让系统识别nginx的操作命令</span></span><br><span class="line">[root@slave-node nginx-1.20.2]<span class="comment"># ln -s /etc/nginx/sbin/nginx /usr/local/sbin/</span></span><br></pre></td></tr></table></figure><h2 id="添加系统服务"><a href="#添加系统服务" class="headerlink" title="添加系统服务"></a>添加系统服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-node nginx]<span class="comment"># vi /lib/systemd/system/nginx.service</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/etc/nginx/logs/nginx.pid</span><br><span class="line">ExecStart=/etc/nginx/sbin/nginx</span><br><span class="line">ExecrReload=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">ExecrStop=/bin/kill -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#赋权，除了root以外的用户都不能修改</span></span><br><span class="line">[root@slave-node nginx]<span class="comment"># chmod 754 /lib/systemd/system/nginx.service</span></span><br></pre></td></tr></table></figure><h2 id="启动nginx-1"><a href="#启动nginx-1" class="headerlink" title="启动nginx"></a>启动nginx</h2><p>启动nginx 和 开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@master-node ~]<span class="comment"># systemctl enable nginx</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.</span><br></pre></td></tr></table></figure><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><ul><li>./configure: error: the HTTP rewrite module requires the PCRE library.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install pcre pcre-devel -y</span><br></pre></td></tr></table></figure></li><li>./configure: error: SSL modules require the OpenSSL library.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssl openssl-devel -y </span><br></pre></td></tr></table></figure><h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1>docker安装nginx参考：<a href="/docker_nginx">安装参考</a><h1 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h1>Nginx的全自动编译安装，安装完成后自动启动并设置开机自启。脚本支持CentOS系列发行版本，shell脚本源码如下：安装版本1.23<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">ck_ok</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span> [ $? -ne 0 ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> error.&quot;</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">download_ng</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cd</span>  /usr/local/src</span><br><span class="line">    <span class="keyword">if</span> [ -f nginx-1.23.0.tar.gz ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;当前目录已经存在nginx-1.23.0.tar.gz&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;检测md5&quot;</span></span><br><span class="line">        ng_md5=`<span class="built_in">md5sum</span> nginx-1.23.0.tar.gz|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$&#123;ng_md5&#125;</span> == <span class="string">&#x27;e8768e388f26fb3d56a3c88055345219&#x27;</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sudo /bin/mv nginx-1.23.0.tar.gz nginx-1.23.0.tar.gz.old</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    sudo curl -O http://nginx.org/download/nginx-1.23.0.tar.gz</span><br><span class="line">    ck_ok <span class="string">&quot;下载Nginx&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">install_ng</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cd</span> /usr/local/src</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;解压Nginx&quot;</span></span><br><span class="line">    sudo tar zxf nginx-1.23.0.tar.gz</span><br><span class="line">    ck_ok <span class="string">&quot;解压Nginx&quot;</span></span><br><span class="line">    <span class="built_in">cd</span> nginx-1.23.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;安装依赖&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">which</span> yum &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="comment">## RHEL/Rocky</span></span><br><span class="line">        <span class="keyword">for</span> pkg <span class="keyword">in</span> gcc make pcre-devel zlib-devel openssl-devel</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> ! rpm -q <span class="variable">$pkg</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">            <span class="keyword">then</span></span><br><span class="line">                sudo yum install -y <span class="variable">$pkg</span></span><br><span class="line">                ck_ok <span class="string">&quot;yum 安装<span class="variable">$pkg</span>&quot;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pkg</span>已经安装&quot;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">which</span> apt &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="comment">##ubuntu</span></span><br><span class="line">        <span class="keyword">for</span> pkg <span class="keyword">in</span> make libpcre++-dev  libssl-dev  zlib1g-dev</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> ! dpkg -l <span class="variable">$pkg</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">            <span class="keyword">then</span></span><br><span class="line">                sudo apt install -y <span class="variable">$pkg</span></span><br><span class="line">                ck_ok <span class="string">&quot;apt 安装<span class="variable">$pkg</span>&quot;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pkg</span>已经安装&quot;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;configure Nginx&quot;</span></span><br><span class="line">    sudo ./configure --prefix=/usr/local/nginx  --with-http_ssl_module</span><br><span class="line">    ck_ok <span class="string">&quot;Configure Nginx&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;编译和安装&quot;</span></span><br><span class="line">    sudo make &amp;&amp; sudo make install</span><br><span class="line">    ck_ok <span class="string">&quot;编译和安装&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;编辑systemd服务管理脚本&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cat</span> &gt; /tmp/nginx.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=nginx - high performance web server</span></span><br><span class="line"><span class="string">Documentation=http://nginx.org/en/docs/</span></span><br><span class="line"><span class="string">After=network-online.target remote-fs.target nss-lookup.target</span></span><br><span class="line"><span class="string">Wants=network-online.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=forking</span></span><br><span class="line"><span class="string">PIDFile=/usr/local/nginx/logs/nginx.pid</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="string">ExecReload=/bin/sh -c &quot;/bin/kill -s HUP \$(/bin/cat /usr/local/nginx/logs/nginx.pid)&quot;</span></span><br><span class="line"><span class="string">ExecStop=/bin/sh -c &quot;/bin/kill -s TERM \$(/bin/cat /usr/local/nginx/logs/nginx.pid)&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">    sudo /bin/mv /tmp/nginx.service /lib/systemd/system/nginx.service</span><br><span class="line">    ck_ok <span class="string">&quot;编辑nginx.service&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;加载服务&quot;</span></span><br><span class="line">    sudo systemctl unmask nginx.service</span><br><span class="line">    sudo  systemctl daemon-reload</span><br><span class="line">    sudo systemctl <span class="built_in">enable</span> nginx</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;启动Nginx&quot;</span></span><br><span class="line">    sudo systemctl start nginx</span><br><span class="line">    ck_ok <span class="string">&quot;启动Nginx&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">download_ng</span><br><span class="line">install_ng</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keepalived安装部署</title>
      <link href="/keepalive_install/"/>
      <url>/keepalive_install/</url>
      
        <content type="html"><![CDATA[<p><strong>Keepalived安装部署</strong><br>Keepalived 2.2.7 安装<br>安装方式如下：</p><ul><li>YUM安装</li><li>编译安装</li><li>docker安装</li></ul><h1 id="YUM安装"><a href="#YUM安装" class="headerlink" title="YUM安装"></a>YUM安装</h1><p>yum安装keepalived版本不好控制</p><h2 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># yum -y install keepalived</span></span><br></pre></td></tr></table></figure><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># rpm -qa|grep keepalived</span></span><br><span class="line">keepalived-1.3.5-19.el7.x86_64</span><br></pre></td></tr></table></figure><p>查看安装后目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># rpm -qc keepalived</span></span><br><span class="line">/etc/keepalived/keepalived.conf</span><br><span class="line">/etc/sysconfig/keepalived</span><br></pre></td></tr></table></figure><h1 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h1><h2 id="获取安装包"><a href="#获取安装包" class="headerlink" title="获取安装包"></a>获取安装包</h2><p>下载<a href="https://www.keepalived.org/download.html">安装包</a>并解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node opt]<span class="comment"># cd /opt</span></span><br><span class="line">[root@master-node opt]<span class="comment"># wget https://www.keepalived.org/software/keepalived-2.2.7.tar.gz --no-check-certificate</span></span><br><span class="line">[root@master-node opt]<span class="comment"># tar -zxvf keepalived-2.2.7.tar.gz</span></span><br></pre></td></tr></table></figure><h2 id="编译安装-1"><a href="#编译安装-1" class="headerlink" title="编译安装"></a>编译安装</h2><p>安装在/etc/keepalived目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># yum install -y make gcc gcc-c++ openssl openssl-devel</span></span><br><span class="line">[root@master-node ~]<span class="comment"># cd /opt/keepalived-2.2.7</span></span><br><span class="line">[root@master-node keepalived-2.2.7]<span class="comment"># ./configure --prefix=/etc/keepalived --sysconf=/etc</span></span><br><span class="line">[root@master-node keepalived-2.2.7]<span class="comment"># make &amp;&amp; make install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#让系统识别nginx的操作命令</span></span><br><span class="line">[root@slave-node nginx-1.20.2]<span class="comment"># ls -s /etc/keepalived/sbin/keepalived /usr/local/sbin/</span></span><br></pre></td></tr></table></figure><h2 id="添加系统服务"><a href="#添加系统服务" class="headerlink" title="添加系统服务"></a>添加系统服务</h2><p>如果已存在则不需要更改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node keepalived]<span class="comment"># vi /lib/systemd/system/keepalived.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=LVS and VRRP High Availability Monitor</span><br><span class="line">After=network-online.target syslog.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Documentation=man:keepalived(8)</span><br><span class="line">Documentation=man:keepalived.conf(5)</span><br><span class="line">Documentation=man:genhash(1)</span><br><span class="line">Documentation=https://keepalived.org</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/keepalived.pid</span><br><span class="line">KillMode=process</span><br><span class="line">EnvironmentFile=-/etc/sysconfig/keepalived</span><br><span class="line">ExecStart=/etc/keepalived/sbin/keepalived  <span class="variable">$KEEPALIVED_OPTIONS</span></span><br><span class="line">ExecReload=/bin/kill -HUP <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="启动keepalived"><a href="#启动keepalived" class="headerlink" title="启动keepalived"></a>启动keepalived</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># systemctl start keepalived</span></span><br><span class="line">[root@master-node ~]<span class="comment"># systemctl enable keepalived</span></span><br><span class="line">[root@master-node sbin]<span class="comment"># ps -ef|grep keepalived</span></span><br><span class="line">root     15388  9182  0 16:02 pts/0    00:00:00 grep --color=auto keepalived</span><br></pre></td></tr></table></figure><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><ul><li>systemctl start keepalived启动异常<br>Failed to start LVS and VRRP High Availability Monitor.<br>缺失配置文件,创建该文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># cd /etc/keepalived/</span></span><br><span class="line">[root@master-node keepalived]<span class="comment"># &gt; keepalived.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新启动</span></span><br><span class="line">[root@master-node keepalived]<span class="comment"># systemctl start keepalived</span></span><br><span class="line">[root@master-node sbin]<span class="comment"># cd /etc/keepalived/sbin/ &amp;&amp; ./keepalived</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Nginx </category>
          
          <category> keepalived </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> keepalive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx双机热备-主从模式</title>
      <link href="/nginx_zhucong/"/>
      <url>/nginx_zhucong/</url>
      
        <content type="html"><![CDATA[<p>Nginx负载均衡技术对于一个网站尤其是大型网站的web服务器集群来说是至关重要的！做好负载均衡架构，可以实现故障转移和高可用环境，避免单点故障，保证网站健康持续运行。<a href="https://www.cnblogs.com/kevingrace/p/6138185.html">技术参考</a><br>双机高可用一般是通过虚拟IP（飘移IP）方法来实现的，基于Linux/Unix的IP别名技术。<br>双机高可用方法目前分为两种：</p><ul><li>双机主从模式：即前端使用两台服务器，一台主服务器和一台热备服务器，正常情况下，主服务器绑定一个公网虚拟IP，提供负载均衡服务，热备服务器处于空闲状态；当主服务器发生故障时，热备服务器接管主服务器的公网虚拟IP，提供负载均衡服务；<strong>但是热备服务器在主机器不出现故障的时候，永远处于浪费状态，对于服务器不多的网站，该方案不经济实惠。</strong></li><li>双机主主模式：即前端使用两台负载均衡服务器，互为主备，且都处于活动状态，同时各自绑定一个公网虚拟IP，提供负载均衡服务；当其中一台发生故障时，另一台接管发生故障服务器的公网虚拟IP（这时由非故障机器一台负担所有的请求）。这种方案，经济实惠，非常适合于当前架构环境。<a href="/nginx_zhuzhu">配置参考</a></li></ul><p>keepalived可以认为是VRRP协议在Linux上的实现，主要有三个模块，分别是core、check和vrrp。<br>core模块为keepalived的核心，负责主进程的启动、维护以及全局配置文件的加载和解析。<br>check负责健康检查，包括常见的各种检查方式。<br>vrrp模块是来实现VRRP协议的。<br><img src="https://qiufuqi.github.io/img/hexo/20221022154433.png"></p><p>keepalived核心概念</p><ul><li>通过选举投票，决定谁是主节点谁是备节点（选举）</li><li>如果Master故障，Backup自动接管，那么Master恢复后会夺权吗（抢占试、非抢占式）</li><li>两台服务器都认为自己是master，那么会出现一个故障（脑裂）</li></ul><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>操作系统：centos7.6<br>master机器(master-node)：10.11.7.231<br>slave机器(slave-node)：10.11.7.232<br>虚拟IP（VIP）：10.11.7.235      负载均衡器上配置的域名都解析到这个VIP上<br>设置主机名， 关闭SElinux，关闭防火墙（暂时关闭）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># hostnamectl set-hostname master-node</span></span><br><span class="line">[root@master-node ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@master-node ~]<span class="comment"># vi /etc/sysconfig/selinux</span></span><br><span class="line">SELINUX=disabled</span><br><span class="line">[root@master-node ~]<span class="comment"># systemctl stop firewalld</span></span><br><span class="line">[root@master-node ~]<span class="comment"># systemctl disable firewalld</span></span><br></pre></td></tr></table></figure><p>配置防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启用ip转发</span></span><br><span class="line">[root@master-node ~]<span class="comment"># echo &quot;net.ipv4.ip_forward = 1&quot; &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line">[root@master-node ~]<span class="comment"># sysctl -p</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 防火墙添加规则 Keepalived使用vrrp组播，默认地址是224.0.0.18，因此要配置防火墙放过。  --in-interface eth0</span></span><br><span class="line">firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</span><br><span class="line">firewall-cmd --direct --permanent --add-rule ipv4 filter OUTPUT 0 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>部署 <a href="/nginx_install">nginx-1.20.2</a> 和 <a href="/keepalive_install">keepalive-2.2.7</a>服务 （master-node和slave-node两台服务器上的安装操作完全一样）<br>可选择编译安装或者yum安装，注意版本号;</p><h2 id="监听存活脚本"><a href="#监听存活脚本" class="headerlink" title="监听存活脚本"></a>监听存活脚本</h2><p>此脚本必须在keepalived服务运行的前提下才有效！如果在keepalived服务先关闭的情况下，那么nginx服务关闭后就不能实现自启动了。<br>该脚本检测ngnix的运行状态，并在nginx进程不存在时尝试重新启动ngnix，如果启动失败则停止keepalived，准备让其它机器接管。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node keepalived]<span class="comment"># vi /etc/keepalived/check_nginx.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#keepalived 监控端口脚本</span></span><br><span class="line"><span class="comment">#使用方法：</span></span><br><span class="line"><span class="comment">#在keepalived的配置文件中</span></span><br><span class="line"><span class="comment">#vrrp_script check_port &#123;#创建一个vrrp_script脚本,检查配置</span></span><br><span class="line"><span class="comment">#    script &quot;/etc/keepalived/check_port.sh 80&quot; #配置监听的端口</span></span><br><span class="line"><span class="comment">#    interval 2 #检查脚本的频率,单位（秒）</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line">counter=$(ps -C nginx --no-heading|<span class="built_in">wc</span> -l)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;counter&#125;</span>&quot;</span> = <span class="string">&quot;0&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    systemctl restart nginx</span><br><span class="line">    <span class="built_in">sleep</span> 2</span><br><span class="line">    counter=$(ps -C nginx --no-heading|<span class="built_in">wc</span> -l)</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;counter&#125;</span>&quot;</span> = <span class="string">&quot;0&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        systemctl stop keepalived</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">[root@master-node keepalived]<span class="comment"># chmod  +x /etc/keepalived/check_nginx.sh</span></span><br></pre></td></tr></table></figure><h2 id="keepalived配置"><a href="#keepalived配置" class="headerlink" title="keepalived配置"></a>keepalived配置</h2><p>keepalived 配置参考</p><ul><li><p>两节点的上联交换机允许组播，采用组播模式（默认）<br>组播可能导致地址冲突问题，当在同一个局域网内部署了多组keepalived服务器时，可能会发生高可用接管的严重故障问题。 因为keepalived高可用功能是通过VRRP协议实现的，VRRP协议默认通过IP多播的形式实现高可用对之间的通信，如果同一个局域网内存在多组Keepalived服务器对，就会造成IP多播地址冲突问题，导致接管错乱. 不同组的keepalived都会使用默认的224.0.0.18作为多播地址。此时的解决办法是，在同组的keepalived服务器所有的配置文件里指定独一无二的多播地址，配置如下：<br>mcast_src_ip    发送多播包的地址，如果不设置默认使用绑定网卡的primary ip</p></li><li><p>两节点的上联交换机禁用了组播，则只能采用vrrp单播通告的方式，配置如下：<br>unicast_src_ip  xx.xx.xx.xx     本机<br>unicast_peer {<br>  xx.xx.xx.xx                 其他<br>}<br>配置参考示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># vi /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived     <span class="comment">#全局定义</span></span><br><span class="line">  </span><br><span class="line">global_defs &#123;</span><br><span class="line">  notification_email &#123;     <span class="comment">#指定keepalived在发生事件时(比如切换)发送通知邮件的邮箱</span></span><br><span class="line">  ops@wangshibo.cn   <span class="comment">#设置报警邮件地址，可以设置多个，每行一个。 需开启本机的sendmail服务</span></span><br><span class="line">  tech@wangshibo.cn</span><br><span class="line">  &#125;</span><br><span class="line">  notification_email_from ops@wangshibo.cn   <span class="comment">#keepalived在发生诸如切换操作时需要发送email通知地址</span></span><br><span class="line">  smtp_server 127.0.0.1      <span class="comment">#指定发送email的smtp服务器</span></span><br><span class="line">  smtp_connect_timeout 30    <span class="comment">#设置连接smtp server的超时时间</span></span><br><span class="line">  router_id master-node     <span class="comment">#运行keepalived的机器的一个标识，通常可设为hostname。故障发生时，发邮件时显示在邮件主题中的信息。</span></span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_http_port &#123;      <span class="comment">#检测nginx服务是否在运行。有很多方式，比如进程，用脚本检测等等</span></span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_nginx.sh&quot;</span>   <span class="comment">#这里通过脚本监测</span></span><br><span class="line">    interval 2                   <span class="comment">#脚本执行间隔，每2s检测一次</span></span><br><span class="line">    weight -5                    <span class="comment">#脚本结果导致的优先级变更，检测失败（脚本返回非0）则优先级 -5</span></span><br><span class="line">    fall 2                    <span class="comment">#检测连续2次失败才算确定是真失败。会用weight减少优先级（1-255之间）</span></span><br><span class="line">    rise 1                    <span class="comment">#检测1次成功就算成功。但不修改优先级</span></span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;    <span class="comment">#keepalived在同一virtual_router_id中priority（0-255）最大的会成为master，也就是接管VIP，当priority最大的主机发生故障后次priority将会接管</span></span><br><span class="line">    state MASTER    <span class="comment">#指定keepalived的角色，MASTER表示此主机是主服务器，BACKUP表示此主机是备用服务器。注意这里的state指定instance(Initial)的初始状态，就是说在配置好后，这台服务器的初始状态就是这里指定的，但这里指定的不算，还是得要通过竞选通过优先级来确定。如果这里设置为MASTER，但如若他的优先级不及另外一台，那么这台在发送通告时，会发送自己的优先级，另外一台发现优先级不如自己的高，那么他会就回抢占为MASTER</span></span><br><span class="line">    interface em1          <span class="comment">#指定HA监测网络的接口。实例绑定的网卡，因为在配置虚拟IP的时候必须是在已有的网卡上添加的</span></span><br><span class="line">    mcast_src_ip 103.110.98.14  <span class="comment"># 发送多播数据包时的源IP地址，这里注意了，这里实际上就是在哪个地址上发送VRRP通告，这个非常重要，一定要选择稳定的网卡端口来发送，这里相当于heartbeat的心跳端口，如果没有设置那么就用默认的绑定的网卡的IP，也就是interface指定的IP地址</span></span><br><span class="line">    virtual_router_id 51         <span class="comment">#虚拟路由标识，这个标识是一个数字，同一个vrrp实例使用唯一的标识。即同一vrrp_instance下，MASTER和BACKUP必须是一致的</span></span><br><span class="line">    priority 101                 <span class="comment">#定义优先级，数字越大，优先级越高，在同一个vrrp_instance下，MASTER的优先级必须大于BACKUP的优先级</span></span><br><span class="line">    advert_int 1                 <span class="comment">#设定MASTER与BACKUP负载均衡器之间同步检查的时间间隔，单位是秒</span></span><br><span class="line">    nopreempt                    <span class="comment"># 非抢占模式   默认：抢占模式 </span></span><br><span class="line">    authentication &#123;             <span class="comment">#设置验证类型和密码。主从必须一样</span></span><br><span class="line">        auth_type PASS           <span class="comment">#设置vrrp验证类型，主要有PASS和AH两种</span></span><br><span class="line">        auth_pass 1111           <span class="comment">#设置vrrp验证密码，在同一个vrrp_instance下，MASTER与BACKUP必须使用相同的密码才能正常通信</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;          <span class="comment">#VRRP HA 虚拟地址 如果有多个VIP，继续换行填写</span></span><br><span class="line">        103.110.98.20</span><br><span class="line">    &#125;</span><br><span class="line">  track_script &#123;                      <span class="comment">#执行监控的服务。注意这个设置不能紧挨着写在vrrp_script配置块的后面（实验中碰过的坑），否则nginx监控失效！！</span></span><br><span class="line">    chk_http_port                    <span class="comment">#引用VRRP脚本，即在 vrrp_script 部分指定的名字。定期运行它们来改变优先级，并最终引发主备切换。</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>master-node节点的keepalived配置,并重启keepalived服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># vi /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id master-node</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_http_port &#123;</span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_nginx.sh&quot;</span></span><br><span class="line">    interval 2</span><br><span class="line">    weight -5</span><br><span class="line">    fall 2</span><br><span class="line">    rise 1 </span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens192</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1    </span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_http_port</span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.11.7.231</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">      10.11.7.232</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.11.7.235/24</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@master-node ~]<span class="comment"># systemctl restart keepalived</span></span><br></pre></td></tr></table></figure><p><strong>slave-node节点的keepalived配置，并重启keepalived服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-node ~]<span class="comment"># vi /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived    </span><br><span class="line">global_defs &#123;              </span><br><span class="line">  router_id slave-node                    </span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_http_port &#123;         </span><br><span class="line">    script <span class="string">&quot;/etc/keepalived/check_nginx.sh&quot;</span>   </span><br><span class="line">    interval 2                      </span><br><span class="line">    weight -5                       </span><br><span class="line">    fall 2                   </span><br><span class="line">    rise 1                  </span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;            </span><br><span class="line">    state BACKUP           </span><br><span class="line">    interface ens192            </span><br><span class="line">    virtual_router_id 51        </span><br><span class="line">    priority 99               </span><br><span class="line">    advert_int 1       </span><br><span class="line">    authentication &#123;            </span><br><span class="line">        auth_type PASS         </span><br><span class="line">        auth_pass 1111          </span><br><span class="line">    &#125;</span><br><span class="line">    unicast_src_ip 10.11.7.232</span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">      10.11.7.231</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;        </span><br><span class="line">        10.11.7.235/24</span><br><span class="line">    &#125;</span><br><span class="line">  track_script &#123;                     </span><br><span class="line">    chk_http_port                 </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@slave-node ~]<span class="comment"># systemctl restart keepalived</span></span><br></pre></td></tr></table></figure><h2 id="VIP漂移验证"><a href="#VIP漂移验证" class="headerlink" title="VIP漂移验证"></a>VIP漂移验证</h2><p>keepalived只检测本机和他机keepalived是否正常并实现VIP的漂移，而如果本机nginx出现故障不会则不会漂移VIP。<br><strong>keepalived默认就是抢占模式</strong><br>所以编写脚本来判断本机nginx是否正常，如果发现NginX不正常，重启之。等待3秒再次校验，仍然失败则不再尝试，关闭keepalived，其他主机此时会接管VIP<br>重新启动主服务器上的keepalived，发现主服务器又重新接管了VIP，此时slave机器上的VIP已经不在了。</p><p><strong>keepalived配置非抢占模式</strong><br>master故障—&gt;backup顶上—&gt;master恢复不抢占vip—&gt;backup拥有vip继续工作<br>1、两个节点的state都必须配置为BACKUP(官方建议)<br>2、两个节点都在vrrp_instance中添加nopreempt参数（其实优先级高的配置nopreempt参数即可）<br>3、其中一个节点的优先级必须要高于另外一个节点的优先级。<br>注意:要使nopreempt参数起作用，初始状态不能是MASTER。</p><p>在优先级高的节点的 vrrp_instance 中 配置 nopreempt ，当它异常恢复后，即使它 prio 更高也不会抢占，这样可以避免正常情况下做无谓的切换<br>以上可以做到利用脚本检测业务进程的状态，并动态调整优先级从而实现主备切换。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># ip addr</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 00:50:56:8d:45:8e brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.11.7.231/24 brd 10.11.7.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 10.11.7.235/24 scope global secondary ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::2832:9113:96c6:a7cb/64 scope <span class="built_in">link</span> noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line">[root@slave-node ~]<span class="comment"># ip addr</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 00:50:56:8d:0a:7d brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.11.7.232/24 brd 10.11.7.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::2832:9113:96c6:a7cb/64 scope <span class="built_in">link</span> tentative noprefixroute dadfailed </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::74bd:d710:2a35:725e/64 scope <span class="built_in">link</span> noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Nginx </category>
          
          <category> 双机热备-主从 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> 主从 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx双机热备-主从模式</title>
      <link href="/nginx_fzjh/"/>
      <url>/nginx_fzjh/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/kevingrace/p/6137881.html">https://www.cnblogs.com/kevingrace/p/6137881.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Nginx </category>
          
          <category> 双机热备-主从 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> 主从 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EXSI6.7多网卡</title>
      <link href="/exsi_wangka/"/>
      <url>/exsi_wangka/</url>
      
        <content type="html"><![CDATA[<p>EXSI双网卡连接</p><h2 id="检查双网卡"><a href="#检查双网卡" class="headerlink" title="检查双网卡"></a>检查双网卡</h2><p>若服务器存在多个网卡，查看可以使用的网络适配器，链接速度有显示的，代表当前使用中的网口。<br><img src="https://qiufuqi.github.io/img/hexo/20221019100441.png"></p><h2 id="新增虚拟交换机"><a href="#新增虚拟交换机" class="headerlink" title="新增虚拟交换机"></a>新增虚拟交换机</h2><p>由于有多个物理网卡，在虚拟交换机界面择物理网卡需要新增的物理网卡，注意最开始的默认网口已经分配给虚拟机内部通信使用。<br><img src="https://qiufuqi.github.io/img/hexo/20221019100522.png"><br><img src="https://qiufuqi.github.io/img/hexo/20221019100554.png"></p><h2 id="新增网络端口组"><a href="#新增网络端口组" class="headerlink" title="新增网络端口组"></a>新增网络端口组</h2><p>新增网络端口组，定义端口组的名称，这里定义为PC，绑定刚刚新建的虚拟交换机；<br><img src="https://qiufuqi.github.io/img/hexo/20221019100623.png"></p><h2 id="添加网络适配器"><a href="#添加网络适配器" class="headerlink" title="添加网络适配器"></a>添加网络适配器</h2><p>配置虚拟机网络适配器完成，可在每个WIN系统中添加对应的网络适配器，这样打开WIN系统就可以在电脑网络适配器看到新增的这个网口了。<br><img src="https://qiufuqi.github.io/img/hexo/20221019100659.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> 网卡 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> 网卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EXSI版本升级</title>
      <link href="/exsi_upgrade/"/>
      <url>/exsi_upgrade/</url>
      
        <content type="html"><![CDATA[<p>EXSI升级<br>如果直接5.1升6.7的话，会导致版本不兼容，虚拟机无法使用。选择的方案是5.1升级到6.0版本，然后6.0 升级到6.7版本。<br>exsi版本    exsi6.5        exsi6.7        exsi7.0<br>exsi5.5        允许          不允许          不允许<br>exsi6.0        允许          允许            不允许<br>exsi6.5                        允许            不允许<br>exsi6.7                                          不允许</p><h1 id="下载升级包"><a href="#下载升级包" class="headerlink" title="下载升级包"></a>下载升级包</h1><p>升级包下载地址：<a href="https://customerconnect.vmware.com/patch">https://customerconnect.vmware.com/patch</a><br><a href="mailto:&#113;&#x69;&#x75;&#102;&#117;&#x71;&#x69;&#x40;&#102;&#111;&#120;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#113;&#x69;&#x75;&#102;&#117;&#x71;&#x69;&#x40;&#102;&#111;&#120;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a>   Zxc,./123</p><h1 id="上传升级包"><a href="#上传升级包" class="headerlink" title="上传升级包"></a>上传升级包</h1><p><img src="https://qiufuqi.github.io/img/hexo/20231205114912.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231205134255.png"></p><h1 id="开启SSH"><a href="#开启SSH" class="headerlink" title="开启SSH"></a>开启SSH</h1><p>安全配置文件  属性<br><img src="https://qiufuqi.github.io/img/hexo/20231205133801.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231205134342.png"></p><h1 id="开始升级"><a href="#开始升级" class="headerlink" title="开始升级"></a>开始升级</h1><p>每次升级过后，需要reboot重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">exsi5.1 升级5.5  查看升级版本包</span><br><span class="line">esxcli software sources profile list -d /vmfs/volumes/datastore1/ESXi550-201312001.zip</span><br><span class="line">Name                              Vendor        Acceptance Level</span><br><span class="line">--------------------------------  ------------  ----------------</span><br><span class="line">ESXi-5.5.0-20131204001-no-tools   VMware, Inc.  PartnerSupported</span><br><span class="line">ESXi-5.5.0-20131204001-standard   VMware, Inc.  PartnerSupported</span><br><span class="line">ESXi-5.5.0-20131201001s-standard  VMware, Inc.  PartnerSupported</span><br><span class="line">ESXi-5.5.0-20131201001s-no-tools  VMware, Inc.  PartnerSupported</span><br><span class="line">esxcli software profile update -d <span class="string">&quot;/vmfs/volumes/datastore1/ESXi550-201312001.zip&quot;</span> -p ESXi-5.5.0-20131204001-standard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">加个参数--no-hardware-warning忽略这个警告，看能否升级成功。</span><br><span class="line"></span><br><span class="line">exsi5.1 升级5.5  查看升级版本包</span><br><span class="line">esxcli software sources profile list -d /vmfs/volumes/datastore1/ESXi550-201312001.zip</span><br><span class="line">esxcli software profile update -d <span class="string">&quot;/vmfs/volumes/datastore1/ESXi550-201312001.zip&quot;</span> -p ESXi-5.5.0-20131204001-standard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exsi5.5 升级6.0</span><br><span class="line">esxcli software sources profile list -d /vmfs/volumes/datastore1/ESXi600-202002001.zip</span><br><span class="line">esxcli software profile update -d <span class="string">&quot;/vmfs/volumes/datastore1/ESXi600-202002001.zip&quot;</span> -p ESXi-6.0.0-20200204001-standard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exsi6.0 升级6.5</span><br><span class="line">esxcli software sources profile list -d /vmfs/volumes/datastore1/ESXi650-202210001.zip</span><br><span class="line">esxcli software profile update -d <span class="string">&quot;/vmfs/volumes/datastore1/ESXi650-202210001.zip&quot;</span> -p ESXi-6.5.0-20221004001-standard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exsi6.5 升级6.7</span><br><span class="line">esxcli software sources profile list -d /vmfs/volumes/datastore1/ESXi670-202210001.zip</span><br><span class="line">esxcli software profile update -d <span class="string">&quot;/vmfs/volumes/datastore1/ESXi670-202210001.zip&quot;</span> -p ESXi-6.7.0-20221004001-standard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exsi6.7 升级7.0</span><br><span class="line">esxcli software sources profile list -d /vmfs/volumes/datastore1/VMware-ESXi-7.0U3k-21313628-depot.zip</span><br><span class="line">esxcli software profile update -d <span class="string">&quot;/vmfs/volumes/datastore1/VMware-ESXi-7.0U3k-21313628-depot.zip&quot;</span> -p ESXi-7.0U3k-21313628-standard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exsi7.0 升级8</span><br><span class="line">esxcli software sources profile list -d /vmfs/volumes/datastore1/VMware-ESXi-8.0b-21203435-depot.zip</span><br><span class="line">esxcli software profile update -d <span class="string">&quot;/vmfs/volumes/datastore1/VMware-ESXi-8.0b-21203435-depot.zip&quot;</span> -p ESXi-8.0b-21203435-standard</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> 升级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> 升级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker基本命令</title>
      <link href="/docker_bash/"/>
      <url>/docker_bash/</url>
      
        <content type="html"><![CDATA[<p>Docker基本命令操作</p><h1 id="docker基本命令"><a href="#docker基本命令" class="headerlink" title="docker基本命令"></a>docker基本命令</h1><h2 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h2><p>docker images</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">mysql        5.7.38    459651132a11   3 months ago   429MB</span><br><span class="line"></span><br><span class="line"><span class="comment">##字段说明</span></span><br><span class="line">REPOSITORY：镜像属于的仓库；</span><br><span class="line">TAG：镜像的标签信息，标记同一个仓库中的不同镜像；</span><br><span class="line">IMAGE ID：镜像的唯一ID 号，唯一标识一个镜像，经过md5方式加密过；</span><br><span class="line">CREATED：镜像创建时间；</span><br><span class="line">VIRTUAL SIZE：镜像大小</span><br></pre></td></tr></table></figure><h2 id="查看所有状态容器"><a href="#查看所有状态容器" class="headerlink" title="查看所有状态容器"></a>查看所有状态容器</h2><p>docker ps -a</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker ps -a</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                                                  NAMES</span><br><span class="line">118a45fa8a9d   mysql:5.7.38   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   18 minutes ago   Up 13 minutes   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">##字段说明</span></span><br><span class="line">CONTAINER ID：容器的ID号</span><br><span class="line">IMAGE：加载的镜像</span><br><span class="line">COMMAND ：运行的程序</span><br><span class="line">CREATED ：创建时间</span><br><span class="line">STATUS：当前的状态</span><br><span class="line">PORTS：端口映射</span><br><span class="line">NAMES：名称</span><br></pre></td></tr></table></figure><h2 id="docker-run-指令"><a href="#docker-run-指令" class="headerlink" title="docker run 指令"></a>docker run 指令</h2><p>docker run hello-world</p><ul><li>检测本地有没有该镜像（没有的话直接到docker hub上下载)</li><li>create(将镜像创建为容器)+ start 将创建好的容器运行起来<br><img src="https://qiufuqi.github.io/img/hexo/20221011152006.png"></li></ul><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><p>两种方式可查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@localhost ~]<span class="comment"># docker -v</span></span><br><span class="line">Docker version 20.10.18, build b40c2f6</span><br><span class="line">[root@localhost ~]<span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           20.10.18</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.18.6</span><br><span class="line"> Git commit:        b40c2f6</span><br><span class="line"> Built:             Thu Sep  8 23:14:08 2022</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      <span class="literal">true</span></span><br><span class="line">·········</span><br></pre></td></tr></table></figure><h2 id="查看docker信息"><a href="#查看docker信息" class="headerlink" title="查看docker信息"></a>查看docker信息</h2><p>docker info</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker info</span></span><br><span class="line">Client:</span><br><span class="line"> Context:    default</span><br><span class="line"> Debug Mode: <span class="literal">false</span></span><br><span class="line"> Plugins:</span><br><span class="line">  app: Docker App (Docker Inc., v0.9.1-beta3)</span><br><span class="line">  buildx: Docker Buildx (Docker Inc., v0.9.1-docker)</span><br><span class="line">  scan: Docker Scan (Docker Inc., v0.17.0)</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Containers: 1</span><br><span class="line">  Running: 1</span><br><span class="line">  Paused: 0</span><br><span class="line">·········</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221011152223.png"></p><h2 id="帮助文档"><a href="#帮助文档" class="headerlink" title="帮助文档"></a>帮助文档</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker --help</span></span><br></pre></td></tr></table></figure><h1 id="docker镜像操作"><a href="#docker镜像操作" class="headerlink" title="docker镜像操作"></a>docker镜像操作</h1><h2 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h2><p>默认是在公共仓库找，如果有私有仓库，会在私有仓库找</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：docker search 关键字</span></span><br><span class="line"><span class="comment">#示例： </span></span><br><span class="line">docker search nginx </span><br><span class="line">docker search centos：7</span><br></pre></td></tr></table></figure><h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：docker pull 仓库名称[:标签]</span></span><br><span class="line"><span class="comment">#如果下载镜像时不指定标签，则默认会下载仓库中最新版本的镜像，即选择标签为 latest 标签。</span></span><br><span class="line">docker pull centos:7</span><br><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><h2 id="查看镜像列表"><a href="#查看镜像列表" class="headerlink" title="查看镜像列表"></a>查看镜像列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">mysql        5.7.38    459651132a11   3 months ago   429MB</span><br></pre></td></tr></table></figure><h2 id="获取镜像信息"><a href="#获取镜像信息" class="headerlink" title="获取镜像信息"></a>获取镜像信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：docker inspect  镜像ID</span></span><br><span class="line"><span class="comment">#示例：查看nginx镜像信息</span></span><br><span class="line">docker inspect 118a45fa8a9d</span><br></pre></td></tr></table></figure><h2 id="添加镜像标签"><a href="#添加镜像标签" class="headerlink" title="添加镜像标签"></a>添加镜像标签</h2><p>会多一个镜像，id相同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：docker tag 名称:[旧标签] 新名称:[新标签]</span></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">docker tag nginx：latest nginx:lnmp  <span class="comment">#给nginx打上标签lnmp，原来的标签是latest</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221011152956.png"></p><h2 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line">docker rmi 仓库名称:标签 <span class="comment">#当一个镜像有多个标签时，只是删除其中指定的标签</span></span><br><span class="line">docker rmi 镜像ID号   <span class="comment">#会彻底删除该镜像</span></span><br></pre></td></tr></table></figure><h2 id="批量删除镜像"><a href="#批量删除镜像" class="headerlink" title="批量删除镜像"></a>批量删除镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#docker images -q 可以加载镜像id</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#批量删除所有镜像</span></span><br><span class="line">docker rmi `docker images -q`</span><br><span class="line"><span class="comment">#批量删除nginx镜像</span></span><br><span class="line">docker rmi `docker images|grep <span class="string">&quot;nginx&quot;</span>`</span><br></pre></td></tr></table></figure><h2 id="导出-导入镜像"><a href="#导出-导入镜像" class="headerlink" title="导出\导入镜像"></a>导出\导入镜像</h2><p>docker save/load</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导出镜像</span></span><br><span class="line"><span class="comment">#格式：docker save -o 存储文件名 存储的镜像</span></span><br><span class="line">docker save -o nginx_v1 nginx:latest<span class="comment">#存出镜像命名为nginx存在当前目录下</span></span><br><span class="line">docker save -o centos_v1 centos:7 </span><br><span class="line"> </span><br><span class="line"><span class="comment">#导入镜像，可以异地导入，但是必须要有docker引擎，并且版本不可以差太多</span></span><br><span class="line"><span class="comment">#格式：docker load &lt; 存出的文件</span></span><br><span class="line">docker load &lt; nginx_v1 </span><br><span class="line">dokcer load &lt; centos_v1</span><br><span class="line"></span><br><span class="line">批量把镜像打包成haha.tar压缩包（但修改名称的镜像包打包不了）</span><br><span class="line">docker save $(docker images | grep -v REPOSITORY | awk <span class="string">&#x27;BEGIN&#123;OFS=&quot;:&quot;;ORS=&quot; &quot;&#125;&#123;print $1,$2&#125;&#x27;</span>) -o haha.tar</span><br></pre></td></tr></table></figure><p>导出镜像<br><img src="https://qiufuqi.github.io/img/hexo/20221011153435.png"><br>导入镜像<br><img src="https://qiufuqi.github.io/img/hexo/20221011153445.png"></p><h1 id="容器操作"><a href="#容器操作" class="headerlink" title="容器操作"></a>容器操作</h1><h2 id="查询所有容器运行状态"><a href="#查询所有容器运行状态" class="headerlink" title="查询所有容器运行状态"></a>查询所有容器运行状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker ps -a</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                                                  NAMES</span><br><span class="line">118a45fa8a9d   mysql:5.7.38   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   37 minutes ago   Up 17 minutes   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql</span><br></pre></td></tr></table></figure><h2 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h2><p>docker create<br>新创建的容器默认处于停止状态，不运行任何程序，需要在其中发起一个进程来启动容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：docker create [选项] 镜像</span></span><br><span class="line"><span class="comment">#常用选项：</span></span><br><span class="line">-i：让容器的输入保持打开</span><br><span class="line">-t：让 Docker 分配一个伪终端</span><br><span class="line"></span><br><span class="line"><span class="comment">#示例：</span></span><br><span class="line">docker create -it nginx:latest /bin/bash</span><br></pre></td></tr></table></figure><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：docker start 容器的ID/名称</span></span><br><span class="line">docker start 3dcd81095c9f</span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h2 id="启动容器（一次性执行）"><a href="#启动容器（一次性执行）" class="headerlink" title="启动容器（一次性执行）"></a>启动容器（一次性执行）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#加 -d 选项让 Docker 容器以守护形式在后台运行。并且容器所运行的程序不能结束。</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#示例1：</span></span><br><span class="line">docker run --name web1 -itd nginx:latest /bin/bash</span><br><span class="line"> </span><br><span class="line"><span class="comment">#示例2：执行后退出</span></span><br><span class="line">docker run --name test1 centos:7 /usr/local/bash -c <span class="built_in">ls</span> /   </span><br><span class="line"> </span><br><span class="line"><span class="comment">#示例3：执行后不退出，以守护进程方式执行持续性任务</span></span><br><span class="line">docker run  --name web2 -d centos:7 /bin/bash -c <span class="string">&quot;while true;do echo hello;done&quot;</span> </span><br></pre></td></tr></table></figure><h2 id="查看容器ip地址"><a href="#查看容器ip地址" class="headerlink" title="查看容器ip地址"></a>查看容器ip地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：docker inspect 容器id </span></span><br><span class="line">docker ps -a   <span class="comment">#先查看运行时容器的id</span></span><br><span class="line">docker inspect 45f2ce7ee445</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221011154256.png"></p><h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><p>进入容器的容器状态必须是up状态 和shell 是两种运行模式</p><ul><li>docker run -it会创建前台进程，但是会在输入exit后终止进程。</li><li>docker attach会通过连接stdin，连接到容器内输入输出流，会在输入exit后终止容器进程。</li><li>docker exec -it 会连接到容器，可以像sSH一样进入容器内部，进行操作，可以通过exit退出容器，不影响容器运行。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要进入容器进行命令操作时，可以使用 docker exec 命令进入运行着的容器。</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#格式：docker exec -it 容器ID/名称 /bin/bash</span></span><br><span class="line">-i 选项表示让容器的输入保持打开；</span><br><span class="line">-t 选项表示让 Docker 分配一个伪终端。</span><br><span class="line">-d：守护进程。</span><br><span class="line"> </span><br><span class="line"><span class="comment">#示例：进入（三种方式）</span></span><br><span class="line">docker run -itd centos:7 /bin/bash  <span class="comment">#先运行容器</span></span><br><span class="line">docker ps -a </span><br><span class="line">①使用run进入，可以使用ctrl+d退出，直接退出终端</span><br><span class="line">docker run -it centos:7 /bin/bash </span><br><span class="line"> </span><br><span class="line">②想永久性进入，退出后还是运行状态，用docker <span class="built_in">exec</span></span><br><span class="line">docker ps -a </span><br><span class="line">docker <span class="built_in">exec</span> -it nginx:latest  /bin/bash</span><br><span class="line"> </span><br><span class="line">③docker attach，会通过连接stdin，连接到容器内输入输出流，公在输入<span class="built_in">exit</span>后终止容器进程（临时性的，不推荐）</span><br></pre></td></tr></table></figure>使用run进入，是一次性进入<br><img src="https://qiufuqi.github.io/img/hexo/20221011154732.png"><br>永久性进入，用docker exec (退出后，容器仍然会运行)<br><img src="https://qiufuqi.github.io/img/hexo/20221011154750.png"></li></ul><h2 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h2><p>不能删除运行状态的容器，只能-f强制删除，或者先停止再删除<br>已经退出的容器，可以直接删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：docker rm [-f] 容器ID/名称</span></span><br><span class="line"> </span><br><span class="line">1.<span class="comment">#不能删除运行状态的容器，只能-f强制删除，或者先停止再删除</span></span><br><span class="line">docker <span class="built_in">rm</span> web1</span><br><span class="line"> </span><br><span class="line">2.<span class="comment">#已经退出的容器，可以直接删除</span></span><br><span class="line">docker <span class="built_in">rm</span> web2 </span><br><span class="line"> </span><br><span class="line">3.<span class="comment">#基于名称匹配的方式删除</span></span><br><span class="line">docker <span class="built_in">rm</span> -f web3</span><br><span class="line"> </span><br><span class="line"> 4.<span class="comment">#删除所有运行状态的容器</span></span><br><span class="line">docker <span class="built_in">rm</span> -f `docker ps -q`</span><br><span class="line"> </span><br><span class="line">5.<span class="comment">#删除所有容器</span></span><br><span class="line">docker <span class="built_in">rm</span> -f `docker ps -aq`</span><br><span class="line"> </span><br><span class="line">6.<span class="comment">#有选择性的批量删除 （正则匹配）</span></span><br><span class="line">docker ps -a | awk <span class="string">&#x27; &#123;print &quot;docker rm &quot;$1&#125;&#x27;</span> | bash</span><br><span class="line"> </span><br><span class="line">7.<span class="comment">#删除退出状态的容器</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `dockef ps -a | grep -i <span class="built_in">exit</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> <span class="string">&#x27;; do docker rm -f $i;done</span></span><br></pre></td></tr></table></figure><h2 id="查看docker消耗的资源状态"><a href="#查看docker消耗的资源状态" class="headerlink" title="查看docker消耗的资源状态"></a>查看docker消耗的资源状态</h2><p>docker stats<br><img src="https://qiufuqi.github.io/img/hexo/20221011155342.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Docker </category>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物理机迁移虚拟机</title>
      <link href="/exsi_converter/"/>
      <url>/exsi_converter/</url>
      
        <content type="html"><![CDATA[<h1 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h1><p>使用vmware公司提供的一款软件“vmware converter standalone”<br><a href="https://www.filehorse.com/download-vmware-vcenter-converter/34795/">下载地址</a><br>链接: <a href="https://pan.baidu.com/s/1CThLannd2IEn5hLIT7WvNQ">https://pan.baidu.com/s/1CThLannd2IEn5hLIT7WvNQ</a> 提取码: bitv<br>下载对应软件并安装</p><h1 id="转换原理"><a href="#转换原理" class="headerlink" title="转换原理"></a>转换原理</h1><p><img src="https://qiufuqi.github.io/img/hexo/20220928151938.png"><br>A是一台windows机器，安装了“vmware converter standalone”软件<br>B是要转换的windows物理机<br>C是vcenter，管理着数台esxi服务器</p><h1 id="转换步骤"><a href="#转换步骤" class="headerlink" title="转换步骤"></a>转换步骤</h1><p><a href="https://view.inews.qq.com/k/20210827A09T6700?web_channel=wap&openApp=false">参考地址</a><br>选中菜单Convert machine<br><img src="https://qiufuqi.github.io/img/hexo/20220928152646.png"><br>根据实际需要，选择要迁移的服务器类型，并填写要迁移的服务器地址<br><img src="https://qiufuqi.github.io/img/hexo/20220928152759.png"><br>选择Yes，程序会自检，判断是否符合转换要求<br><img src="https://qiufuqi.github.io/img/hexo/20220928152930.png"></p><p>填写vCenter或者Exsi地址，此处为目标地址<br><img src="https://qiufuqi.github.io/img/hexo/20220928153055.png"><br>Ignore忽略告警<br><img src="https://qiufuqi.github.io/img/hexo/20220928153140.png"></p><p>Name出编写虚拟机名称，选择存放位置<br><img src="https://qiufuqi.github.io/img/hexo/20220928153213.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220928153309.png"></p><p>Options页面可以选择更改CPU，内存，磁盘等<br><img src="https://qiufuqi.github.io/img/hexo/20220928153416.png"></p><p>配置网络：选择network，网卡数量，迁移的磁盘大小<br>设置物理机转换后的虚机大小、网络、内存、物理机运行的服务等信息<br>下图，可以选择 如何拷贝物理机的硬盘数据，若物理机的C盘是200G，实际用了50G<br>若选择第一个，全部拷贝，那么会将200G数据全部拷贝到虚机上<br>若选择第二个，只会将实际占用的50G拷贝到虚机<br>第三个选择是，自定义拷贝多大，单位G<br>第四个选择是，自定义拷贝，单位MB<br><img src="https://qiufuqi.github.io/img/hexo/20220928153559.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220928173050.png"></p><p>可做可不做：要取消[Reconfigure destination virtual machine]选项，否则最后很可能会异常<br><img src="https://qiufuqi.github.io/img/hexo/20220928153629.png"></p><p>最后选择完成并执行<br><img src="https://qiufuqi.github.io/img/hexo/20220928153809.png"></p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p><a href="https://blog.csdn.net/zly3500/article/details/124958605">参考处理</a><br>提交任务后，总是停留在1%，进度信息停在：<br>Connecting to the Converter helper server on the destination virtual machine.<br>取消任务后，提示：<br>Unable to connect to the Converter helper server on the destination virtual machine</p><p>问题解决：<br>1、因为Converter Server在 vCenter上创建的 helper vm虚拟机的缺省网络设置是自动获取ip地址，而网络上没有可用的dhcp服务，所以Converter Server和helper vm通讯失败。<br>应该在vCenter Converter提交任务前的配置页，静态配置helper vm的ip地址，最好用ipv4，并且和源物理机同网段。<br>2、并且要取消[Reconfigure destination virtual machine]选项，否则最后很可能会异常。</p><p>转换完成后，启动时如果出现”error loading operating system”，参考如下修复虚拟机<br>通过启动盘进入[救援模式]<br>1  sh&gt; chroot /mnt/sysimage<br>2  sh&gt; grub<br>3  grub&gt; root (hd0,0)<br>4  grub&gt; setup (hd0)<br>5  grub&gt; quit</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> Convert </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> Convert </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Nginx</title>
      <link href="/docker_nginx/"/>
      <url>/docker_nginx/</url>
      
        <content type="html"><![CDATA[<p>Docker安装Nginx<br>前提：部署好<a href="/docker_install">docker环境</a><br>关闭selinux以及<a href="centos_firewalld">防火墙（或放行端口）</a></p><h2 id="查找Nginx镜像"><a href="#查找Nginx镜像" class="headerlink" title="查找Nginx镜像"></a>查找Nginx镜像</h2><p><a href="https://registry.hub.docker.com/">dockerHub官方地址</a><br>在上方搜索栏里输入nginx<br><img src="https://qiufuqi.github.io/img/hexo/20221026170934.png"><br>找到要拉取的镜像版本，在tag下找到版本<br><img src="https://qiufuqi.github.io/img/hexo/20221026171052.png"></p><p>或者使用命令行查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search nginx</span><br></pre></td></tr></table></figure><h2 id="拉取nginx镜像"><a href="#拉取nginx镜像" class="headerlink" title="拉取nginx镜像"></a>拉取nginx镜像</h2><p>不指定版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker pull nginx</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker pull nginx:latest</span></span><br></pre></td></tr></table></figure><p>指定版本号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker pull nginx:1.20.2</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221026171306.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">nginx        1.20.2    0584b370e957   5 months ago   141MB</span><br></pre></td></tr></table></figure><h2 id="创建nginx实例"><a href="#创建nginx实例" class="headerlink" title="创建nginx实例"></a>创建nginx实例</h2><p>-d nginx： 设置容器在在后台一直运行<br>-v 主机目录：容器目录<br>–privileged=true 是通过root权限操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动重启可加入：--restart=always</span></span><br><span class="line">docker run -p 80:80 --name nginx -d nginx:1.20.2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查询容器状态"><a href="#查询容器状态" class="headerlink" title="查询容器状态"></a>查询容器状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker ps -a</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                               NAMES</span><br><span class="line">448acc833582   nginx:1.20.2   <span class="string">&quot;/docker-entrypoint.…&quot;</span>   45 seconds ago   Up 45 seconds   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp   nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无法启动，查看日志</span></span><br><span class="line">[root@localhost /]<span class="comment"># docker logs 2438d6d7a495</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker exec -it 448acc833582 bash</span></span><br><span class="line">root@448acc833582:/<span class="comment"># nginx -v</span></span><br><span class="line">nginx version: nginx/1.20.2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Docker </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装Oracle</title>
      <link href="/centos_oracle/"/>
      <url>/centos_oracle/</url>
      
        <content type="html"><![CDATA[<p>Linux环境中安装Oracle，系统版本centos7.6 gui 桌面版。</p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h2 id="资源准备"><a href="#资源准备" class="headerlink" title="资源准备"></a>资源准备</h2><p>提前下载好相关资源，并存放/home/soft目录下<br>链接：<a href="https://pan.baidu.com/s/1XniDCJmyYvsYcXihV5Bqjw">https://pan.baidu.com/s/1XniDCJmyYvsYcXihV5Bqjw</a><br>提取码：o0nv<br><img src="https://qiufuqi.github.io/img/hexo/20220923111716.png"></p><h2 id="服务器准备"><a href="#服务器准备" class="headerlink" title="服务器准备"></a>服务器准备</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 防火墙放行端口（或者关闭防火墙）  关闭selinux  </span></span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --zone=public --add-port=1521/tcp --permanent</span></span><br><span class="line">[root@localhost ~]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -i &#x27;s#SELINUX=.*#SELINUX=disabled#g&#x27; /etc/selinux/config</span></span><br><span class="line">[root@localhost ~]<span class="comment"># setenforce 0</span></span><br></pre></td></tr></table></figure><h2 id="oracle用户准备"><a href="#oracle用户准备" class="headerlink" title="oracle用户准备"></a>oracle用户准备</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># groupadd oinstall</span></span><br><span class="line">[root@localhost ~]<span class="comment"># groupadd dba</span></span><br><span class="line">[root@localhost ~]<span class="comment"># useradd -g oinstall -G dba oracle</span></span><br><span class="line">useradd: user <span class="string">&#x27;oracle&#x27;</span> already exists</span><br><span class="line">[root@localhost ~]<span class="comment"># id oracle</span></span><br><span class="line">uid=1000(oracle) gid=1000(oracle) <span class="built_in">groups</span>=1000(oracle),10(wheel)</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># mkdir -p /home/data/oracle              #创建oracle安装目录</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkdir -p /home/data/database            #创建oracle解压目录</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkdir -p /home/data/oraInventory        #创建oracle配置文件目录~~~~</span></span><br><span class="line">[root@localhost ~]<span class="comment"># chown -R oracle:oinstall /home/data     #设置oracle用户为目录的所有者</span></span><br><span class="line">[root@localhost ~]<span class="comment"># chmod -R 775 /home/data</span></span><br></pre></td></tr></table></figure><h2 id="修改oracle用户限制"><a href="#修改oracle用户限制" class="headerlink" title="修改oracle用户限制"></a>修改oracle用户限制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改操作系统对oracle用户资源的限制</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/security/limits.conf</span></span><br><span class="line">······</span><br><span class="line">oracle soft <span class="built_in">nproc</span> 4096</span><br><span class="line">oracle hard <span class="built_in">nproc</span> 16384</span><br><span class="line">oracle soft nofile 2048</span><br><span class="line">oracle hard nofile 65536</span><br><span class="line"><span class="comment"># End of file</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使limits.conf文件配置生效，必须要确保pam_limits.so文件被加入到启动文件中</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/pam.d/login</span></span><br><span class="line">······</span><br><span class="line">session    required    /lib/security/pam_limits.so</span><br><span class="line">session    required    pam_limits.so</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置其最大可启动进程数与最多可开启文件数</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/profile</span></span><br><span class="line">······</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$USER</span> = <span class="string">&quot;oracle&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">   <span class="keyword">if</span> [ <span class="variable">$SHELL</span> = <span class="string">&quot;/bin/ksh&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">           <span class="built_in">ulimit</span> -p 16384</span><br><span class="line">           <span class="built_in">ulimit</span> -n 65536</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">           <span class="built_in">ulimit</span> -u 16384 -n 65536</span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置修改生效</span></span><br><span class="line">[root@localhost ~]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure><h2 id="配置内核参数和资源限制"><a href="#配置内核参数和资源限制" class="headerlink" title="配置内核参数和资源限制"></a>配置内核参数和资源限制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每次操作系统启动时，便会自动设置这些内核参数</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/sysctl.conf</span></span><br><span class="line">fs.aio-max-nr = 1048576</span><br><span class="line">fs.file-max = 6815744</span><br><span class="line">kernel.shmall = 2097152</span><br><span class="line">kernel.shmmax = 536870912</span><br><span class="line">kernel.shmmni = 4096</span><br><span class="line">kernel.sem = 250 32000 100 128</span><br><span class="line">net.ipv4.ip_local_port_range = 9000 65500</span><br><span class="line">net.core.rmem_default = 262144</span><br><span class="line">net.core.rmem_max = 4194304</span><br><span class="line">net.core.wmem_default = 262144</span><br><span class="line">net.core.wmem_max = 1048576</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看并生效</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sysctl -p</span></span><br></pre></td></tr></table></figure><h2 id="配置oracle用户环境变量"><a href="#配置oracle用户环境变量" class="headerlink" title="配置oracle用户环境变量"></a>配置oracle用户环境变量</h2><p>将下列设置添加到 /home/oracle/.bash_profile文件中。<br>注意:要写到原有“PATH=PATH: PATH: HOME/bin”变量上面，否则会提示“bash: sqlplus: command not found”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vi /home/oracle/.bash_profile</span></span><br><span class="line">·········</span><br><span class="line"><span class="built_in">umask</span> 022</span><br><span class="line"><span class="built_in">export</span> ORACLE_BASE=/home/data/oracle</span><br><span class="line"><span class="built_in">export</span> ORACLE_HOME=<span class="variable">$ORACLE_BASE</span>/product/11.2.0/db_1</span><br><span class="line"><span class="built_in">export</span> ORACLE_SID=orcl</span><br><span class="line"><span class="built_in">export</span> ORACLE_TERM=xterm</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$ORACLE_HOME</span>/bin:/user/sbin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$ORACLE_HOME</span>/lib:/lib:/usr/lib</span><br><span class="line"><span class="built_in">export</span> LANG=C</span><br><span class="line"><span class="built_in">export</span> NLS_LANG=<span class="string">&quot;SIMPLIFIED CHINESE_CHINA.AL32UTF8&quot;</span></span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/.local/bin:<span class="variable">$HOME</span>/bin:<span class="variable">$ORACLE_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换oracle用户，执行source /home/oracle/.bash_profile 使用echo $ORACLE_HOME 来显示是否生效</span></span><br><span class="line">[root@localhost ~]<span class="comment"># su - oracle</span></span><br><span class="line">[oracle@localhost ~]$ <span class="built_in">source</span> /home/oracle/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="配置主机名监听"><a href="#配置主机名监听" class="headerlink" title="配置主机名监听"></a>配置主机名监听</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle ~]<span class="comment"># hostnamectl set-hostname oracle</span></span><br><span class="line">[root@oracle ~]<span class="comment"># vi /etc/sysconfig/network</span></span><br><span class="line">·········</span><br><span class="line">hostname=oracle</span><br><span class="line"><span class="comment"># 本机ip</span></span><br><span class="line">[root@oracle ~]<span class="comment"># vi /etc/hosts</span></span><br><span class="line">·········</span><br><span class="line">10.128.1.71 oracle</span><br></pre></td></tr></table></figure><h2 id="安装java指定jdk"><a href="#安装java指定jdk" class="headerlink" title="安装java指定jdk"></a>安装java指定jdk</h2><p>jdk-8u60-linux-x64.tar.gz</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle soft]<span class="comment"># vi /home/soft/install_jdk.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># sources variables </span></span><br><span class="line">check_user=`<span class="built_in">id</span> -u`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;check_user&#125;</span> != <span class="string">&quot;0&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Must be root can use !&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">JDK_version=<span class="string">&quot;jdk1.8.0_60&quot;</span></span><br><span class="line">BASE_dir=<span class="string">&quot;/usr/java&quot;</span></span><br><span class="line">SOFT_dir=<span class="string">&quot;/home/soft&quot;</span></span><br><span class="line">JDK_package=<span class="string">&quot;jdk-8u60-linux-x64.tar.gz&quot;</span></span><br><span class="line">JAVA_HOME=<span class="string">&quot;/usr/java/<span class="variable">$&#123;JDK_version&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">jdk_install</span></span>()&#123;</span><br><span class="line"> [ -d <span class="variable">$&#123;SOFT_dir&#125;</span> ] || <span class="built_in">mkdir</span> -p <span class="variable">$&#123;SOFT_dir&#125;</span></span><br><span class="line"> [ -e <span class="variable">$&#123;BASE_dir&#125;</span>/<span class="variable">$&#123;JDK_version&#125;</span> ] &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m    <span class="variable">$&#123;JDK_version&#125;</span>已部署,请退出!!! \033[0m&quot;</span> </span><br><span class="line"><span class="keyword">if</span> [ -e <span class="variable">$&#123;BASE_dir&#125;</span>/<span class="variable">$&#123;JDK_version&#125;</span> ];<span class="keyword">then</span></span><br><span class="line"> <span class="built_in">sleep</span> 1 &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   [ -f <span class="variable">$&#123;SOFT_dir&#125;</span>/<span class="variable">$&#123;JDK_package&#125;</span> ] || <span class="built_in">echo</span> -e <span class="string">&quot;\033[36m    <span class="variable">$&#123;JDK_package&#125;</span>正在下载.... \033[0m&quot;</span></span><br><span class="line">   <span class="built_in">sleep</span> 1</span><br><span class="line">   [ -d <span class="string">&quot;<span class="variable">$&#123;BASE_dir&#125;</span>&quot;</span> ] &amp;&amp; <span class="built_in">rm</span> -rf <span class="variable">$&#123;BASE_dir&#125;</span>/* || <span class="built_in">mkdir</span> -p <span class="variable">$&#123;BASE_dir&#125;</span></span><br><span class="line">   <span class="built_in">sleep</span> 1 &amp;&amp;  <span class="built_in">echo</span> -e <span class="string">&quot;\033[35m    正在解压<span class="variable">$&#123;JDK_package&#125;</span>.... \033[0m&quot;</span></span><br><span class="line">   <span class="built_in">cd</span> <span class="variable">$&#123;SOFT_dir&#125;</span> &amp;&amp; tar -xzf  <span class="variable">$&#123;JDK_package&#125;</span> -C <span class="variable">$&#123;BASE_dir&#125;</span></span><br><span class="line">   <span class="built_in">sleep</span> 2;</span><br><span class="line">   sed  -i <span class="string">&#x27;/JAVA_HOME*/d&#x27;</span> /etc/profile</span><br><span class="line">   sed -i.ori <span class="string">&#x27;$a export JAVA_HOME=/usr/java/jdk1.8.0_60\nexport PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH\nexport CLASSPATH=.$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar&#x27;</span> /etc/profile</span><br><span class="line">   <span class="built_in">source</span> /etc/profile &amp;&amp; . /etc/profile</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;JAVA_HOME=<span class="variable">$JAVA_HOME</span>&quot;</span>  </span><br><span class="line">   <span class="built_in">echo</span> `<span class="variable">$JAVA_HOME</span>/bin/java -version`</span><br><span class="line">   <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m    JDK已部署成功!!! \033[0m&quot;</span> </span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line"> jdk_install</span><br><span class="line">&#125;</span><br><span class="line">main</span><br><span class="line"></span><br><span class="line">[root@oracle soft]<span class="comment"># sh /home/soft/install_jdk.sh</span></span><br><span class="line">[root@oracle soft]<span class="comment"># sh install_jdk.sh </span></span><br><span class="line">    正在解压jdk-8u60-linux-x64.tar.gz.... </span><br><span class="line">JAVA_HOME=/usr/java/jdk1.8.0_60</span><br><span class="line">java version <span class="string">&quot;1.8.0_60&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_60-b27)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.60-b23, mixed mode)</span><br><span class="line"></span><br><span class="line">    JDK已部署成功!!! </span><br></pre></td></tr></table></figure><h1 id="开始安装oracle"><a href="#开始安装oracle" class="headerlink" title="开始安装oracle"></a>开始安装oracle</h1><h2 id="安装相关依赖包"><a href="#安装相关依赖包" class="headerlink" title="安装相关依赖包"></a>安装相关依赖包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle soft]<span class="comment"># yum -y install binutils-* compat-libcap1-* gcc-* gcc-c++-* glibc-* glibc-devel-* glibc-headers-* libstdc* elfutils-libelf-devel* libaio-devel* unixODBC-* pdksh-* libaio-* libgcc-* libXi-* libXtst-* make-* sysstat-* ld-linux.so.2 libc.so.6*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认pdksh会无法安装，使用rpm安装 </span></span><br><span class="line"><span class="comment"># https://ftp.icm.edu.pl/packages/linux-redhat/linux/6.1/en/os/i386/RedHat/RPMS/</span></span><br><span class="line">[root@oracle soft]<span class="comment"># wget http://vault.centos.org/5.11/os/i386/CentOS/pdksh-5.2.14-37.el5_8.1.i386.rpm</span></span><br><span class="line">[root@oracle soft]<span class="comment"># rpm -ivh pdksh-5.2.14-37.el5_8.1.i386.rpm</span></span><br></pre></td></tr></table></figure><h2 id="安装图形化界面（已安装可忽略）"><a href="#安装图形化界面（已安装可忽略）" class="headerlink" title="安装图形化界面（已安装可忽略）"></a>安装图形化界面（已安装可忽略）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">systemctl get-default</span><br><span class="line">yum grouplist</span><br><span class="line">yum groupinstall <span class="string">&quot;GNOME Desktop&quot;</span> <span class="string">&quot;Graphical Administration Tools&quot;</span></span><br><span class="line"><span class="comment"># 更新系统的运行级别为graphical.target，设置默认启动图形界面:</span></span><br><span class="line">systemctl set-default graphical.target</span><br><span class="line"><span class="built_in">ln</span> -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.target</span><br><span class="line">systemctl get-default  <span class="comment">#检查一下</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="解压oracle安装包"><a href="#解压oracle安装包" class="headerlink" title="解压oracle安装包"></a>解压oracle安装包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle soft]<span class="comment"># unzip linux.x64_11gR2_database_1of2.zip -d /home/data/</span></span><br><span class="line">[root@oracle soft]<span class="comment"># unzip linux.x64_11gR2_database_2of2.zip -d /home/data/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /home/oracle/database 有执行权限，将该目录赋予oracle帐号所有，并拥有执行权限</span></span><br><span class="line">[root@oracle soft]<span class="comment"># chmod -R 700 /home/data/database </span></span><br><span class="line">[root@oracle soft]<span class="comment"># chown -R oracle:oinstall /home/data/database</span></span><br></pre></td></tr></table></figure><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p><strong>注意此步骤一定要在图形桌面上执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># root用户执行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@oracle ~]<span class="comment"># yum whatprovides &quot;*/xhost&quot;</span></span><br><span class="line"><span class="comment"># 根据上条命令安装xorg-x11-server-utils-7.7-20.el7.x86_64</span></span><br><span class="line">[root@oracle ~]<span class="comment"># yum -y install xorg-x11-server-utils-7.7-20.el7.x86_64</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入ROOT用户</span></span><br><span class="line">[root@oracle ~]<span class="comment"># su – </span></span><br><span class="line">[root@oracle ~]<span class="comment"># DISPLAY=:0.0; export DISPLAY</span></span><br><span class="line">[root@oracle ~]<span class="comment"># cd /usr/bin</span></span><br><span class="line">[root@oracle ~]<span class="comment"># ./xhost</span></span><br><span class="line">[root@oracle ~]<span class="comment"># ./xhost +</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换为oracle</span></span><br><span class="line">[root@oracle ~]<span class="comment"># su - oracle</span></span><br><span class="line">[oracle@oracle ~]<span class="comment"># su - oracle</span></span><br><span class="line">[oracle@oracle ~]<span class="comment"># DISPLAY=:0.0; export DISPLAY</span></span><br><span class="line">[oracle@oracle ~]<span class="comment"># cd /home/data/database</span></span><br><span class="line">[oracle@oracle ~]<span class="comment"># ./runInstaller  # 出现图形化安装页面</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20220923154134.png"></p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>取消选中这个界面上的I wish to receive security updates via My Oracle Support 复选框，点击Next<br><img src="https://qiufuqi.github.io/img/hexo/20220923154308.png"><br>直接默认yes，点击下一步，默认创建和配置一个数据库<br><img src="https://qiufuqi.github.io/img/hexo/20220923154329.png"><br> 选择服务类<br><img src="https://qiufuqi.github.io/img/hexo/20220923154341.png"><br>选择单实例库<br><img src="https://qiufuqi.github.io/img/hexo/20220923154410.png"><br>选择典型安装，也可以选择高级安装，安装步骤更多：<br><img src="https://qiufuqi.github.io/img/hexo/20220923154436.png"><br>安装Oracle基本配置：最好保持和ORACLE_BASE&amp;&amp;ORACLE_HOME配置环境变量一致，点击yes：<br>密码：Oracle2022  （大小写字母+数字）<br><img src="https://qiufuqi.github.io/img/hexo/20220923154515.png"><br>选择清单目录、即Oracle配置文件存放目录：用户组选择默认<br><img src="https://qiufuqi.github.io/img/hexo/20220923154804.png"><br> 先决条件检查：查看缺失的依赖包<br><img src="https://qiufuqi.github.io/img/hexo/20220923154908.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220923154923.png"></p><p>最好不要选择右上角“Igrnore all”(全部忽略)，如下图显示，有些包还没有安装，里面显示是需要32位(i386)的，相关文件已经打包好。<br>使用方法：在root用户下，解压后直接./oracle_rpm_setup.sh即可自动安装全部的包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle ~]<span class="comment"># cd /home/soft/</span></span><br><span class="line">[root@oracle ~]<span class="comment"># unzip oracle_rpm_setup.zip</span></span><br><span class="line">[root@oracle ~]<span class="comment"># cd oracle_rpm_setup/</span></span><br><span class="line">[root@oracle ~]<span class="comment"># ./oracle_rpm_setup.sh</span></span><br></pre></td></tr></table></figure><p>点击”Check Again”后，之前提示包全部完成，剩下的可以忽略。<br><img src="https://qiufuqi.github.io/img/hexo/20220923155103.png"><br>直接下一步，在Summary界面，保持默认，点击Finish，开始安装：<br><img src="https://qiufuqi.github.io/img/hexo/20220923155132.png"><br>安装过程中，差不多需要15—30分钟左右，其中会有一些错误提示，不过不影响，我们选择continue和默认即可。<br><img src="https://qiufuqi.github.io/img/hexo/20220923155157.png"><br>安装完成后会提示需要执行两个脚本， 使用root账户执行两个脚本即可完成所有安装步骤。<br><img src="https://qiufuqi.github.io/img/hexo/20220923155212.png"><br>登录root用户，到下面的两个目录下执行脚本即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle ~]<span class="comment"># cd /home/data/oraInventory/</span></span><br><span class="line">[root@oracle ~]<span class="comment"># sh orainstRoot.sh</span></span><br><span class="line">[root@oracle ~]<span class="comment"># cd /home/data/oracle/product/11.2.0/db_1</span></span><br><span class="line">[root@oracle ~]<span class="comment"># sh root.sh</span></span><br></pre></td></tr></table></figure><p>点击close，至此完成Oracle的配置和安装：<br><img src="https://qiufuqi.github.io/img/hexo/20220923155457.png"></p><h2 id="启动oracle和配置监听"><a href="#启动oracle和配置监听" class="headerlink" title="启动oracle和配置监听"></a>启动oracle和配置监听</h2><p>linux下的Oracle在安装结束后是处于运行状态的。端口号1521，运行top -u oracle可以看到以Oracle用户运行的进程。在图形化界面下，运行$ORACLE_HOME/sqldeveloper/sqldeveloper.sh可以出现Oracle自带的免费Oracle管理客户端SQL Developer。试着连接刚安装的Oracle，连接成功。<br><img src="https://qiufuqi.github.io/img/hexo/20220923171348.png"></p><h2 id="以oracle用户登录"><a href="#以oracle用户登录" class="headerlink" title="以oracle用户登录"></a>以oracle用户登录</h2><p>以oracle身份登录数据库，进入Sqlplus控制台：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle db_1]<span class="comment"># su - oracle</span></span><br><span class="line">[oracle@oracle ~]$ sqlplus / as sysdba</span><br><span class="line"></span><br><span class="line">[oracle@oracle ~]$ sqlplus /nolog    --进入Sqlplus控制台</span><br><span class="line"><span class="comment"># --以系统管理员登录</span></span><br><span class="line">SQL&gt; connect / as sysdba</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; startup    </span><br><span class="line">ORA-01081: 无法启动已在运行的 ORACLE - 请首先关闭它</span><br><span class="line">SQL&gt; shutdown immediate</span><br><span class="line">Database closed.</span><br><span class="line">Database dismounted.</span><br><span class="line">ORACLE instance shut down.</span><br><span class="line">SQL&gt; startup    启动</span><br><span class="line">ORACLE instance started.</span><br><span class="line"></span><br><span class="line">Total System Global Area 3273641984 bytes</span><br><span class="line">Fixed Size    2217792 bytes</span><br><span class="line">Variable Size 1795164352 bytes</span><br><span class="line">Database Buffers 1459617792 bytes</span><br><span class="line">Redo Buffers   16642048 bytes</span><br><span class="line">Database mounted.</span><br><span class="line">Database opened.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="启动监听服务"><a href="#启动监听服务" class="headerlink" title="启动监听服务"></a>启动监听服务</h2><p>以oracle身份登录数据库，前提是首先启动数据库，也可以用dbstart和dbshut启动和关闭数据库实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[oracle@oracle ~]$ dbstart <span class="variable">$ORACLE_HOME</span> <span class="comment">#重启oracle实例</span></span><br><span class="line">[oracle@oracle ~]$ dbshut <span class="variable">$ORACLE_HOME</span>  <span class="comment">#关闭oracle实例</span></span><br><span class="line">[oracle@oracle ~]$ lsnrctl status <span class="comment">#查看监听状态</span></span><br><span class="line">[oracle@oracle ~]$ lsnrctl stop   <span class="comment">#关闭监听，1521端口关闭</span></span><br><span class="line">[oracle@oracle ~]$ lsnrctl start    <span class="comment">#启动监听，1521端口开启</span></span><br><span class="line">[oracle@oracle ~]$ dbca        <span class="comment">#创建数据库实例orcl，图形界面操作</span></span><br><span class="line"></span><br><span class="line">[oracle@oracle ~]$ sqlplus / as sysdba</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20220923174929.png"></p><h2 id="添加用户授权"><a href="#添加用户授权" class="headerlink" title="添加用户授权"></a>添加用户授权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">create user 用户 identified by 密码;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权命令</span></span><br><span class="line">语法： grant connect, resource to 用户名;</span><br><span class="line">例子： grant connect, resource to <span class="built_in">test</span>;</span><br><span class="line"><span class="comment"># 撤销权限</span></span><br><span class="line">语法： revoke connect, resource from 用户名;</span><br><span class="line">列子： revoke connect, resource from <span class="built_in">test</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 某个表授权  ECO9表的拥有者</span></span><br><span class="line">grant select on ECO9.FORMTABLE_MAIN_94 to XJZT;</span><br><span class="line">grant select on ECO9.hrmsubcompany  to XJZT;</span><br><span class="line"></span><br><span class="line"><span class="comment"># NC</span></span><br><span class="line">grant select on yurun501.bd_accsubj to yanfa519;</span><br></pre></td></tr></table></figure><h2 id="密码过期"><a href="#密码过期" class="headerlink" title="密码过期"></a>密码过期</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入oracle用户</span></span><br><span class="line"><span class="variable">$sqlplus</span> / as sysdba</span><br><span class="line">sql&gt; alter user smsc identified by &lt;原来的密码&gt; ----不用换新密码</span><br><span class="line"></span><br><span class="line"><span class="comment"># --查询Orcal密码的有效期设置，LIMIT字段是密码有效天数。</span></span><br><span class="line">SELECT * FROM dba_profiles WHERE profile=<span class="string">&#x27;DEFAULT&#x27;</span> AND resource_name=<span class="string">&#x27;PASSWORD_LIFE_TIME&#x27;</span>;</span><br><span class="line"><span class="comment"># --去除180天的密码生存周期的限制可通过如下SQL语句将其关闭</span></span><br><span class="line">ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;</span><br></pre></td></tr></table></figure><h2 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h2><p>方法一：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改/etc/oratab文件 修改为Y</span></span><br><span class="line">[root@oracle db_1]<span class="comment"># vi /etc/oratab</span></span><br><span class="line">·········</span><br><span class="line">orcl:/home/data/oracle/product/11.2.0/db_1:Y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把lsnrctl start和dbstart添加到rc.local文件中</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/rc.d/rc.local</span><br><span class="line">vi /etc/rc.d/rc.local</span><br><span class="line"><span class="comment"># 第一行为开机启动数据库监听服务，第二行为开机启动数据库。(路径跟安装路径相关)。</span></span><br><span class="line">su - oracle -lc <span class="string">&quot;/home/data/oracle/product/11.2.0/db_1/bin/lsnrctl start&quot;</span></span><br><span class="line">su - oracle -lc <span class="string">&quot;/home/data/oracle/product/11.2.0/db_1/bin/dbstart <span class="variable">$ORACLE_HOME</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机后查看是否启动 oracle用户</span></span><br><span class="line">[oracle@oracle ~]$ lsnrctl status LISTENER</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@oracle ~]<span class="comment"># vi /usr/lib/systemd/system/oracle.service</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Oracle Database 12c Startup/Shutdown Service</span><br><span class="line">After=syslog.target network.target</span><br><span class="line">[Service]</span><br><span class="line">LimitMEMLOCK=infinity</span><br><span class="line">LimitNOFILE=65535</span><br><span class="line">Type=oneshot</span><br><span class="line">RemainAfterExit=<span class="built_in">yes</span></span><br><span class="line">User=oracle</span><br><span class="line">Environment=<span class="string">&quot;ORACLE_HOME=/home/data/oracle/product/11.2.0/db_1&quot;</span></span><br><span class="line">ExecStart=/home/data/oracle/product/11.2.0/db_1/bin/dbstart <span class="variable">$ORACLE_HOME</span> &gt;&gt; 2&gt;&amp;1 &amp;</span><br><span class="line">ExecStop=/home/data/oracle/product/11.2.0/db_1/bin/dbshut <span class="variable">$ORACLE_HOME</span> 2&gt;&amp;1 &amp;</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">[root@oracle ~]<span class="comment"># systemctl enable oracle</span></span><br><span class="line">[root@oracle ~]<span class="comment"># systemctl start oracle</span></span><br><span class="line">[root@oracle ~]<span class="comment"># systemctl stop oracle</span></span><br><span class="line">[root@oracle ~]<span class="comment"># systemctl status oracle</span></span><br></pre></td></tr></table></figure><h2 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h2><p>表空间用完时新增表空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">select file_id,tablespace_name,bytes/1024/1024/1024,maxbytes/1024/1024/1024,AUTOEXTENSIBLE from dba_data_files <span class="built_in">where</span> tablespace_name=<span class="string">&#x27;BWDATA&#x27;</span>;</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line">    TABLESPACE_NAME,</span><br><span class="line">    FILE_NAME,</span><br><span class="line">    BYTES / 1024 / 1024 AS SIZE_MB,</span><br><span class="line">    AUTOEXTENSIBLE,</span><br><span class="line">    MAXBYTES / 1024 / 1024 AS MAX_SIZE_MB</span><br><span class="line">FROM</span><br><span class="line">    DBA_DATA_FILES;</span><br><span class="line"></span><br><span class="line">USERS/u01/app/oracle/oradata/yxdb/users01.dbf5YES32767.984375</span><br><span class="line">UNDOTBS1/u01/app/oracle/oradata/yxdb/undotbs01.dbf2950YES32767.984375</span><br><span class="line">SYSAUX/u01/app/oracle/oradata/yxdb/sysaux01.dbf11970YES32767.984375</span><br><span class="line">SYSTEM/u01/app/oracle/oradata/yxdb/system01.dbf3048YES32767.984375</span><br><span class="line">BWDATA/u01/app/oracle/oradata/yxdb/bwdata01.dbf32767.984375YES32767.984375</span><br><span class="line">BWDATA/u01/app/oracle/oradata/yxdb/bwdata02.dbf32767YES32767</span><br><span class="line">BWDATA/u01/app/oracle/oradata/yxdb/bwdata03.dbf32767YES32767</span><br><span class="line">BWDATA/u01/app/oracle/oradata/yxdb/bwdata04.dbf22528YES22528</span><br><span class="line"></span><br><span class="line"><span class="comment"># bwdata04往后顺延，前提是磁盘空间足够</span></span><br><span class="line">ALTER TABLESPACE bwdata ADD DATAFILE <span class="string">&#x27;/u01/app/oracle/oradata/yxdb/bwdata04.dbf&#x27;</span> SIZE 22528M;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 数据库 </category>
          
          <category> Oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VCSA安装步骤</title>
      <link href="/exsi_vCenter_install/"/>
      <url>/exsi_vCenter_install/</url>
      
        <content type="html"><![CDATA[<p><strong>Vmware vCenter 6.7部署安装全过程</strong></p><p><a href="https://baijiahao.baidu.com/s?id=1735797791474009805&wfr=spider&for=pc">参考地址</a></p><p>镜像下载地址分享<br>链接: <a href="https://pan.baidu.com/s/1ONjVivtoc0TYmtK0vIhDKw?pwd=wak9">https://pan.baidu.com/s/1ONjVivtoc0TYmtK0vIhDKw?pwd=wak9</a><br>提取码: wak9 </p><p>其他镜像下载：<a href="https://www.dinghui.org/vmware-iso-download.html">https://www.dinghui.org/vmware-iso-download.html</a></p><h1 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h1><p>前期准备：</p><ul><li>安装前请先准备好VMware-VCSA-all-6.7.0-19300125.iso文件，放置在windows操作系统下。</li><li>一台EXSI主机 （vCenter系统安装在次主机上）</li></ul><p>vCenter硬件要求<br>准备把vCenter安装在ESXI服务器上的一个虚拟机中，最低12G内存+2VCPU，这个条件还只是最小化安装vCenter，只能管理10台ESXI服务器，100台虚拟机。由于ESXI本身需要4G内存，因此使用此搭配时，至少需要16G+的内存，否则无法安装虚拟机。</p><h1 id="安装开始"><a href="#安装开始" class="headerlink" title="安装开始"></a>安装开始</h1><p>双击前面准备好的iso文件，将其挂载为DVD驱动器，进入vcsa-ui-installer文件夹。<br><img src="https://qiufuqi.github.io/img/hexo/20220921172408.png"><br>然后选择win32，如果你的其它的操作系统，则相应安装。<br><img src="https://qiufuqi.github.io/img/hexo/20220921172436.png"><br>双击安装程序，开始安装。<br><img src="https://qiufuqi.github.io/img/hexo/20220921172455.png"><br>设置安装界面语言为中文，点击右上角切换，点击“安装”。<br><img src="https://qiufuqi.github.io/img/hexo/20220921172517.png"></p><p>下一步<br><img src="https://qiufuqi.github.io/img/hexo/20220921172626.png"><br>勾选许可，点击下一步<br><img src="https://qiufuqi.github.io/img/hexo/20220921172704.png"></p><p>输入ESXi主机的地址、端口号、用户名以及密码，然后点击下一步  提前准备的exsi主机<br><img src="https://qiufuqi.github.io/img/hexo/20220921172728.png"><br>点击是<br><img src="https://qiufuqi.github.io/img/hexo/20220921172809.png"><br>设置 一下虚拟名称，root密码，点击下一步。<br><img src="https://qiufuqi.github.io/img/hexo/20220921172829.png"><br>我这里就部署一台微型，点击下一步。不同部署大小所需的资源如下图：<br><img src="https://qiufuqi.github.io/img/hexo/20220921172846.png"><br>下一步<br><img src="https://qiufuqi.github.io/img/hexo/20220921172903.png"><br>根据自己的情况选择dhcp或是静态ip地址，配置。下一步<br><img src="https://qiufuqi.github.io/img/hexo/20220921172920.png"><br>最后点击完成。<br><img src="https://qiufuqi.github.io/img/hexo/20220921172934.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220921172945.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220921172958.png"><br>继续部署第二阶段，点击继续。然后点击下一步<br><img src="https://qiufuqi.github.io/img/hexo/20220921173022.png"><br>点击下一步<br><img src="https://qiufuqi.github.io/img/hexo/20220921173037.png"><br>输入vCenterServer密码，并单击”下一步”<br><img src="https://qiufuqi.github.io/img/hexo/20220921173051.png"><br>取消勾选，点击下一步。<br><img src="https://qiufuqi.github.io/img/hexo/20220921173112.png"><br>点击完成<br><img src="https://qiufuqi.github.io/img/hexo/20220921174019.png"><br>点击确定<br><img src="https://qiufuqi.github.io/img/hexo/20220921174035.png"><br>最后耐心等待即可。<br><img src="https://qiufuqi.github.io/img/hexo/20220921174105.png"><br>完成后点击关闭<br><img src="https://qiufuqi.github.io/img/hexo/20220921174122.png"></p><p>然后通过我们的浏览器就能正常访问了。<br><img src="https://qiufuqi.github.io/img/hexo/20220921174214.png"></p><h1 id="许可证过期"><a href="#许可证过期" class="headerlink" title="许可证过期"></a>许可证过期</h1><p>当我们进入系统时，上方会有个明显的提示：清单中包含许可证已过期或即将过期的 vCenter Server 系统。从官方下载的都是申请60天试用的，那么就意味着60天后会过期。<br>运行许可证生成软件<br><img src="https://qiufuqi.github.io/img/hexo/20221205135047.png"></p><p>进入分配许可 “管理您的许可证”——“许可证”——“添加新许可” 输入许可证秘钥<br><img src="https://qiufuqi.github.io/img/hexo/20220921174415.png"></p><p>编辑许可证名称 点击完成<br><img src="https://qiufuqi.github.io/img/hexo/20220921174453.png"></p><p>许可证添加成功之后，信息如下从灰色!可以得知，其实该许可证还没分配的，所以上方的许可证即将过期的提示还在<br>进入分配许可证 资产——选择主机——选择分配许可证<br><img src="https://qiufuqi.github.io/img/hexo/20220921174533.png"></p><p>分配许可证<br>选择刚才上面新配置的许可证，选中之后可以看到下面分配验证的提示：许可证分配有效<br><img src="https://qiufuqi.github.io/img/hexo/20220921174557.png"></p><p>分配许可证成功之后校验<br><img src="https://qiufuqi.github.io/img/hexo/20220921174637.png"><br>刷新之后，上方明显：‘清单中包含许可证已过期或即将过期的 vCenter Server 系统’的提示已消失<br><img src="https://qiufuqi.github.io/img/hexo/20220921174656.png"></p><h1 id="新建数据中心"><a href="#新建数据中心" class="headerlink" title="新建数据中心"></a>新建数据中心</h1><p>添加主机了。点击首页IP地址后面的“操作”下拉框，选择“新建数据中心”。<br><img src="https://qiufuqi.github.io/img/hexo/20220921174734.png"><br>设置新建数据中心的名称。<br><img src="https://qiufuqi.github.io/img/hexo/20220921174755.png"></p><p>新建完成之后，点击进入到数据中心。再点击数据中心后面的“操作”下拉框，选择“添加主机”。<br><img src="https://qiufuqi.github.io/img/hexo/20220921174813.png"></p><p>设置ESXi主机的IP地址信息，按照提示进行下一步<br><img src="https://qiufuqi.github.io/img/hexo/20220921174829.png"><br>分配许可证信息。<br><img src="https://qiufuqi.github.io/img/hexo/20220921174910.png"></p><p>锁定模式，一般不建议启用，如果是正规的数据中心，应该要进行管控。我就这一台，而且vCenter还是嵌入式部署，可不敢点启用，使用了默认的“禁用”。<br><img src="https://qiufuqi.github.io/img/hexo/20220921174931.png"></p><p>再点击到数据中心“Guo Tiejun”下的主机，就可以看到主机信息了。<br><img src="https://qiufuqi.github.io/img/hexo/20220921175001.png"></p><h1 id="其他问题处理"><a href="#其他问题处理" class="headerlink" title="其他问题处理"></a>其他问题处理</h1><h2 id="管理问题"><a href="#管理问题" class="headerlink" title="管理问题"></a>管理问题</h2><p>vcenter在添加主机时，锁定模式选择“正常”，故导致无法直接登陆ESXI宿主机<br><img src="https://qiufuqi.github.io/img/hexo/20220921175051.png"></p><p>在vcenter选择相应的ESXI宿主机，配置&gt;系统&gt;安全配置文件&gt;锁定模式&gt;编辑，修改为禁用。<br><img src="https://qiufuqi.github.io/img/hexo/20220921175125.png"></p><h2 id="迁移问题"><a href="#迁移问题" class="headerlink" title="迁移问题"></a>迁移问题</h2><p><a href="https://blog.51cto.com/xiaoyuanzheng/5611330">迁移参考</a><br>迁移的两种：冷迁移和热迁移。<br>冷迁移：vm关机后进行迁移，该方法适用所有vm，只要不是vm的版本不高过esxi的所支持版本，迁移后都可以正常启动<br>热迁移：vm在开机状态下进行迁移。</p><p>vmware从6.7版本开始支持跨cpu进行热迁移了，只需要开启一个叫evc的功能。（6.7以前没这个功能）<br>开启evc功能后，分intel跟amd的cpu支持热迁移。选择之后，vm使用的cpu是vmware虚拟机一层后的cpu，也就是模拟intel或者amd的cpu，这个时候cpuid 还有特性会被修改，不依赖物理主机的cpu。</p><h3 id="开启evc功能"><a href="#开启evc功能" class="headerlink" title="开启evc功能"></a>开启evc功能</h3><p>开启evc的位置有两个，一个是针对单个vm的,需要在关机状态下才能操作，开机状态无法操作，开启路径选择一台vm——配置——vmware evc —— 编辑–指定cpu，如下图：<br><img src="https://qiufuqi.github.io/img/hexo/20221104085507.png"></p><p>第二个开启evc的位置是通过群集，选择群集–配置——vmware evc —— 编辑–指定cpu，但是群集启用有要求，必须是群集里面没有开启其他系列evc的vm。 也就是说，开启的时候，会应用到群集所有vm，但是要求vm都没开启evc（如开启evc，必须是选择同一个系列的cpu，例如都选择了intel–sky 系列cpu）。<br>开启之后，vm重启后会生效evc的功能。</p><p>这里注意一点，如果把群集的evc功能关闭，群集内的vm的evc功能并不会失效，即便重启vm也不会关闭，具体原因不知道，所以建议尽量在单个vm上开启evc，最好是做镜像的时候设置，不要开启群集的evc。</p><p><strong>解决DELL 服务器安装完esxi后evc模式被禁用问题</strong><br>当我们安装完DELL服务器的esxi后，主机EVC模式出现：CPU模式 不可用（无响应）时，是因为在BIOS里面【Monitor/Mwait】功能被禁用了，需要开启。<br><img src="https://qiufuqi.github.io/img/hexo/20221104085646.png"><br>开启<br><img src="https://qiufuqi.github.io/img/hexo/20221104085658.png"></p><h3 id="开启vMotion"><a href="#开启vMotion" class="headerlink" title="开启vMotion"></a>开启vMotion</h3><p>单击主机→配置→VMkernel适配器→单击vmk0设备→编辑<br><img src="https://qiufuqi.github.io/img/hexo/20220926103544.png"><br>勾选vMotion服务，然后确定<br><img src="https://qiufuqi.github.io/img/hexo/20220926103615.png"></p><p>输入许可证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">VCSA许可证：</span><br><span class="line">VCSA7:</span><br><span class="line">JC45H-0Z292-M8808-1C0Q0-3A8H8</span><br><span class="line"></span><br><span class="line">VCSA6:</span><br><span class="line">HG612-FH19H-08DL1-V19X2-1VKND</span><br><span class="line">NU4JA-4V2DQ-48428-T32GK-8VRN4</span><br><span class="line">0Y4H2-8P217-H8900-M8AE4-2LH44</span><br><span class="line">NA658-2308J-08809-93AQ6-278J0</span><br><span class="line"></span><br><span class="line">VCSA5：</span><br><span class="line">JG6QQ-02L92-UZR39-R13Q2-120LC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXSI许可证：</span><br><span class="line">EXSI6：</span><br><span class="line">0A65P-00HD0-3Z5M1-M097M-22P7H</span><br><span class="line"></span><br><span class="line">EXSI5.5：</span><br><span class="line">UJ623-A8091-K8L4T-0P38H-8ENQ1</span><br><span class="line">4F6GR-A6K9Q-LZPC8-Z1AQ4-AA34U</span><br><span class="line"></span><br><span class="line">EXSI5.1：</span><br><span class="line">JA0XT-4W300-AZDW9-43856-8A8HL</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> vCenter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> vCenter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EXSI6.7磁盘扩容</title>
      <link href="/exsi_cipan/"/>
      <url>/exsi_cipan/</url>
      
        <content type="html"><![CDATA[<p>注意：扩容磁盘的方式分为 [添加磁盘]、[扩展磁盘] ;</p><h1 id="添加磁盘-在线增加"><a href="#添加磁盘-在线增加" class="headerlink" title="添加磁盘-在线增加"></a>添加磁盘-在线增加</h1><p>进入EXSI管理平台，看到原来的硬盘只有一块，点击 添加硬盘-新标准硬盘<br><img src="https://qiufuqi.github.io/img/hexo/20221026134042.png"></p><h2 id="确认添加状态"><a href="#确认添加状态" class="headerlink" title="确认添加状态"></a>确认添加状态</h2><p>登陆机器，查看磁盘，发现多了一块sdb<br>PS:在工作中，有时我们会遇到如下一种情况，就是在对Vmware虚拟机外部添加了一块磁盘<br>然后我们登录到Linux系统中却发现不了新的磁盘，解决方法一般有如下两种<br>1、重启Linux操作系统（对于生产环境,就不是很推荐了）<br>2、通过在Linux操作系统中，刷新扫描scsi host 设备<br>重启不提了，介绍下第二种方法:<br>刷新扫描scsi设备和，如果没有出结果，可以继续host3，host4，直到操作系统中能够识别出新添加的磁盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@qq-5201351 ~]<span class="comment"># echo &quot;- - -&quot; &gt; /sys/class/scsi_host/host0/scan</span></span><br><span class="line">[root@qq-5201351 ~]<span class="comment"># echo &quot;- - -&quot; &gt; /sys/class/scsi_host/host1/scan</span></span><br><span class="line">[root@qq-5201351 ~]<span class="comment"># echo &quot;- - -&quot; &gt; /sys/class/scsi_host/host2/scan</span></span><br></pre></td></tr></table></figure><p>刷新后一般也就出现了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新增硬盘前</span></span><br><span class="line">[root@master-node ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0  100G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   99G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0  7.9G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0 41.1G  0 lvm  /home</span><br><span class="line">sr0              11:0    1 1024M  0 rom  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增硬盘后</span></span><br><span class="line">[root@master-node ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0  100G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   99G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0  7.9G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0 41.1G  0 lvm  /home</span><br><span class="line">sdb               8:16   0   50G  0 disk </span><br><span class="line">sr0              11:0    1 1024M  0 rom</span><br></pre></td></tr></table></figure><p>或者使用fdisk确认磁盘空间是否已经扩展</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># fdisk -l</span></span><br><span class="line">Disk /dev/sda: 107.4 GB, 107374182400 bytes, 209715200 sectors</span><br><span class="line">·········</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 53.7 GB, 53687091200 bytes, 104857600 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br></pre></td></tr></table></figure><h2 id="扩展分区"><a href="#扩展分区" class="headerlink" title="扩展分区"></a>扩展分区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">Building a new DOS disklabel with disk identifier 0x7f92d23a.</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1): </span><br><span class="line">First sector (2048-104857599, default 2048): </span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-104857599, default 104857599): </span><br><span class="line">Using default value 104857599</span><br><span class="line">Partition 1 of <span class="built_in">type</span> Linux and of size 50 GiB is <span class="built_in">set</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks</span><br></pre></td></tr></table></figure><p>使用lsblk或者fdisk命令 再次查看磁盘，发现多了个sdb1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0  100G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   99G  0 part </span><br><span class="line">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0  7.9G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0 41.1G  0 lvm  /home</span><br><span class="line">sdb               8:16   0   50G  0 disk </span><br><span class="line">└─sdb1            8:17   0   50G  0 part </span><br><span class="line">sr0              11:0    1 1024M  0 rom</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者fdisk命令</span></span><br><span class="line">[root@master-node ~]<span class="comment"># fdisk -l</span></span><br><span class="line">Disk /dev/sda: 107.4 GB, 107374182400 bytes, 209715200 sectors</span><br><span class="line">·········</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 53.7 GB, 53687091200 bytes, 104857600 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x7f92d23a</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048   104857599    52427776   83  Linux</span><br></pre></td></tr></table></figure><h2 id="硬盘格式化"><a href="#硬盘格式化" class="headerlink" title="硬盘格式化"></a>硬盘格式化</h2><p>格式化硬盘，这里使用xfs格式，建议使用和系统一样的文件格式<br>可以看到/分区 【/dev/mapper/centos-root】 使用的是xfs 的文件系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># blkid</span></span><br><span class="line">/dev/sda1: UUID=<span class="string">&quot;80258da0-bb03-42f4-abaf-580ad558de6f&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/sda2: UUID=<span class="string">&quot;kWBKkc-iH5s-m1wm-56s6-3md0-eY9F-77RFpW&quot;</span> TYPE=<span class="string">&quot;LVM2_member&quot;</span> </span><br><span class="line">/dev/mapper/centos-root: UUID=<span class="string">&quot;bda3808d-ebe7-47e8-b093-47be3bad0c20&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/mapper/centos-swap: UUID=<span class="string">&quot;e1df6176-5508-49a7-8ba2-9ff25248298c&quot;</span> TYPE=<span class="string">&quot;swap&quot;</span> </span><br><span class="line">/dev/mapper/centos-home: UUID=<span class="string">&quot;30c12979-6fc4-47c0-afd8-825eca9bb0f7&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span></span><br></pre></td></tr></table></figure><p>把/dev/sdb1 格式化成 xfs文件系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># mkfs.xfs /dev/sdb1</span></span><br><span class="line">meta-data=/dev/sdb1              isize=512    agcount=4, agsize=3276736 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=13106944, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=6399, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 看到/dev/sdb1 的文件系统为 xfs</span></span><br><span class="line">[root@master-node ~]<span class="comment"># blkid</span></span><br><span class="line">/dev/sda1: UUID=<span class="string">&quot;80258da0-bb03-42f4-abaf-580ad558de6f&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/sda2: UUID=<span class="string">&quot;kWBKkc-iH5s-m1wm-56s6-3md0-eY9F-77RFpW&quot;</span> TYPE=<span class="string">&quot;LVM2_member&quot;</span> </span><br><span class="line">/dev/mapper/centos-root: UUID=<span class="string">&quot;bda3808d-ebe7-47e8-b093-47be3bad0c20&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/mapper/centos-swap: UUID=<span class="string">&quot;e1df6176-5508-49a7-8ba2-9ff25248298c&quot;</span> TYPE=<span class="string">&quot;swap&quot;</span> </span><br><span class="line">/dev/mapper/centos-home: UUID=<span class="string">&quot;30c12979-6fc4-47c0-afd8-825eca9bb0f7&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">/dev/sdb1: UUID=<span class="string">&quot;cb155145-5841-473c-980e-7571bd346a01&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Lvm扩容"><a href="#Lvm扩容" class="headerlink" title="Lvm扩容"></a>Lvm扩容</h2><p>创建pv物理卷</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># pvcreate /dev/sdb1 </span></span><br><span class="line">WARNING: xfs signature detected on /dev/sdb1 at offset 0. Wipe it? [y/n]: y</span><br><span class="line">  Wiping xfs signature on /dev/sdb1.</span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdb1&quot;</span> successfully created.</span><br></pre></td></tr></table></figure><p>查看pv物理卷，查看vg卷组名称为centos（或者使用vgdisplay）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree  </span><br><span class="line">  /dev/sda2  centos lvm2 a--  &lt;99.00g   4.00m</span><br><span class="line">  /dev/sdb1         lvm2 ---  &lt;50.00g &lt;50.00g</span><br><span class="line"></span><br><span class="line">[admin@localhost ~]$ vgs</span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree</span></span><br><span class="line">  centos   1   3   0 wz--n- &lt;59.00g    0 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用其他命令，同样vg name为centos</span></span><br><span class="line">[root@master-node ~]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  ·········</span><br><span class="line">  VG Size               &lt;99.00 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              25343</span><br><span class="line">  Alloc PE / Size       25342 / 98.99 GiB</span><br><span class="line">  Free  PE / Size       1 / 4.00 MiB</span><br><span class="line">  VG UUID               yTqRKf-eSrx-KgEe-D34S-U9vX-lhGf-UfnW2p</span><br></pre></td></tr></table></figure><p> 向vg卷组添加 pv物理卷sdb1<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># vgextend centos /dev/sdb1</span></span><br><span class="line">  Volume group <span class="string">&quot;centos&quot;</span> successfully extended</span><br></pre></td></tr></table></figure><br>可发现空闲PE，容量大约50G</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># vgs</span></span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree </span></span><br><span class="line">  centos   2   3   0 wz--n- 148.99g 50.00g</span><br><span class="line">[root@master-node ~]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  ·········</span><br><span class="line">  VG Size               148.99 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              38142</span><br><span class="line">  Alloc PE / Size       25342 / 98.99 GiB</span><br><span class="line">  Free  PE / Size       12800 / 50.00 GiB</span><br><span class="line">  VG UUID               yTqRKf-eSrx-KgEe-D34S-U9vX-lhGf-UfnW2p</span><br></pre></td></tr></table></figure><h2 id="扩展lv"><a href="#扩展lv" class="headerlink" title="扩展lv"></a>扩展lv</h2><p>通过lvs或者lvdisplay 可以看到分区的lv名称为 root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  home centos -wi-ao---- &lt;41.12g                                                    </span><br><span class="line">  root centos -wi-ao----  50.00g                                                    </span><br><span class="line">  swap centos -wi-ao----  &lt;7.88g</span><br><span class="line"></span><br><span class="line">[root@master-node ~]<span class="comment"># lvdisplay</span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/swap</span><br><span class="line">  ······</span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/home</span><br><span class="line">  ······</span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/root</span><br><span class="line">  ······</span><br></pre></td></tr></table></figure><p>我们把新扩展的50G全部添加到centos-root中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># lvextend /dev/mapper/centos-root /dev/sdb1</span></span><br><span class="line">  Size of logical volume centos/root changed from 50.00 GiB (12800 extents) to &lt;100.00 GiB (25599 extents).</span><br><span class="line">  Logical volume centos/root successfully resized.</span><br></pre></td></tr></table></figure><p>使用lvs或者lsblk可以看到空间已经增加上了，但是df-h并没有变化 可选择重启或者<strong>刷新文件系统</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize    Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  home centos -wi-ao----  &lt;41.12g                                                    </span><br><span class="line">  root centos -wi-ao---- &lt;100.00g                                                    </span><br><span class="line">  swap centos -wi-ao----   &lt;7.88g</span><br><span class="line">[root@master-node ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0  100G  0 disk </span><br><span class="line">├─sda1            8:1    0    1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   99G  0 part </span><br><span class="line">  ├─centos-root 253:0    0  100G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0  7.9G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0 41.1G  0 lvm  /home</span><br><span class="line">sdb               8:16   0   50G  0 disk </span><br><span class="line">└─sdb1            8:17   0   50G  0 part </span><br><span class="line">  └─centos-root 253:0    0  100G  0 lvm  /</span><br><span class="line">sr0              11:0    1 1024M  0 rom </span><br><span class="line">[root@master-node ~]<span class="comment"># df -klh</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root   50G  1.4G   49G   3% /</span><br><span class="line">devtmpfs                 3.9G     0  3.9G   0% /dev</span><br><span class="line">tmpfs                    3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">tmpfs                    3.9G  8.9M  3.9G   1% /run</span><br><span class="line">tmpfs                    3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               1014M  145M  870M  15% /boot</span><br><span class="line">/dev/mapper/centos-home   42G   33M   42G   1% /home</span><br><span class="line">tmpfs                    783M     0  783M   0% /run/user/0</span><br></pre></td></tr></table></figure><h2 id="刷新文件系统"><a href="#刷新文件系统" class="headerlink" title="刷新文件系统"></a>刷新文件系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># df -T</span></span><br><span class="line">Filesystem              Type     1K-blocks    Used Available Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root xfs       52403200 1417504  50985696   3% /</span><br><span class="line">devtmpfs                devtmpfs   3992520       0   3992520   0% /dev</span><br><span class="line">tmpfs                   tmpfs      4004596       0   4004596   0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs      4004596    9052   3995544   1% /run</span><br><span class="line">tmpfs                   tmpfs      4004596       0   4004596   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               xfs        1038336  148404    889932  15% /boot</span><br><span class="line">/dev/mapper/centos-home xfs       43093444   32992  43060452   1% /home</span><br><span class="line">tmpfs                   tmpfs       800920       0    800920   0% /run/user/0</span><br><span class="line">[root@master-node ~]<span class="comment"># xfs_growfs /dev/mapper/centos-root</span></span><br><span class="line">meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=3276800 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=13107200, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=6400, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 13107200 to 26213376</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增的50G磁盘已经有效</span></span><br><span class="line">[root@master-node ~]<span class="comment"># df -h</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root  100G  1.4G   99G   2% /</span><br><span class="line">devtmpfs                 3.9G     0  3.9G   0% /dev</span><br><span class="line">tmpfs                    3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">tmpfs                    3.9G  8.9M  3.9G   1% /run</span><br><span class="line">tmpfs                    3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               1014M  145M  870M  15% /boot</span><br><span class="line">/dev/mapper/centos-home   42G   33M   42G   1% /home</span><br><span class="line">tmpfs                    783M     0  783M   0% /run/user/0</span><br></pre></td></tr></table></figure><h1 id="扩展磁盘-关机增加"><a href="#扩展磁盘-关机增加" class="headerlink" title="扩展磁盘-关机增加"></a>扩展磁盘-关机增加</h1><p>扩展磁盘需要在此虚拟机停止的状态下进行，同时扩展的数字是扩展后的预期大小，比如之前是60G，希望扩展200G，那么我们应该输入200G。这里我们以扩展磁盘的方式进行。<br><img src="https://qiufuqi.github.io/img/hexo/20220920141306.png"></p><h2 id="确认添加状态-1"><a href="#确认添加状态-1" class="headerlink" title="确认添加状态"></a>确认添加状态</h2><p>扩展后，重新启动linux，使用df -kh命令发现磁盘目录大小没有变化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ <span class="built_in">df</span> -h</span><br><span class="line">Filesystem Size Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root 36G 1.6G 35G 5% /</span><br><span class="line">devtmpfs 3.9G 0 3.9G 0% /dev</span><br><span class="line">tmpfs 3.9G 0 3.9G 0% /dev/shm</span><br><span class="line">tmpfs 3.9G 8.9M 3.9G 1% /run</span><br><span class="line">tmpfs 3.9G 0 3.9G 0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1 1014M 189M 826M 19% /boot</span><br><span class="line">/dev/mapper/centos-home 18G 33M 18G 1% /home</span><br><span class="line">tmpfs 783M 0 783M 0% /run/user/0</span><br><span class="line">tmpfs 783M 0 783M 0% /run/user/1001</span><br></pre></td></tr></table></figure><p>使用fdisk确认磁盘空间是否已经扩展</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ fdisk -l</span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 214.7 GB, 214748364800 bytes, 419430400 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x0005871c</span><br><span class="line"></span><br><span class="line">Device Boot Start End Blocks Id System</span><br><span class="line">/dev/sda1 * 2048 2099199 1048576 83 Linux</span><br><span class="line">/dev/sda2 2099200 125829119 61864960 8e Linux LVM</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/centos-root: 38.2 GB, 38235275264 bytes, 74678272 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/centos-swap: 6442 MB, 6442450944 bytes, 12582912 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/centos-home: 18.7 GB, 18668847104 bytes, 36462592 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br></pre></td></tr></table></figure><p>可以看到“Disk /dev/sda: 214.7 GB”，已经扩展了140G空间。</p><h2 id="扩展分区-1"><a href="#扩展分区-1" class="headerlink" title="扩展分区"></a>扩展分区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ fdisk /dev/sda</span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain <span class="keyword">in</span> memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (2 primary, 0 extended, 2 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (3,4, default 3): </span><br><span class="line">First sector (125829120-419430399, default 125829120): </span><br><span class="line">Using default value 125829120</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (125829120-419430399, default 419430399): </span><br><span class="line">Using default value 419430399</span><br><span class="line">Partition 3 of <span class="built_in">type</span> Linux and of size 140 GiB is <span class="built_in">set</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): t</span><br><span class="line">Partition number (1-3, default 3): </span><br><span class="line">Hex code (<span class="built_in">type</span> L to list all codes): L</span><br><span class="line"></span><br><span class="line"> 0  Empty           24  NEC DOS         81  Minix / old Lin bf  Solaris        </span><br><span class="line"> 1  FAT12           27  Hidden NTFS Win 82  Linux swap / So c1  DRDOS/sec (FAT-</span><br><span class="line"> 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT-</span><br><span class="line"> 3  XENIX usr       3c  PartitionMagic  84  OS/2 hidden C:  c6  DRDOS/sec (FAT-</span><br><span class="line"> 4  FAT16 &lt;32M      40  Venix 80286     85  Linux extended  c7  Syrinx         </span><br><span class="line"> 5  Extended        41  PPC PReP Boot   86  NTFS volume <span class="built_in">set</span> da  Non-FS data    </span><br><span class="line"> 6  FAT16           42  SFS             87  NTFS volume <span class="built_in">set</span> db  CP/M / CTOS / .</span><br><span class="line"> 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux plaintext de  Dell Utility   </span><br><span class="line"> 8  AIX             4e  QNX4.x 2nd part 8e  Linux LVM       <span class="built_in">df</span>  BootIt         </span><br><span class="line"> 9  AIX bootable    4f  QNX4.x 3rd part 93  Amoeba          e1  DOS access     </span><br><span class="line"> a  OS/2 Boot Manag 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O        </span><br><span class="line"> b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor      </span><br><span class="line"> c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad hi eb  BeOS fs        </span><br><span class="line"> e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT            </span><br><span class="line"> f  W95 Extd (LBA) 54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12/16/</span><br><span class="line">10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux/PA-RISC b</span><br><span class="line">11  Hidden FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor      </span><br><span class="line">12  Compaq diagnost 5c  Priam Edisk     a9  NetBSD          f4  SpeedStor      </span><br><span class="line">14  Hidden FAT16 &lt;3 61  SpeedStor       ab  Darwin boot     f2  DOS secondary  </span><br><span class="line">16  Hidden FAT16    63  GNU HURD or Sys af  HFS / HFS+      fb  VMware VMFS    </span><br><span class="line">17  Hidden HPFS/NTF 64  Novell Netware  b7  BSDI fs         <span class="built_in">fc</span>  VMware VMKCORE </span><br><span class="line">18  AST SmartSleep  65  Novell Netware  b8  BSDI swap       fd  Linux raid auto</span><br><span class="line">1b  Hidden W95 FAT3 70  DiskSecure Mult bb  Boot Wizard hid fe  LANstep        </span><br><span class="line">1c  Hidden W95 FAT3 75  PC/IX           be  Solaris boot    ff  BBT            </span><br><span class="line">1e  Hidden W95 FAT1 80  Old Minix      </span><br><span class="line">Hex code (<span class="built_in">type</span> L to list all codes): 8e     </span><br><span class="line">Changed <span class="built_in">type</span> of partition <span class="string">&#x27;Linux&#x27;</span> to <span class="string">&#x27;Linux LVM&#x27;</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line"></span><br><span class="line">WARNING: Re-reading the partition table failed with error 16: Device or resource busy.</span><br><span class="line">The kernel still uses the old table. The new table will be used at</span><br><span class="line">the next reboot or after you run partprobe(8) or kpartx(8)</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><h2 id="加载分区表"><a href="#加载分区表" class="headerlink" title="加载分区表"></a>加载分区表</h2><p>方法一：（推荐）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># partprobe</span></span><br></pre></td></tr></table></figure><p>执行 partprobe命令用于将磁盘分区表变化信息通知内核，并请求操作系统重新加载分区表，此方法可以不用重启系统；<br>方法二：重启系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h2 id="分区确认"><a href="#分区确认" class="headerlink" title="分区确认"></a>分区确认</h2><p>通过fdisk可以看到已经添加了/dev/sda3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ fdisk -l    </span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 214.7 GB, 214748364800 bytes, 419430400 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x0005871c</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200   125829119    61864960   8e  Linux LVM</span><br><span class="line">/dev/sda3       125829120   419430399   146800640   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/centos-root: 38.2 GB, 38235275264 bytes, 74678272 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/centos-swap: 6442 MB, 6442450944 bytes, 12582912 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/centos-home: 18.7 GB, 18668847104 bytes, 36462592 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br></pre></td></tr></table></figure><h2 id="LVM扩容"><a href="#LVM扩容" class="headerlink" title="LVM扩容"></a>LVM扩容</h2><p>创建pv物理卷</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ pvcreate /dev/sda3</span><br><span class="line">Physical volume <span class="string">&quot;/dev/sda3&quot;</span> successfully created.</span><br></pre></td></tr></table></figure><p>查看pv物理卷</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master-node ~]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree  </span><br><span class="line">  /dev/sda2  centos lvm2 a--  &lt;99.00g   4.00m</span><br><span class="line">  /dev/sda3         lvm2 ---  &lt;50.00g &lt;50.00g</span><br></pre></td></tr></table></figure><p>使用vgs查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ vgs</span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree</span></span><br><span class="line">  centos   1   3   0 wz--n- &lt;59.00g    0 </span><br></pre></td></tr></table></figure><p>把sda3加入到LVM组中 注意：centos 是vg组名称，请根据具体情况填写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ vgextend centos /dev/sda3 </span><br><span class="line">  Volume group <span class="string">&quot;centos&quot;</span> successfully extended</span><br></pre></td></tr></table></figure><p>查看发现磁盘空余大约140G</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ vgs</span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree   </span></span><br><span class="line">  centos   2   3   0 wz--n- 198.99g &lt;140.00g</span><br></pre></td></tr></table></figure><h2 id="扩展lv-1"><a href="#扩展lv-1" class="headerlink" title="扩展lv"></a>扩展lv</h2><p>我们把新扩展的100G全部添加到centos-root中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ lvextend /dev/mapper/centos-root  /dev/sda3 </span><br><span class="line">  Size of logical volume centos/root changed from &lt;35.61 GiB (9116 extents) to &lt;175.61 GiB (44955 extents).</span><br><span class="line">  Logical volume centos/root successfully resized.</span><br></pre></td></tr></table></figure><p>使用lvs可以看到 centos-root 已经是140G了，但是…请继续往下看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ lvs</span><br><span class="line">  LV   VG     Attr       LSize    Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  home centos -wi-ao----  &lt;17.39g                                                    </span><br><span class="line">  root centos -wi-ao---- &lt;175.61g                                                    </span><br><span class="line">  swap centos -wi-ao----    6.00g </span><br></pre></td></tr></table></figure><p>使用df -kh查看，空间并没有变化，look down… 可选择重启或者<strong>刷新文件系统</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ <span class="built_in">df</span> -khl</span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root   36G  1.6G   35G   5% /</span><br><span class="line">devtmpfs                 3.9G     0  3.9G   0% /dev</span><br><span class="line">tmpfs                    3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">tmpfs                    3.9G  8.9M  3.9G   1% /run</span><br><span class="line">tmpfs                    3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               1014M  189M  826M  19% /boot</span><br><span class="line">/dev/mapper/centos-home   18G   33M   18G   1% /home</span><br><span class="line">tmpfs                    783M     0  783M   0% /run/user/1001</span><br></pre></td></tr></table></figure><h2 id="刷新文件系统-1"><a href="#刷新文件系统-1" class="headerlink" title="刷新文件系统"></a>刷新文件系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[admin@localhost ~]$ <span class="built_in">df</span> -T</span><br><span class="line">Filesystem              Type     1K-blocks    Used Available Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root xfs       37320904 1616800  35704104   5% /</span><br><span class="line">devtmpfs                devtmpfs   3992828       0   3992828   0% /dev</span><br><span class="line">tmpfs                   tmpfs      4004744       0   4004744   0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs      4004744    9036   3995708   1% /run</span><br><span class="line">tmpfs                   tmpfs      4004744       0   4004744   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               xfs        1038336  192612    845724  19% /boot</span><br><span class="line">/dev/mapper/centos-home xfs       18221056   33020  18188036   1% /home</span><br><span class="line">tmpfs                   tmpfs       800952       0    800952   0% /run/user/1001</span><br><span class="line">[admin@localhost ~]$ xfs_growfs /dev/mapper/centos-root </span><br><span class="line">meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=2333696 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=9334784, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=4558, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 9334784 to 46033920</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次确认df状态, 添加的100G空间已经有效</span></span><br><span class="line">[admin@localhost ~]$ <span class="built_in">df</span> -kh</span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root  176G  1.6G  175G   1% /</span><br><span class="line">devtmpfs                 3.9G     0  3.9G   0% /dev</span><br><span class="line">tmpfs                    3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">tmpfs                    3.9G  8.9M  3.9G   1% /run</span><br><span class="line">tmpfs                    3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               1014M  189M  826M  19% /boot</span><br><span class="line">/dev/mapper/centos-home   18G   33M   18G   1% /home</span><br><span class="line">tmpfs                    783M     0  783M   0% /run/user/1001</span><br></pre></td></tr></table></figure><h1 id="转移磁盘"><a href="#转移磁盘" class="headerlink" title="转移磁盘"></a>转移磁盘</h1><p>从CentOS7默认安装的/home中转移空间到根目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /backup  </span><br><span class="line"><span class="built_in">mv</span> /home/* /backup/  </span><br><span class="line">umount /home  </span><br><span class="line">lvremove /dev/centos/home  </span><br><span class="line">lvcreate -L 50G -n home centos    <span class="comment"># home目录留下50G</span></span><br><span class="line">mkfs -t xfs /dev/centos/home  </span><br><span class="line">mount /dev/centos/home /home</span><br><span class="line"><span class="built_in">mv</span> /backup/* /home/  </span><br><span class="line">lvextend -L +42G /dev/centos/root  <span class="comment"># 将新增42G到root</span></span><br><span class="line">xfs_growfs /dev/centos/root  </span><br><span class="line"><span class="built_in">rm</span> -rf /backup</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> EXSI </category>
          
          <category> 磁盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EXSI </tag>
            
            <tag> 磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S集群环境搭建</title>
      <link href="/k8s_install/"/>
      <url>/k8s_install/</url>
      
        <content type="html"><![CDATA[<p>Kuboard-Spray 是一款可以在图形界面引导下完成 Kubernetes 高可用集群离线安装的工具。</p><ul><li>开源仓库的地址：<a href="https://github.com/eip-work/kuboard-spray">Kuboard-Spray</a></li><li>环境安装地址为：<a href="https://www.kuboard.cn/install/install-k8s.html">安装参考地址</a></li></ul><p>提前关闭 SELinux 以及 防火墙。</p><h1 id="安装Kuboard-Spray"><a href="#安装Kuboard-Spray" class="headerlink" title="安装Kuboard-Spray"></a>安装Kuboard-Spray</h1><p>服务器（10.128.1.61）的最低要求为：</p><ul><li>1核2G</li><li>不少于 10G 磁盘空余空间</li><li>已经安装好 docker</li></ul><p>执行的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker run -d \</span></span><br><span class="line">  --privileged \</span><br><span class="line">  --restart=unless-stopped \</span><br><span class="line">  --name=kuboard-spray \</span><br><span class="line">  -p 80:80/tcp \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  -v ~/kuboard-spray-data:/data \</span><br><span class="line">  eipwork/kuboard-spray:latest-amd64</span><br><span class="line">  <span class="comment"># 如果抓不到这个镜像，可以尝试一下这个备用地址：</span></span><br><span class="line">  <span class="comment"># swr.cn-east-2.myhuaweicloud.com/kuboard/kuboard-spray:latest-amd64</span></span><br></pre></td></tr></table></figure><p>持久化</p><ul><li>KuboardSpray 的信息保存在容器的 /data 路径，请将其映射到一个您认为安全的地方，上面的命令中，将其映射到了 ~/kuboard-spray-data 路径；</li><li>只要此路径的内容不受损坏，重启、升级、重新安装 Kuboard-Spray，或者将数据及 Kuboard-Spray 迁移到另外一台机器上，您都可以找回到原来的信息。</li></ul><p>在浏览器打开地址 http://这台机器的IP，输入用户名 admin，默认密码 Kuboard123，即可登录 Kuboard-Spray 界面</p><h1 id="加载离线资源包"><a href="#加载离线资源包" class="headerlink" title="加载离线资源包"></a>加载离线资源包</h1><p>在 Kuboard-Spray 界面中，导航到 <strong>系统设置 –&gt; 资源包管理</strong> 界面，可以看到已经等候您多时的 Kuboard-Spray 离线资源包，如下图所示：<br><img src="https://qiufuqi.github.io/img/hexo/20220915140550.png"><br>点击 导 入 按钮，在界面的引导下完成资源包的加载。<br><img src="https://qiufuqi.github.io/img/hexo/20220915140851.png"><br>等待资源包安装成功。</p><h1 id="规划并安装集群"><a href="#规划并安装集群" class="headerlink" title="规划并安装集群"></a>规划并安装集群</h1><p>在 Kuboard-Spray 界面中，导航到 <strong>集群管理</strong> 界面，点击界面中的 <strong>添加集群安装计划</strong> 按钮，填写表单如下：</p><ul><li>集群名称： 自定义名称，本文中填写为 Yurun，此名称不可以修改；</li><li>资源包：选择前面步骤中导入的离线资源包。<br><img src="https://qiufuqi.github.io/img/hexo/20220915141432.png"></li></ul><p>点击上图对话框中的 确定 按钮后，将进入集群规划页面，在该界面中添加您每个集群节点的连接参数并设置节点的角色，如下图所示：<br><em><strong>kuboard-spray 所在机器不能当做 K8S 集群的一个节点，因为安装过程中会重启集群节点的容器引擎，这会导致 kuboard-spray 被重启掉。</strong></em><br><img src="https://qiufuqi.github.io/img/hexo/20220915144748.png"></p><ul><li>最少的节点数量是 1 个；</li><li>ETCD 节点、控制节点的总数量必须为奇数；</li><li>在全局设置 标签页，可以设置节点的通用连接参数，例如所有的节点都使用相同的 ssh 端口、用户名、密码，则共同的参数只在此处设置即可；</li><li>在节点标签页，如果该节点的角色包含 etcd 则必须填写 <strong>ETCD 成员名称</strong> 这个字段；</li></ul><p>点击上图的 <strong>保存</strong> 按钮，再点击 <strong>安装设置集群</strong> 按钮，可以启动集群的离线安装过程，如下图所示：<br><img src="https://qiufuqi.github.io/img/hexo/20220915145140.png"></p><p>耐心等待，时间可能久一点(我重复安装了几次)。成功时将显示如下页面：<br><img src="https://qiufuqi.github.io/img/hexo/20220916085215.png"></p><p>集群日志界面提示您集群已经安装成功，此时您可以返回到集群规划页面，此界面将自动切换到 访问集群 标签页，如下图所示：</p><p>界面给出了三种方式可以访问 kubernetes 集群：</p><p>在集群主节点上执行 kubectl 命令<br>获取集群的 .kubeconfig 文件<br>将集群导入到 kuboard管理界面</p><h1 id="安装多集群管理工具"><a href="#安装多集群管理工具" class="headerlink" title="安装多集群管理工具"></a>安装多集群管理工具</h1><p>Kuboard v3 <a href="https://www.kuboard.cn/install/v3/install-in-k8s.html#%E6%96%B9%E6%B3%95%E4%B8%80-%E4%BD%BF%E7%94%A8-hostpath-%E6%8F%90%E4%BE%9B%E6%8C%81%E4%B9%85%E5%8C%96">kuboard v3</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在10.128.1.62执行如下命令</span></span><br><span class="line">kubectl apply -f https://addons.kuboard.cn/kuboard/kuboard-v3.yaml</span><br><span class="line"><span class="comment"># 您也可以使用下面的指令，唯一的区别是，该指令使用华为云的镜像仓库替代 docker hub 分发 Kuboard 所需要的镜像</span></span><br><span class="line"><span class="comment"># kubectl apply -f https://addons.kuboard.cn/kuboard/kuboard-v3-swr.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行指令 watch kubectl get pods -n kuboard，等待 kuboard 名称空间中所有的 Pod 就绪</span></span><br><span class="line">[root@node1 ~]<span class="comment"># kubectl get pods -n kuboard</span></span><br><span class="line">NAME                          READY   STATUS              RESTARTS      AGE</span><br><span class="line">kuboard-etcd-bgzfk            0/1     ContainerCreating   0             4m25s</span><br><span class="line">kuboard-etcd-p87ds            0/1     ContainerCreating   0             4m25s</span><br><span class="line">kuboard-etcd-x5rm2            1/1     Running             2 (13s ago)   4m25s</span><br><span class="line">kuboard-v3-84f9bf8bfc-5mwh5   0/1     ContainerCreating   0             4m25s</span><br><span class="line">kuboard-v3-node3              1/1     Running             0             5h30m</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="http://10.128.1.62:30080/">http://10.128.1.62:30080</a><br>默认用户名: admin<br>默认密 码: Kuboard123</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> K8S </category>
          
          <category> 环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8S </tag>
            
            <tag> 集群 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rancher环境搭建</title>
      <link href="/rancher/"/>
      <url>/rancher/</url>
      
        <content type="html"><![CDATA[<p>Rancher 是为使用容器的公司打造的容器管理平台。Rancher 简化了使用 Kubernetes 的流程，开发者可以随处运行 Kubernetes（Run Kubernetes Everywhere），满足 IT 需求规范，赋能 DevOps 团队。<br>Rancher 是一个全栈式的 Kubernetes 容器管理平台，也是一个可以在任何地方都能成功运行 Kubernetes 的工具。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Rancher </category>
          
          <category> 环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8S </tag>
            
            <tag> Rancher </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装</title>
      <link href="/docker_install/"/>
      <url>/docker_install/</url>
      
        <content type="html"><![CDATA[<p>Docker环境安装（CentOS 7系统）</p><p>DockerCE 社区免费版，可永久免费使用；<br>DockerEE 企业版，功能更全，更强调安全，但需要付费使用；</p><h2 id="查看本机是否安装"><a href="#查看本机是否安装" class="headerlink" title="查看本机是否安装"></a>查看本机是否安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed|grep docker</span><br></pre></td></tr></table></figure><h2 id="移除旧版本"><a href="#移除旧版本" class="headerlink" title="移除旧版本"></a>移除旧版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker  docker-client  docker-client-latest  docker-common  docker-latest docker-latest-logrotate  docker-logrotate  docker-engine</span><br></pre></td></tr></table></figure><h2 id="配置Docker-Repository"><a href="#配置Docker-Repository" class="headerlink" title="配置Docker Repository"></a>配置Docker Repository</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils</span><br><span class="line"></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 国内ali镜像</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>默认安装stable版本，也可以安装其他版本</p><ul><li>稳定版本：stable 一般使用此版本</li><li>预发布版本：test</li><li>待发布版本：nightly<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 版本</span></span><br><span class="line">yum-config-manager --<span class="built_in">enable</span> docker-ce-nightly</span><br><span class="line">yum-config-manager --<span class="built_in">enable</span> docker-ce-test</span><br><span class="line"><span class="comment"># 不使用 版本</span></span><br><span class="line">yum-config-manager --<span class="built_in">disable</span> docker-ce-nightly</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装Docker-Engine"><a href="#安装Docker-Engine" class="headerlink" title="安装Docker Engine"></a>安装Docker Engine</h2><ul><li>安装最新版本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure></li><li>选择版本安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | <span class="built_in">sort</span> -r</span><br><span class="line">······</span><br><span class="line">docker-ce.x86_64            3:20.10.9-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:20.10.8-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:20.10.7-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:20.10.6-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:20.10.5-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64            3:20.10.4-3.el7                     docker-ce-stable</span><br><span class="line"></span><br><span class="line">yum -y install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io</span><br></pre></td></tr></table></figure></li></ul><h2 id="启动和配置"><a href="#启动和配置" class="headerlink" title="启动和配置"></a>启动和配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装Mysql</title>
      <link href="/docker_mysql/"/>
      <url>/docker_mysql/</url>
      
        <content type="html"><![CDATA[<p>Docker安装Mysql<br>前提：部署好<a href="/docker_install">docker环境</a><br>关闭selinux以及<a href="centos_firewalld">防火墙（或放行端口）</a></p><h2 id="查找Mysql镜像"><a href="#查找Mysql镜像" class="headerlink" title="查找Mysql镜像"></a>查找Mysql镜像</h2><p><a href="https://registry.hub.docker.com/">dockerHub官方地址</a><br>在上方搜索栏里输入mysql<br><img src="https://qiufuqi.github.io/img/hexo/20221011114954.png"><br>找到要拉取的镜像版本，在tag下找到版本<br><img src="https://qiufuqi.github.io/img/hexo/20221011115047.png"></p><p>或者使用命令行查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></table></figure><h2 id="拉取Mysql镜像"><a href="#拉取Mysql镜像" class="headerlink" title="拉取Mysql镜像"></a>拉取Mysql镜像</h2><p>不指定版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker pull mysql</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker pull mysql:latest</span></span><br></pre></td></tr></table></figure><p>指定版本号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker pull mysql:5.7</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker pull mysql:5.7.38</span></span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20221011115833.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">mysql        5.7.38    459651132a11   2 months ago   429MB</span><br></pre></td></tr></table></figure><h2 id="创建Mysql实例"><a href="#创建Mysql实例" class="headerlink" title="创建Mysql实例"></a>创建Mysql实例</h2><p>-v 主机目录：容器目录<br>/var/lib/mysql    (data目录)<br>/etc/mysql        (配置目录)<br>/var/log/mysql    (这个是日志目录)<br>–privileged=true 是通过root权限操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动重启可加入：--restart=always</span></span><br><span class="line">docker run -p 3306:3306 --name mysql --privileged=<span class="literal">true</span> -v /mydata/mysql/log:/var/log/mysql -v /mydata/mysql/data:/var/lib/mysql -v /mydata/mysql/conf:/etc/mysql/conf.d  -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7.38 --restart=always</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果创建时未指定--restart=always ,可通过update 命令设置:</span></span><br><span class="line">docker update --restart=always 容器名称(或者容器ID)</span><br></pre></td></tr></table></figure><p><strong>开机自启</strong><br>–restart=always<br><strong>权限提升</strong><br>–privileged=true<br>容器有root权限<br><strong>配置用户</strong><br>-e MYSQL_ROOT_PASSWORD=123456<br>设置初始化root用户的密码<br><strong>指定镜像资源</strong><br>-d mysql:5.7.38<br>-d：以后台方式运行实例<br>mysql:5.7.38：指定用这个镜像来创建运行实例</p><h2 id="查询容器状态"><a href="#查询容器状态" class="headerlink" title="查询容器状态"></a>查询容器状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># docker ps -a</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS              PORTS                                                  NAMES</span><br><span class="line">2438d6d7a495   mysql:5.7.38   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   About a minute ago   Up About a minute   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无法启动，查看日志</span></span><br><span class="line">[root@localhost /]<span class="comment"># docker logs 2438d6d7a495</span></span><br></pre></td></tr></table></figure><p>使用配置的账号密码成功连接数据库<br><img src="https://qiufuqi.github.io/img/hexo/20221011145259.png"></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Docker </category>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProxySQL+MGR读写分离</title>
      <link href="/ProxySQL_MGR/"/>
      <url>/ProxySQL_MGR/</url>
      
        <content type="html"><![CDATA[<p>ProxySQL实现MGR读写分离</p><p>实现思路：三个节点使multi-primary的方式连接，应用通过连接ProxySQL中间件，根据sql的属性（是否为select语句）来决定连接哪一个节点，一个可写节点，两个只读节点（其实三个都是可写节点，只不过通过proxysql进行了读写分离）。如果默认的可写节点挂掉的话，proxysql通过定期运行的调度器会将另一个只读节点的其中一台设为可写节点，实际主节点故障应用无感应的要求。上述的整个过程中，应用无需任何变动。应用从意识发生了故障，到连接重新指向新的主，正常提供服务，秒级别的间隔。<br>本实验前期准备：</p><ul><li><a href="ProxySQL">ProxySQL中间件</a> </li><li><a href="/mysql5.7_MGR">Mysql5.7 MGR多写模式</a></li></ul><p><img src="https://qiufuqi.github.io/img/hexo/20220909115022.png"></p><p><strong>ProxySQL实现MGR读写分离</strong> <a href="https://www.cnblogs.com/kevingrace/p/10384691.html">参考地址</a></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>四台服务器 10.128.1.51，10.128.1.52，10.128.1.53已实现mysql MGR多住模式，<a href="/mysql5.7_MGR">搭建参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 四台服务器</span></span><br><span class="line">10.128.1.44   proxy-sql</span><br><span class="line">10.128.1.41   MGR-node1 (master1)   mysql5.7</span><br><span class="line">10.128.1.42   MGR-node2 (master2)   mysql5.7</span><br><span class="line">10.128.1.43   MGR-node3 (master3)   mysql5.7</span><br></pre></td></tr></table></figure><h2 id="初始化Proxysql"><a href="#初始化Proxysql" class="headerlink" title="初始化Proxysql"></a>初始化Proxysql</h2><p>将之前的数据都删除，如果是新安装可忽略</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -h127.0.0.1 -P6032</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+-----+---------------+-------------------------------------+</span><br><span class="line">| <span class="built_in">seq</span> | name          | file                                |</span><br><span class="line">+-----+---------------+-------------------------------------+</span><br><span class="line">| 0   | main          |                                     |</span><br><span class="line">| 2   | disk          | /var/lib/proxysql/proxysql.db       |</span><br><span class="line">| 3   | stats         |                                     |</span><br><span class="line">| 4   | monitor       |                                     |</span><br><span class="line">| 5   | stats_history | /var/lib/proxysql/proxysql_stats.db |</span><br><span class="line">+-----+---------------+-------------------------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; delete from scheduler ;</span><br><span class="line">mysql&gt; delete from mysql_servers;</span><br><span class="line">mysql&gt; delete from mysql_users;</span><br><span class="line">mysql&gt; delete from mysql_query_rules;</span><br><span class="line">mysql&gt; delete from mysql_group_replication_hostgroups;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改后，加载到RUNTIME，并保存到disk</span></span><br><span class="line">mysql&gt; LOAD MYSQL VARIABLES TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL VARIABLES TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD MYSQL SERVERS TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL SERVERS TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt;  LOAD MYSQL USERS TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL USERS TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD SCHEDULER TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE SCHEDULER TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD MYSQL QUERY RULES TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL QUERY RULES TO DISK;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="建立proxysql登录账号"><a href="#建立proxysql登录账号" class="headerlink" title="建立proxysql登录账号"></a>建立proxysql登录账号</h2><p>在任意一个节点操作，会自动同步到其他节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在10.128.1.41上执行</span></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; CREATE USER <span class="string">&#x27;proxysql&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;Zxc,./123&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.07 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; GRANT ALL ON * . * TO  <span class="string">&#x27;proxysql&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.06 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create user <span class="string">&#x27;sbuser&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;Zxc,./123&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; GRANT ALL ON * . * TO <span class="string">&#x27;sbuser&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.06 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.10 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建MGR节点状态函数和试图"><a href="#创建MGR节点状态函数和试图" class="headerlink" title="创建MGR节点状态函数和试图"></a>创建MGR节点状态函数和试图</h2><p>在三个MGR任意一个节点上操作，会自动同步到其他节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">在MGR-node1节点上，创建系统视图sys.gr_member_routing_candidate_status，该视图将为ProxySQL提供组复制相关的监控状态指标。</span><br><span class="line">创建addition_to_sys.sql脚本，在MGR-node1节点执行如下语句导入MySQL即可 (在mgr-node1节点的mysql执行后，会同步到其他两个节点上)。</span><br><span class="line"></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># vi /root/addition_to_sys.sql</span></span><br><span class="line">USE sys;</span><br><span class="line">  </span><br><span class="line">DELIMITER $$</span><br><span class="line">  </span><br><span class="line">CREATE FUNCTION IFZERO(a INT, b INT)</span><br><span class="line">RETURNS INT</span><br><span class="line">DETERMINISTIC</span><br><span class="line">RETURN IF(a = 0, b, a)$$</span><br><span class="line">  </span><br><span class="line">CREATE FUNCTION LOCATE2(needle TEXT(10000), haystack TEXT(10000), offset INT)</span><br><span class="line">RETURNS INT</span><br><span class="line">DETERMINISTIC</span><br><span class="line">RETURN IFZERO(LOCATE(needle, haystack, offset), LENGTH(haystack) + 1)$$</span><br><span class="line">  </span><br><span class="line">CREATE FUNCTION GTID_NORMALIZE(g TEXT(10000))</span><br><span class="line">RETURNS TEXT(10000)</span><br><span class="line">DETERMINISTIC</span><br><span class="line">RETURN GTID_SUBTRACT(g, <span class="string">&#x27;&#x27;</span>)$$</span><br><span class="line">  </span><br><span class="line">CREATE FUNCTION GTID_COUNT(gtid_set TEXT(10000))</span><br><span class="line">RETURNS INT</span><br><span class="line">DETERMINISTIC</span><br><span class="line">BEGIN</span><br><span class="line">  DECLARE result BIGINT DEFAULT 0;</span><br><span class="line">  DECLARE colon_pos INT;</span><br><span class="line">  DECLARE next_dash_pos INT;</span><br><span class="line">  DECLARE next_colon_pos INT;</span><br><span class="line">  DECLARE next_comma_pos INT;</span><br><span class="line">  SET gtid_set = GTID_NORMALIZE(gtid_set);</span><br><span class="line">  SET colon_pos = LOCATE2(<span class="string">&#x27;:&#x27;</span>, gtid_set, 1);</span><br><span class="line">  WHILE colon_pos != LENGTH(gtid_set) + 1 DO</span><br><span class="line">     SET next_dash_pos = LOCATE2(<span class="string">&#x27;-&#x27;</span>, gtid_set, colon_pos + 1);</span><br><span class="line">     SET next_colon_pos = LOCATE2(<span class="string">&#x27;:&#x27;</span>, gtid_set, colon_pos + 1);</span><br><span class="line">     SET next_comma_pos = LOCATE2(<span class="string">&#x27;,&#x27;</span>, gtid_set, colon_pos + 1);</span><br><span class="line">     IF next_dash_pos &lt; next_colon_pos AND next_dash_pos &lt; next_comma_pos THEN</span><br><span class="line">       SET result = result +</span><br><span class="line">         SUBSTR(gtid_set, next_dash_pos + 1,</span><br><span class="line">                LEAST(next_colon_pos, next_comma_pos) - (next_dash_pos + 1)) -</span><br><span class="line">         SUBSTR(gtid_set, colon_pos + 1, next_dash_pos - (colon_pos + 1)) + 1;</span><br><span class="line">     ELSE</span><br><span class="line">       SET result = result + 1;</span><br><span class="line">     END IF;</span><br><span class="line">     SET colon_pos = next_colon_pos;</span><br><span class="line">  END WHILE;</span><br><span class="line">  RETURN result;</span><br><span class="line">END$$</span><br><span class="line">  </span><br><span class="line">CREATE FUNCTION gr_applier_queue_length()</span><br><span class="line">RETURNS INT</span><br><span class="line">DETERMINISTIC</span><br><span class="line">BEGIN</span><br><span class="line">  RETURN (SELECT sys.gtid_count( GTID_SUBTRACT( (SELECT</span><br><span class="line">Received_transaction_set FROM performance_schema.replication_connection_status</span><br><span class="line">WHERE Channel_name = <span class="string">&#x27;group_replication_applier&#x27;</span> ), (SELECT</span><br><span class="line">@@global.GTID_EXECUTED) )));</span><br><span class="line">END$$</span><br><span class="line">  </span><br><span class="line">CREATE FUNCTION gr_member_in_primary_partition()</span><br><span class="line">RETURNS VARCHAR(3)</span><br><span class="line">DETERMINISTIC</span><br><span class="line">BEGIN</span><br><span class="line">  RETURN (SELECT IF( MEMBER_STATE=<span class="string">&#x27;ONLINE&#x27;</span> AND ((SELECT COUNT(*) FROM</span><br><span class="line">performance_schema.replication_group_members WHERE MEMBER_STATE != <span class="string">&#x27;ONLINE&#x27;</span>) &gt;=</span><br><span class="line">((SELECT COUNT(*) FROM performance_schema.replication_group_members)/2) = 0),</span><br><span class="line"><span class="string">&#x27;YES&#x27;</span>, <span class="string">&#x27;NO&#x27;</span> ) FROM performance_schema.replication_group_members JOIN</span><br><span class="line">performance_schema.replication_group_member_stats USING(member_id));</span><br><span class="line">END$$</span><br><span class="line">  </span><br><span class="line">CREATE VIEW gr_member_routing_candidate_status AS SELECT</span><br><span class="line">sys.gr_member_in_primary_partition() as viable_candidate,</span><br><span class="line">IF( (SELECT (SELECT GROUP_CONCAT(variable_value) FROM</span><br><span class="line">performance_schema.global_variables WHERE variable_name IN (<span class="string">&#x27;read_only&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;super_read_only&#x27;</span>)) != <span class="string">&#x27;OFF,OFF&#x27;</span>), <span class="string">&#x27;YES&#x27;</span>, <span class="string">&#x27;NO&#x27;</span>) as read_only,</span><br><span class="line">sys.gr_applier_queue_length() as transactions_behind, Count_Transactions_in_queue as <span class="string">&#x27;transactions_to_cert&#x27;</span> from performance_schema.replication_group_member_stats;$$</span><br><span class="line">  </span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment">###########################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入addition_to_sys.sql文件</span></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uroot -p123456 &lt; /root/addition_to_sys.sql</span></span><br><span class="line"></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uroot -p123456</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; select * from sys.gr_member_routing_candidate_status;</span><br><span class="line">+------------------+-----------+---------------------+----------------------+</span><br><span class="line">| viable_candidate | read_only | transactions_behind | transactions_to_cert |</span><br><span class="line">+------------------+-----------+---------------------+----------------------+</span><br><span class="line">| YES              | NO        |                   0 |                    0 |</span><br><span class="line">+------------------+-----------+---------------------+----------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="在proxysql中添加账号"><a href="#在proxysql中添加账号" class="headerlink" title="在proxysql中添加账号"></a>在proxysql中添加账号</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -h127.0.0.1 -P6032</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; INSERT INTO MySQL_users(username,password,default_hostgroup) VALUES (<span class="string">&#x27;proxysql&#x27;</span>,<span class="string">&#x27;Zxc,./123&#x27;</span>,1);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; UPDATE global_variables SET variable_value=<span class="string">&#x27;proxysql&#x27;</span> <span class="built_in">where</span> variable_name=<span class="string">&#x27;mysql-monitor_username&#x27;</span>; </span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; UPDATE global_variables SET variable_value=<span class="string">&#x27;Zxc,./123&#x27;</span> <span class="built_in">where</span> variable_name=<span class="string">&#x27;mysql-monitor_password&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改后，加载到RUNTIME，并保存到disk</span></span><br><span class="line">mysql&gt; LOAD MYSQL SERVERS TO RUNTIME;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SAVE MYSQL SERVERS TO DISK;</span><br><span class="line">Query OK, 0 rows affected (0.31 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试能否登录数据库  报错的情况下</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h 127.0.0.1 -P6033 -e &quot;select @@hostname&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">ERROR 1045 (28000): ProxySQL Error: Access denied <span class="keyword">for</span> user <span class="string">&#x27;proxysql&#x27;</span>@<span class="string">&#x27;127.0.0.1&#x27;</span> (using password: YES)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查发现，明明用户名和密码已经修改成proxysql:proxysql了</span></span><br><span class="line">mysql&gt; select * from global_variables;</span><br><span class="line">·········</span><br><span class="line">| mysql-interfaces                                    | 0.0.0.0:6033                |</span><br><span class="line">| mysql-default_schema                                | information_schema          |</span><br><span class="line">| mysql-stacksize                                     | 1048576                     |</span><br><span class="line">| mysql-server_version                                | 5.5.30                      |</span><br><span class="line">| mysql-connect_timeout_server                        | 3000                        |</span><br><span class="line">| mysql-monitor_username                              | proxysql                    |</span><br><span class="line">| mysql-monitor_password                              | Zxc,./123                   |</span><br><span class="line">| mysql-monitor_history                               | 600000                      |</span><br><span class="line">| mysql-monitor_connect_interval                      | 60000                       |</span><br><span class="line">| mysql-monitor_ping_interval                         | 10000                       |</span><br><span class="line">·········</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决方法</span></span><br><span class="line">mysql&gt; LOAD MYSQL VARIABLES TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL VARIABLES TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD MYSQL SERVERS TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL SERVERS TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD MYSQL USERS TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL USERS TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD SCHEDULER TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE SCHEDULER TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD MYSQL QUERY RULES TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL QUERY RULES TO DISK;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次验证 因为后端三个mysql的MGR节点还没有加入到proxysql中的原因</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h 127.0.0.1 -P6033 -e &quot;select @@hostname&quot;</span></span><br><span class="line">ERROR 9001 (HY000) at line 1: Max connect <span class="built_in">timeout</span> reached <span class="keyword">while</span> reaching hostgroup 1 after 10000ms</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置proxysql"><a href="#配置proxysql" class="headerlink" title="配置proxysql"></a>配置proxysql</h2><p>添加mysql节点，并分组。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -h127.0.0.1 -P6032</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; delete from mysql_servers;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into mysql_servers (hostgroup_id, hostname, port) values(1,<span class="string">&#x27;10.128.1.41&#x27;</span>,3306);</span><br><span class="line">mysql&gt; insert into mysql_servers (hostgroup_id, hostname, port) values(1,<span class="string">&#x27;10.128.1.42&#x27;</span>,3306);</span><br><span class="line">mysql&gt; insert into mysql_servers (hostgroup_id, hostname, port) values(1,<span class="string">&#x27;10.128.1.43&#x27;</span>,3306);</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into mysql_servers (hostgroup_id, hostname, port) values(2,<span class="string">&#x27;10.128.1.41&#x27;</span>,3306);</span><br><span class="line">mysql&gt; insert into mysql_servers (hostgroup_id, hostname, port) values(2,<span class="string">&#x27;10.128.1.42&#x27;</span>,3306);</span><br><span class="line">mysql&gt; insert into mysql_servers (hostgroup_id, hostname, port) values(2,<span class="string">&#x27;10.128.1.43&#x27;</span>,3306);</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from  mysql_servers ;</span><br><span class="line">+--------------+-------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname    | port | status | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+-------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| 1            | 10.128.1.41 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.42 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.43 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.41 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.42 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.43 | 3306 | ONLINE | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">+--------------+-------------+------+--------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line"></span><br><span class="line">hostgroup_id = 1代表write group，针对我们提出的限制，这个地方只配置了一个节点；</span><br><span class="line">hostgroup_id = 2代表<span class="built_in">read</span> group，包含了MGR的所有节点,目前只是Onlinle的，等配置过scheduler后，status就会有变化 。</span><br><span class="line">  </span><br><span class="line">对于上面的hostgroup配置，默认所有的写操作会发送到hostgroup_id为1的online节点，也就是发送到写节点上。</span><br><span class="line">所有的读操作，会发送为hostgroup_id为2的online节点。</span><br><span class="line">  </span><br><span class="line">需要确认一下没有使用proxysql的读写分离规则（因为之前测试中配置了这个地方，所以需要删除，以免影响后面的测试）。</span><br><span class="line">mysql&gt; delete from mysql_query_rules;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; commit;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要将global_variables，mysql_servers、mysql_users表的信息加载到RUNTIME，更进一步加载到DISK:</span></span><br><span class="line">mysql&gt; LOAD MYSQL VARIABLES TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL VARIABLES TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD MYSQL SERVERS TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL SERVERS TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD MYSQL USERS TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL USERS TO DISK;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次验证proxysql登录</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h 127.0.0.1 -P6033 -e &quot;select @@hostname&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+------------+</span><br><span class="line">| @@hostname |</span><br><span class="line">+------------+</span><br><span class="line">| mgr-node2  |</span><br><span class="line">+------------+</span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h 127.0.0.1 -P6033 -e &quot;select @@hostname&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+------------+</span><br><span class="line">| @@hostname |</span><br><span class="line">+------------+</span><br><span class="line">| mgr-node1  |</span><br><span class="line">+------------+</span><br></pre></td></tr></table></figure><h2 id="配置scheduler"><a href="#配置scheduler" class="headerlink" title="配置scheduler"></a>配置scheduler</h2><p>首先去github下载对应脚本，<a href="https://github.com/ZzzCrazyPig/proxysql_groupreplication_checker">下载地址</a><br>共有三个脚本可供下载：</p><ul><li>proxysql_groupreplication_checker.sh：用于multi-primary模式，可以实现读写分离，以及故障切换，同一时间点多个节点可以多写；</li><li>gr_mw_mode_cheker.sh：用于multi-primary模式，可以实现读写分离，以及故障切换，不过在同一时间点只能有一个节点能写；</li><li>gr_sw_mode_checker.sh：用于single-primary模式，可以实现读写分离，以及故障切换；</li></ul><p>实验的环境是multi-primary模式，所以选择proxysql_groupreplication_checker.sh脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">百度云盘上，下载地址：https://pan.baidu.com/s/1lUzr58BSA_U7wmYwsRcvzQ</span><br><span class="line">提取密码：9rm7</span><br><span class="line"></span><br><span class="line"><span class="comment"># proxysql_groupreplication_checker.sh放到目录/var/lib/proxysql/下，并增加可以执行的权限</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># chmod a+x /var/lib/proxysql/proxysql_groupreplication_checker.sh</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># ll /var/lib/proxysql/proxysql_groupreplication_checker.sh</span></span><br><span class="line">-rwxr-xr-x. 1 root root 6081 Sep  9 15:22 /var/lib/proxysql/proxysql_groupreplication_checker.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在proxysql的scheduler表里面添加记录，加载到runtime，同时还可以持久化到磁盘:</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -h127.0.0.1 -P6032</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; INSERT INTO scheduler(<span class="built_in">id</span>,interval_ms,filename,arg1,arg2,arg3,arg4, arg5) VALUES (1,<span class="string">&#x27;10000&#x27;</span>,<span class="string">&#x27;/var/lib/proxysql/proxysql_groupreplication_checker.sh&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;/var/lib/proxysql/proxysql_groupreplication_checker.log&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from scheduler;</span><br><span class="line">+----+--------+-------------+--------------------------------------------------------+------+------+------+------+---------------------------------------------------------+---------+</span><br><span class="line">| <span class="built_in">id</span> | active | interval_ms | filename                                               | arg1 | arg2 | arg3 | arg4 | arg5                                                    | comment |</span><br><span class="line">+----+--------+-------------+--------------------------------------------------------+------+------+------+------+---------------------------------------------------------+---------+</span><br><span class="line">| 1  | 1      | 10000       | /var/lib/proxysql/proxysql_groupreplication_checker.sh | 1    | 2    | 1    | 0    | /var/lib/proxysql/proxysql_groupreplication_checker.log |         |</span><br><span class="line">+----+--------+-------------+--------------------------------------------------------+------+------+------+------+---------------------------------------------------------+---------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD SCHEDULER TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE SCHEDULER TO DISK;</span><br><span class="line"></span><br><span class="line">==============================================================================</span><br><span class="line">scheduler各column的说明：</span><br><span class="line">active : 1: <span class="built_in">enable</span> scheduler to schedule the script we provide</span><br><span class="line">interval_ms : invoke one by one <span class="keyword">in</span> cycle (eg: 5000(ms) = 5s represent every 5s invoke the script)</span><br><span class="line">filename: represent the script file path</span><br><span class="line">arg1~arg5: represent the input parameters the script received</span><br><span class="line"> </span><br><span class="line">脚本proxysql_groupreplication_checker.sh对应的参数说明如下:</span><br><span class="line">arg1 is the hostgroup_id <span class="keyword">for</span> write  可写入组</span><br><span class="line">arg2 is the hostgroup_id <span class="keyword">for</span> <span class="built_in">read</span>   可读取组</span><br><span class="line">arg3 is the number of writers we want active at the same time   同时写入组</span><br><span class="line">arg4 represents <span class="keyword">if</span> we want that the member acting <span class="keyword">for</span> writes is also candidate <span class="keyword">for</span> reads 可写的节点是否用户可读</span><br><span class="line">arg5 is the <span class="built_in">log</span> file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># schedule信息加载后，就会分析当前的环境，mysql_servers中显示出当前只有10.128.1.41是可以写的，</span></span><br><span class="line"><span class="comment"># 10.128.1.42以及10.128.1.43是用来读的。</span></span><br><span class="line">mysql&gt; select * from  mysql_servers ;</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname    | port | status       | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| 1            | 10.128.1.41 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.42 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.43 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.41 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.42 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.43 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 因为schedule的arg4，我这里设为了0，就表示可写的节点不能用于读。那我将arg4设置为1试一下：</span></span><br><span class="line">mysql&gt; update scheduler <span class="built_in">set</span> arg4=1;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD SCHEDULER TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE SCHEDULER TO DISK;</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from  mysql_servers;</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname    | port | status       | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| 1            | 10.128.1.41 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.42 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.43 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.41 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.42 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.43 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">arg4设置为1之后，10.128.1.41节点用来写的同时，也可以被用来读。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 便于下面的测试还是将arg4设为0：</span></span><br><span class="line">mysql&gt; update scheduler <span class="built_in">set</span> arg4=0;</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD SCHEDULER TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE SCHEDULER TO DISK;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 各个节点的gr_member_routing_candidate_status视图也显示了当前节点是否是正常状态的，</span></span><br><span class="line"><span class="comment"># proxysql就是读取的这个视图的信息来决定此节点是否可用。</span></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; select * from sys.gr_member_routing_candidate_status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">    viable_candidate: YES</span><br><span class="line">           read_only: NO</span><br><span class="line"> transactions_behind: 0</span><br><span class="line">transactions_to_cert: 0</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br></pre></td></tr></table></figure><h2 id="设置读写分离规则"><a href="#设置读写分离规则" class="headerlink" title="设置读写分离规则"></a>设置读写分离规则</h2><h3 id="读写分离规则配置"><a href="#读写分离规则配置" class="headerlink" title="读写分离规则配置"></a>读写分离规则配置</h3><p>查询规则有关的表有两个:mysql_query_rules和mysql_query_rules_fast_routing，后者是前者的扩展表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -P6032 -h127.0.0.1</span></span><br><span class="line">·········</span><br><span class="line"><span class="comment"># select ... for update规则的rule_id必须要小于普通的select规则的rule_id，因为ProxySQL是根据rule_id的顺序进行规则匹配的。</span></span><br><span class="line">mysql&gt; insert into mysql_query_rules (rule_id, active, match_pattern, destination_hostgroup, apply) values (3, 1,<span class="string">&quot;^SELECT&quot;</span>,2,1),(4, 1,<span class="string">&quot;^SELECT.*FOR UPDATE$&quot;</span>,1,1);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD MYSQL QUERY RULES TO RUNTIME;</span><br><span class="line">mysql&gt; SAVE MYSQL QUERY RULES TO DISK;</span><br><span class="line"></span><br><span class="line">rule_id ProxySQL是根据rule_id的顺序进行规则匹配的。</span><br><span class="line">active表示是否启用这个sql路由项，</span><br><span class="line">match_pattern的规则是基于正则表达式的，</span><br><span class="line">destination_hostgroup表示我们要将该类sql转发到哪些mysql上面去，这里我们将select转发到group 2，select <span class="keyword">for</span> update转发到group 1。</span><br><span class="line">apply为1表示该正则匹配后，将不再接受其他匹配，直接转发。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在proxysql本机或其他客户机上检查下，select 语句，一直连接的是10.128.1.42和10.128.1.43</span></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h10.128.1.44 -P6033 -e &quot;select @@hostname&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+------------+</span><br><span class="line">| @@hostname |</span><br><span class="line">+------------+</span><br><span class="line">| mgr-node2  |</span><br><span class="line">+------------+</span><br></pre></td></tr></table></figure><h3 id="验证读写分离规则"><a href="#验证读写分离规则" class="headerlink" title="验证读写分离规则"></a>验证读写分离规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h10.128.1.44 -P6033 -e &quot;select @@hostname&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+------------+</span><br><span class="line">| @@hostname |</span><br><span class="line">+------------+</span><br><span class="line">| mgr-node2  |</span><br><span class="line">+------------+</span><br><span class="line"></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h10.128.1.44 -P6033 -e &quot;select * from kaka.kaka_test&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+----+-------+</span><br><span class="line">| <span class="built_in">id</span> | name  |</span><br><span class="line">+----+-------+</span><br><span class="line">|  1 | 223   |</span><br><span class="line">|  2 | 345   |</span><br><span class="line">| 15 | 44    |</span><br><span class="line">| 22 | 444   |</span><br><span class="line">| 23 | 344   |</span><br><span class="line">| 30 | 555   |</span><br><span class="line">| 37 | rtr   |</span><br><span class="line">| 44 | dsfda |</span><br><span class="line">| 51 | dafd  |</span><br><span class="line">| 58 | adsfd |</span><br><span class="line">+----+-------+</span><br><span class="line"></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h10.128.1.44 -P6033 -e &quot;delete from kaka.kaka_test where id &gt; 25;&quot;</span></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h10.128.1.44 -P6033 -e &quot;delete from kaka.kaka_test where id=2;&quot;</span></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h10.128.1.44 -P6033 -e &quot;select * from kaka.kaka_test&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+----+------+</span><br><span class="line">| <span class="built_in">id</span> | name |</span><br><span class="line">+----+------+</span><br><span class="line">|  1 | 223  |</span><br><span class="line">| 15 | 44   |</span><br><span class="line">| 22 | 444  |</span><br><span class="line">| 23 | 344  |</span><br><span class="line">+----+------+</span><br><span class="line"></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h10.128.1.44 -P6033 -e &#x27;insert into kaka.kaka_test values(31,&quot;zhongguo&quot;),(32,&quot;xianggang&quot;),(33,&quot;taiwan&quot;);&#x27;</span></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uproxysql -pZxc,./123 -h10.128.1.44 -P6033 -e &quot;select * from kaka.kaka_test&quot;  </span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+----+-----------+</span><br><span class="line">| <span class="built_in">id</span> | name      |</span><br><span class="line">+----+-----------+</span><br><span class="line">|  1 | 223       |</span><br><span class="line">| 15 | 44        |</span><br><span class="line">| 22 | 444       |</span><br><span class="line">| 23 | 344       |</span><br><span class="line">| 31 | zhongguo  |</span><br><span class="line">| 32 | xianggang |</span><br><span class="line">| 33 | taiwan    |</span><br><span class="line">+----+-----------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后在proxysql管理端查看读写分离情况</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -P6032 -h127.0.0.1</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; select hostgroup,username,digest_text,count_star from stats_mysql_query_digest;</span><br><span class="line">+-----------+----------+----------------------------------------------------+------------+</span><br><span class="line">| hostgroup | username | digest_text                                        | count_star |</span><br><span class="line">+-----------+----------+----------------------------------------------------+------------+</span><br><span class="line">| 1         | proxysql | insert into kaka.kaka_test values(?,?),(?,?),(?,?) | 1          |</span><br><span class="line">| 1         | proxysql | insert into kevin.hah values(?,?),(?,?),(?,?)      | 1          |</span><br><span class="line">| 1         | proxysql | insert into kevin.haha values(?,?),(?,?),(?,?)     | 1          |</span><br><span class="line">| 1         | proxysql | delete from kaka.kaka_test <span class="built_in">where</span> <span class="built_in">id</span>=?              | 1          |</span><br><span class="line">| 1         | proxysql | delete from kaka.kaka_test <span class="built_in">where</span> <span class="built_in">id</span> &gt; ?            | 1          |</span><br><span class="line">| 2         | proxysql | select * from kaka.kaka_test                       | 3          |</span><br><span class="line">| 2         | proxysql | select * from kevin.haha                           | 1          |</span><br><span class="line">| 2         | proxysql | select @@hostname                                  | 4          |</span><br><span class="line">| 1         | proxysql | select @@hostname                                  | 3          |</span><br><span class="line">| 1         | proxysql | select @@version_comment <span class="built_in">limit</span> ?                   | 16         |</span><br><span class="line">+-----------+----------+----------------------------------------------------+------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from  mysql_servers;</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname    | port | status       | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| 1            | 10.128.1.41 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.42 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.43 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.41 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.42 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.43 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写操作都分配到了group1组内，即写操作分配到10.128.1.41节点上。</span></span><br><span class="line"><span class="comment"># 读操作都分配到了group2组内，即读操作分配到10.128.1.42、10.128.1.43节点上。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="设置故障应用无感应"><a href="#设置故障应用无感应" class="headerlink" title="设置故障应用无感应"></a>设置故障应用无感应</h2><p>在上面的读写分离规则中，我设置了10.128.1.41为可写节点，10.128.1.42,10.128.1.43为只读节点<br>如果此时10.128.1.41变成只读模式的话，应用能不能直接连到其它的节点进行写操作？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 现在手动将10.128.1.41变成只读模式</span></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global read_only=1;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接着观察一下mysql_servers的状态，自动将group1的10.128.1.42改成了online，group2的10.128.1.41,10.128.1.43变成online了</span></span><br><span class="line"><span class="comment"># 表示将10.128.1.42变为可写节点，其它两个节点变为只读节点了。</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -P6032 -h127.0.0.1</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; select * from  mysql_servers;</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname    | port | status       | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| 1            | 10.128.1.41 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.42 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.43 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.41 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.42 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.43 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"><span class="comment"># 可进行读写测试</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次将10.128.1.41变为可写模式后,mysql_servers也恢复过来了。</span></span><br><span class="line">[root@mgr-node1 ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global read_only=0;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -P6032 -h127.0.0.1</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; select * from  mysql_servers;</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| hostgroup_id | hostname    | port | status       | weight | compression | max_connections | max_replication_lag | use_ssl | max_latency_ms | comment |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">| 1            | 10.128.1.41 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.42 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 1            | 10.128.1.43 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.41 | 3306 | OFFLINE_SOFT | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.42 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">| 2            | 10.128.1.43 | 3306 | ONLINE       | 1      | 0           | 1000            | 0                   | 0       | 0              |         |</span><br><span class="line">+--------------+-------------+------+--------------+--------+-------------+-----------------+---------------------+---------+----------------+---------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经过测试将10.128.1.41节点停止组复制（stop group_replication）或者该节点宕机(mysql服务挂掉)后，mysql_servers表的信息也会正常的切换新的节点。<br>待10.128.1.41恢复再加入到组复制后，mysql_servers也会正常的将10.128.1.41改成online状态。</p><p>可能出现问题，所有节点都offline了的情况，查看错误日志如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># tail -f /var/lib/proxysql/proxysql.log</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="监控配置"><a href="#监控配置" class="headerlink" title="监控配置"></a>监控配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看监控配置</span></span><br><span class="line">select * from global_variables <span class="built_in">where</span> variable_name like <span class="string">&#x27;mysql-monitor%&#x27;</span>;</span><br><span class="line"><span class="comment">#检查ping</span></span><br><span class="line">select * FROM monitor.mysql_server_ping_log ORDER BY time_start_us DESC LIMIT 10;</span><br><span class="line"><span class="comment">#mysql_server_connect_log</span></span><br><span class="line">select * FROM monitor.mysql_server_connect_log ORDER BY time_start_us DESC LIMIT 6;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以修改监控时间间隔</span></span><br><span class="line">UPDATE global_variables SET variable_value=<span class="string">&#x27;2000&#x27;</span> WHERE variable_name</span><br><span class="line">IN (<span class="string">&#x27;mysql-monitor_connect_interval&#x27;</span>,<span class="string">&#x27;mysqlmonitor_ping_interval&#x27;</span>,<span class="string">&#x27;mysql-monitor_read_only_interval&#x27;</span>);</span><br></pre></td></tr></table></figure><p>到此，ProxySQL就简单实现了MGR的读写分离和主节点故障无感知环境。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 数据库 </category>
          
          <category> ProxySQL </category>
          
          <category> MGR同步 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
            <tag> ProxySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql5.7 主从同步</title>
      <link href="/mysql5.7_MS/"/>
      <url>/mysql5.7_MS/</url>
      
        <content type="html"><![CDATA[<p>系统都是CentOS7.6，MySQL版本是5.7，准备一主两从架构(基于GTID的同步,两个从库都要开启read_only=on)。<br><img src="https://qiufuqi.github.io/img/hexo/20231205134139.png"></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 三台服务器</span></span><br><span class="line">10.128.1.51   mysql-master   mysql5.7</span><br><span class="line">10.128.1.52   mysql-slave1   mysql5.7</span><br><span class="line">10.128.1.53   mysql-slave2   mysql5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了实验方便，关闭所有节点防火墙</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl stop firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭selinux</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/sysconfig/selinux</span></span><br><span class="line">SELINUX=disabled</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># setenforce 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改各个节点名称</span></span><br><span class="line">[root@localhost ~]<span class="comment"># hostnamectl set-hostname mysql-master</span></span><br><span class="line">[root@localhost ~]<span class="comment"># hostname -f</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 特别要注意一个关键点: 必须保证各个mysql节点的主机名不一致，并且能通过主机名找到各成员！</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/hosts</span></span><br><span class="line">10.128.1.51   mysql-master</span><br><span class="line">10.128.1.52   mysql-slave1</span><br><span class="line">10.128.1.53   mysql-slave2</span><br></pre></td></tr></table></figure><h2 id="节点MySQL5-7安装"><a href="#节点MySQL5-7安装" class="headerlink" title="节点MySQL5.7安装"></a>节点MySQL5.7安装</h2><p>MySQL5.7安装请参考：<a href="/centos_mysql5.7">安装步骤</a></p><h2 id="配置Mysql主从同步"><a href="#配置Mysql主从同步" class="headerlink" title="配置Mysql主从同步"></a>配置Mysql主从同步</h2><p>基于GTID的主从同步，在mysql-master 和 mysql-slave1、mysql-slave2节点上操作。</p><h3 id="主库操作"><a href="#主库操作" class="headerlink" title="主库操作"></a>主库操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1) 主数据mysql-master的操作配置</span></span><br><span class="line">[root@mysql-master ~]<span class="comment"># &gt;/etc/my.cnf</span></span><br><span class="line">[root@mysql-master ~]<span class="comment"># vi /etc/my.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">datadir = /var/lib/mysql</span><br><span class="line">socket = /var/lib/mysql/mysql.sock</span><br><span class="line">        </span><br><span class="line">symbolic-links = 0</span><br><span class="line">        </span><br><span class="line">log-error = /var/log/mysqld.log</span><br><span class="line">pid-file = /var/run/mysqld/mysqld.pid</span><br><span class="line">    </span><br><span class="line"><span class="comment">#GTID:</span></span><br><span class="line">server_id = 51</span><br><span class="line">gtid_mode = on</span><br><span class="line">enforce_gtid_consistency = on</span><br><span class="line">      </span><br><span class="line"><span class="comment">#binlog</span></span><br><span class="line">log_bin = master-bin</span><br><span class="line">log-slave-updates = 1</span><br><span class="line">binlog_format = row</span><br><span class="line">sync-master-info = 1    </span><br><span class="line">sync_binlog = 1        </span><br><span class="line">     </span><br><span class="line"><span class="comment">#relay log</span></span><br><span class="line">skip_slave_start = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置完后重启mysql</span></span><br><span class="line">[root@mysql-master ~]<span class="comment"># systemctl restart mysqld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主库执行 从库复制授权  可将ip更换为%表示所有从库都可以连，也可以指定从库IP增强安全性</span></span><br><span class="line">mysql&gt; grant replication slave,replication client on *.* to slave@<span class="string">&#x27;10.128.1.52&#x27;</span> identified by <span class="string">&quot;Zxc,./123&quot;</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.04 sec)</span><br><span class="line">mysql&gt; grant replication slave,replication client on *.* to slave@<span class="string">&#x27;10.128.1.53&#x27;</span> identified by <span class="string">&quot;Zxc,./123&quot;</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询授权信息</span></span><br><span class="line">mysql&gt; show grants <span class="keyword">for</span> slave@<span class="string">&#x27;10.128.2.52&#x27;</span>;</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Grants <span class="keyword">for</span> slave@10.128.2.52                                                |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;10.128.2.52&#x27;</span> |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库--可省略</span></span><br><span class="line">mysql&gt; CREATE DATABASE kevin CHARACTER SET utf8 COLLATE utf8_general_ci;</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use kevin;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; create table <span class="keyword">if</span> not exists haha (<span class="built_in">id</span> int(10) PRIMARY KEY AUTO_INCREMENT,name varchar(50) NOT NULL);</span><br><span class="line">Query OK, 0 rows affected (0.20 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into kevin.haha values(1,<span class="string">&quot;congcong&quot;</span>),(2,<span class="string">&quot;huihui&quot;</span>),(3,<span class="string">&quot;grace&quot;</span>); </span><br><span class="line">Query OK, 3 rows affected (0.07 sec)</span><br><span class="line">Records: 3  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="从库操作"><a href="#从库操作" class="headerlink" title="从库操作"></a>从库操作</h3><p>与主服务器配置大概一致，除了server_id不一致外，从服务器还可以在配置文件里面添加：”read_only＝on” ,使从服务器只能进行读取操作，此参数对超级用户无效，并且不会影响从服务器的复制；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从数据库mysql-slave1 (10.128.1.52，10.128.1.53)的配置操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝的服务器所以需要使server-uuid不一致</span></span><br><span class="line">[root@mysql-slave1 ~]<span class="comment"># vi /var/lib/mysql/auto.cnf</span></span><br><span class="line"></span><br><span class="line">[root@mysql-slave1 ~]<span class="comment"># &gt;/etc/my.cnf</span></span><br><span class="line">[root@mysql-slave1 ~]<span class="comment"># vi /etc/my.cnf</span></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">datadir = /var/lib/mysql</span><br><span class="line">socket = /var/lib/mysql/mysql.sock</span><br><span class="line">        </span><br><span class="line">symbolic-links = 0</span><br><span class="line">        </span><br><span class="line">log-error = /var/log/mysqld.log</span><br><span class="line">pid-file = /var/run/mysqld/mysqld.pid</span><br><span class="line">    </span><br><span class="line"><span class="comment">#GTID:  id需要修改</span></span><br><span class="line">server_id = 52</span><br><span class="line">gtid_mode = on</span><br><span class="line">enforce_gtid_consistency = on</span><br><span class="line">      </span><br><span class="line"><span class="comment">#binlog</span></span><br><span class="line">log_bin = master-bin</span><br><span class="line">log-slave-updates = 1</span><br><span class="line">binlog_format = row</span><br><span class="line">sync-master-info = 1</span><br><span class="line">sync_binlog = 1</span><br><span class="line">      </span><br><span class="line"><span class="comment">#relay log</span></span><br><span class="line">skip_slave_start = 1</span><br><span class="line">read_only = on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置完成后重启mysql</span></span><br><span class="line">[root@mysql-slave1 ~]<span class="comment"># systemctl restart mysqld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录mysql，做主从同步</span></span><br><span class="line">[root@mysql-slave1 ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行主从同步</span></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; change master to master_host=<span class="string">&#x27;10.128.1.51&#x27;</span>,master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;Zxc,./123&#x27;</span>,master_auto_position=1;</span><br><span class="line">Query OK, 0 rows affected, 2 warnings (0.21 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者 从指定日志的记录开始</span></span><br><span class="line">mysql&gt; change master to master_host=<span class="string">&#x27;10.128.1.51&#x27;</span>,master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;Zxc,./123&#x27;</span>,master_log_file=<span class="string">&#x27;mysql-bin.000417&#x27;</span>,master_log_pos=63642574;</span><br><span class="line"></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 10.128.1.51</span><br><span class="line">                  Master_User: slave</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: master-bin.000001</span><br><span class="line">          Read_Master_Log_Pos: 4930</span><br><span class="line">               Relay_Log_File: mysql-slave2-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 5145</span><br><span class="line">        Relay_Master_Log_File: master-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">............</span><br><span class="line">............ </span><br><span class="line">            Retrieved_Gtid_Set: dfdda2bb-2e59-11ed-abbe-525400891b9e:1-21</span><br><span class="line">            Executed_Gtid_Set: dfdda2bb-2e59-11ed-abbe-525400891b9e:1-21</span><br><span class="line">                Auto_Position: 1</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除slave</span></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; reset slave all;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>至此，mysql5.7 主从同步完成。</p><h2 id="日常处理"><a href="#日常处理" class="headerlink" title="日常处理"></a>日常处理</h2><p>主库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主库日志清理</span></span><br><span class="line">show binary logs;</span><br><span class="line">PURGE BINARY LOGS TO  <span class="string">&#x27;mysql-bin.033662&#x27;</span>;</span><br></pre></td></tr></table></figure><p>从库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 同步出现问题时，可跳过不重要的同步。</span></span><br><span class="line">stop slave;</span><br><span class="line"><span class="comment"># 跳过一条错误</span></span><br><span class="line"><span class="built_in">set</span> GLOBAL SQL_SLAVE_SKIP_COUNTER=1;</span><br><span class="line">start slave;</span><br><span class="line">show slave status;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 数据库 </category>
          
          <category> Mysql </category>
          
          <category> 主从同步 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
            <tag> 主从 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql日志</title>
      <link href="/mysql5.7_RZ/"/>
      <url>/mysql5.7_RZ/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.进入MySQL，开启日志选项（默认情况应该是关闭的）：</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global general_log=on;</span><br><span class="line"></span><br><span class="line">2. 查询本机MySQL执行日志保存的路径：</span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;general_log_file&#x27;</span>;</span><br><span class="line"></span><br><span class="line">3. 重启MySQL服务器：</span><br><span class="line">systemctl restart mysqld</span><br><span class="line"></span><br><span class="line">4. 查看MySQL执行日志：</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路径也就是在第2步中查询出的</span></span><br><span class="line"><span class="built_in">tail</span> -f /path/to/general_log_file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志清理</span></span><br><span class="line">show binary logs;</span><br><span class="line">PURGE BINARY LOGS TO  <span class="string">&#x27;mysql-bin.033662&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 数据库 </category>
          
          <category> Mysql </category>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProxySQL 主从读写分离</title>
      <link href="/ProxySQL_MS/"/>
      <url>/ProxySQL_MS/</url>
      
        <content type="html"><![CDATA[<p>ProxySQL实现主从读写分离<br>ProxySQL是灵活强大的MySQL代理层, 是一个能实实在在用在生产环境的MySQL中间件，可以实现读写分离，支持 Query 路由功能，支持动态指定某个 SQL 进行 cache，支持动态加载配置、故障切换和一些 SQL的过滤功能。<br>本实验前期准备：</p><ul><li><a href="ProxySQL">ProxySQL中间件</a> </li><li><a href="/mysql5.7_MS">Mysql5.7主从同步</a></li></ul><p><img src="https://qiufuqi.github.io/img/hexo/20220908102559.png"><br><strong>ProxySQL实现主从读写分离</strong> <a href="https://www.cnblogs.com/kevingrace/p/10329714.html">参考地址</a></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>四台服务器 10.128.1.51，10.128.1.52，10.128.1.53已实现mysql主从同步，<a href="/mysql5.7_MS">搭建参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 四台服务器</span></span><br><span class="line">10.128.1.44   proxy-sql</span><br><span class="line">10.128.1.51   mysql-master   mysql5.7</span><br><span class="line">10.128.1.52   mysql-slave1   mysql5.7</span><br><span class="line">10.128.1.53   mysql-slave2   mysql5.7</span><br></pre></td></tr></table></figure><h2 id="添加MySQL节点"><a href="#添加MySQL节点" class="headerlink" title="添加MySQL节点"></a>添加MySQL节点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用insert语句添加主机到mysql_servers表中，其中：hostgroup_id 为10表示写组，为20表示读组。</span></span><br><span class="line"></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -P6032 -h127.0.0.1</span></span><br><span class="line">··············</span><br><span class="line">mysql&gt; insert into mysql_servers(hostgroup_id,hostname,port) values(10,<span class="string">&#x27;10.128.1.51&#x27;</span>,3306);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into mysql_servers(hostgroup_id,hostname,port) values(10,<span class="string">&#x27;10.128.1.52&#x27;</span>,3306);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into mysql_servers(hostgroup_id,hostname,port) values(10,<span class="string">&#x27;10.128.1.53&#x27;</span>,3306);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">==========================================================================================================</span><br><span class="line">如果在插入过程中，出现报错：</span><br><span class="line">ERROR 1045 (<span class="comment">#2800): UNIQUE constraint failed: mysql_servers.hostgroup_id, mysql_servers.hostname, mysql_servers.port</span></span><br><span class="line"></span><br><span class="line">说明可能之前就已经定义了其他配置，可以清空这张表 或者 删除对应host的配置</span><br><span class="line">mysql&gt; select * from mysql_servers;</span><br><span class="line">mysql&gt; delete from mysql_servers;</span><br><span class="line">Query OK, 6 rows affected (0.000 sec)</span><br><span class="line">==========================================================================================================</span><br><span class="line"></span><br><span class="line">查看这3个节点是否插入成功，以及它们的状态。</span><br><span class="line">mysql&gt; select * from mysql_servers\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       hostgroup_id: 10</span><br><span class="line">           hostname: 10.128.1.51</span><br><span class="line">               port: 3306</span><br><span class="line">             status: ONLINE</span><br><span class="line">             weight: 1</span><br><span class="line">        compression: 0</span><br><span class="line">    max_connections: 1000</span><br><span class="line">max_replication_lag: 0</span><br><span class="line">            use_ssl: 0</span><br><span class="line">     max_latency_ms: 0</span><br><span class="line">            comment: </span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">       hostgroup_id: 10</span><br><span class="line">           hostname: 10.128.1.52</span><br><span class="line">               port: 3306</span><br><span class="line">             status: ONLINE</span><br><span class="line">             weight: 1</span><br><span class="line">        compression: 0</span><br><span class="line">    max_connections: 1000</span><br><span class="line">max_replication_lag: 0</span><br><span class="line">            use_ssl: 0</span><br><span class="line">     max_latency_ms: 0</span><br><span class="line">            comment: </span><br><span class="line">*************************** 3. row ***************************</span><br><span class="line">       hostgroup_id: 10</span><br><span class="line">           hostname: 10.128.1.53</span><br><span class="line">               port: 3306</span><br><span class="line">             status: ONLINE</span><br><span class="line">             weight: 1</span><br><span class="line">        compression: 0</span><br><span class="line">    max_connections: 1000</span><br><span class="line">max_replication_lag: 0</span><br><span class="line">            use_ssl: 0</span><br><span class="line">     max_latency_ms: 0</span><br><span class="line">            comment: </span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改后，加载到RUNTIME，并保存到disk</span></span><br><span class="line">mysql&gt; load mysql servers to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; save mysql servers to disk;</span><br><span class="line">Query OK, 0 rows affected (0.29 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="监控后端MySQL节点"><a href="#监控后端MySQL节点" class="headerlink" title="监控后端MySQL节点"></a>监控后端MySQL节点</h2><p>添加Mysql节点之后，还需要监控这些后端节点。对于后端是主从复制的环境来说，这是必须的，因为ProxySQL需要通过每个节点的read_only值来自动调整它们是属于读组还是写组。<br>首先在后端master主数据节点上创建一个用于监控的用户名(只需在master上创建即可，因为会复制到slave上)，这个用户名只需具有USAGE权限即可。如果还需要监控复制结构中slave是否严重延迟于master(这个俗语叫做”拖后腿”，术语叫做”replication lag”)，则还需具备replication client权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在mysql-master主数据库节点行执行： 10.128.1.51</span></span><br><span class="line">[root@mysql-master ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">··············</span><br><span class="line"></span><br><span class="line">mysql&gt; create user monitor@<span class="string">&#x27;10.128.1.%&#x27;</span> identified by <span class="string">&#x27;Zxc,./123&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant replication client on *.* to monitor@<span class="string">&#x27;10.128.1.%&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.06 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql-proxy代理层节点上配置监控 10.128.1.44</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -P6032 -h127.0.0.1</span></span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">set</span> mysql-monitor_username=<span class="string">&#x27;monitor&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">set</span> mysql-monitor_password=<span class="string">&#x27;Zxc,./123&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改后，加载到RUNTIME，并保存到disk</span></span><br><span class="line">mysql&gt; load mysql variables to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; save mysql variables to disk;</span><br><span class="line">Query OK, 98 rows affected (0.08 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证监控结果：ProxySQL监控模块的指标都保存在monitor库的log表中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下是连接是否正常的监控(对connect指标的监控)：</span></span><br><span class="line"><span class="comment"># 注意：可能会有很多connect_error，这是因为没有配置监控信息时的错误，配置后如果connect_error的结果为NULL则表示正常。</span></span><br><span class="line">mysql&gt; select * from mysql_server_connect_log;</span><br><span class="line">+-------------+------+------------------+-------------------------+----------------------------------------------------------------------+</span><br><span class="line">| hostname    | port | time_start_us    | connect_success_time_us | connect_error                                                        |</span><br><span class="line">+-------------+------+------------------+-------------------------+----------------------------------------------------------------------+</span><br><span class="line">| 10.128.1.51 | 3306 | 1662607613523034 | 0                       | Access denied <span class="keyword">for</span> user <span class="string">&#x27;monitor&#x27;</span>@<span class="string">&#x27;10.128.1.44&#x27;</span> (using password: YES) |</span><br><span class="line">| 10.128.1.52 | 3306 | 1662607672716630 | 0                       | Access denied <span class="keyword">for</span> user <span class="string">&#x27;monitor&#x27;</span>@<span class="string">&#x27;10.128.1.44&#x27;</span> (using password: YES) |</span><br><span class="line">| 10.128.1.53 | 3306 | 1662607673475788 | 0                       | Access denied <span class="keyword">for</span> user <span class="string">&#x27;monitor&#x27;</span>@<span class="string">&#x27;10.128.1.44&#x27;</span> (using password: YES) |</span><br><span class="line">| 10.128.1.52 | 3306 | 1662607710748387 | 5273                    | NULL                                                                 |</span><br><span class="line">| 10.128.1.53 | 3306 | 1662607711409549 | 4905                    | NULL                                                                 |</span><br><span class="line">| 10.128.1.51 | 3306 | 1662607712070635 | 5543                    | NULL                                                                 |</span><br><span class="line">+-------------+------+------------------+-------------------------+----------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下是对心跳信息的监控(对ping指标的监控)</span></span><br><span class="line">mysql&gt; select * from mysql_server_ping_log;</span><br><span class="line">+-------------+------+------------------+----------------------+----------------------------------------------------------------------+</span><br><span class="line">| hostname    | port | time_start_us    | ping_success_time_us | ping_error                                                           |</span><br><span class="line">+-------------+------+------------------+----------------------+----------------------------------------------------------------------+</span><br><span class="line">| 10.128.1.51 | 3306 | 1662607707491171 | 0                    | Access denied <span class="keyword">for</span> user <span class="string">&#x27;monitor&#x27;</span>@<span class="string">&#x27;10.128.1.44&#x27;</span> (using password: YES) |</span><br><span class="line">| 10.128.1.53 | 3306 | 1662607707595621 | 0                    | Access denied <span class="keyword">for</span> user <span class="string">&#x27;monitor&#x27;</span>@<span class="string">&#x27;10.128.1.44&#x27;</span> (using password: YES) |</span><br><span class="line">| 10.128.1.52 | 3306 | 1662607707700053 | 0                    | Access denied <span class="keyword">for</span> user <span class="string">&#x27;monitor&#x27;</span>@<span class="string">&#x27;10.128.1.44&#x27;</span> (using password: YES) |</span><br><span class="line">| 10.128.1.53 | 3306 | 1662607710806583 | 1621                 | NULL                                                                 |</span><br><span class="line">| 10.128.1.51 | 3306 | 1662607710889190 | 1627                 | NULL                                                                 |</span><br><span class="line">| 10.128.1.52 | 3306 | 1662607710971798 | 1569                 | NULL                                                                 |</span><br><span class="line">+-------------+------+------------------+----------------------+----------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># read_only日志此时也为空(正常来说，新环境配置时，这个只读日志是为空的)</span></span><br><span class="line">mysql&gt; select * from mysql_server_read_only_log;</span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># replication_lag的监控日志为空</span></span><br><span class="line">mysql&gt; select * from mysql_server_replication_lag_log;</span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定写组的id为10，读组的id为20</span></span><br><span class="line">mysql&gt; insert into mysql_replication_hostgroups values(10,20,1);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在该配置加载到RUNTIME生效之前，先查看下各mysql server所在的组。</span></span><br><span class="line">mysql&gt; select hostgroup_id,hostname,port,status,weight from mysql_servers;</span><br><span class="line">+--------------+-------------+------+--------+--------+</span><br><span class="line">| hostgroup_id | hostname    | port | status | weight |</span><br><span class="line">+--------------+-------------+------+--------+--------+</span><br><span class="line">| 10           | 10.128.1.51 | 3306 | ONLINE | 1      |</span><br><span class="line">| 10           | 10.128.1.52 | 3306 | ONLINE | 1      |</span><br><span class="line">| 10           | 10.128.1.53 | 3306 | ONLINE | 1      |</span><br><span class="line">+--------------+-------------+------+--------+--------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3个节点都在hostgroup_id=10的组中。</span></span><br><span class="line"><span class="comment"># 现在，将刚才mysql_replication_hostgroups表的修改加载到RUNTIME生效。</span></span><br><span class="line"></span><br><span class="line">mysql&gt; load mysql servers to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; save mysql servers to disk;</span><br><span class="line">Query OK, 0 rows affected (0.29 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">一加载，Monitor模块就会开始监控后端的read_only值，当监控到read_only值后，就会按照read_only的值将某些节点自动移动到读/写组。</span><br><span class="line"></span><br><span class="line">例如，此处所有节点都在<span class="built_in">id</span>=10的写组，slave1和slave2都是slave，它们的read_only=1，这两个节点将会移动到<span class="built_in">id</span>=20的组。</span><br><span class="line">如果一开始这3节点都在<span class="built_in">id</span>=20的读组，那么移动的将是Master节点，会移动到<span class="built_in">id</span>=10的写组。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 现在看结果</span></span><br><span class="line">mysql&gt; select hostgroup_id,hostname,port,status,weight from mysql_servers;</span><br><span class="line">+--------------+-------------+------+--------+--------+</span><br><span class="line">| hostgroup_id | hostname    | port | status | weight |</span><br><span class="line">+--------------+-------------+------+--------+--------+</span><br><span class="line">| 10           | 10.128.1.51 | 3306 | ONLINE | 1      |</span><br><span class="line">| 20           | 10.128.1.53 | 3306 | ONLINE | 1      |</span><br><span class="line">| 20           | 10.128.1.52 | 3306 | ONLINE | 1      |</span><br><span class="line">+--------------+-------------+------+--------+--------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from mysql_server_read_only_log;</span><br><span class="line">+-------------+------+------------------+-----------------+-----------+-------+</span><br><span class="line">| hostname    | port | time_start_us    | success_time_us | read_only | error |</span><br><span class="line">+-------------+------+------------------+-----------------+-----------+-------+</span><br><span class="line">| 10.128.1.53 | 3306 | 1662608321363430 | 2840            | 1         | NULL  |</span><br><span class="line">| 10.128.1.52 | 3306 | 1662608321382341 | 2904            | 1         | NULL  |</span><br><span class="line">| 10.128.1.51 | 3306 | 1662608321401253 | 2136            | 0         | NULL  |</span><br><span class="line">+-------------+------+------------------+-----------------+-----------+-------+</span><br></pre></td></tr></table></figure><h2 id="配置mysql-users"><a href="#配置mysql-users" class="headerlink" title="配置mysql_users"></a>配置mysql_users</h2><p><strong>本实验：未配置路由表的情况下，用户root和sqlsender都落在了group 10 组，全部拥有写入权限，可将sqlsender落在group 20组，只有用读权限，实现了不同用户读写分离。</strong></p><p>上面的所有配置都是关于后端MySQL节点的，现在可以配置关于SQL语句的，包括：发送SQL语句的用户、SQL语句的路由规则、SQL查询的缓存、SQL语句的重写等等。本小节是SQL请求所使用的用户配置，例如root用户。这要求我们需要先在后端MySQL节点添加好相关用户。这里以root和sqlsender两个用户名为例.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在mysql-master主数据库节点行执行： 10.128.1.51</span></span><br><span class="line">[root@mysql-master ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">········</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to root@<span class="string">&#x27;10.128.1.%&#x27;</span> identified by <span class="string">&#x27;Zxc,./123&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to sqlsender@<span class="string">&#x27;10.128.1.%&#x27;</span> identified by <span class="string">&#x27;Zxc,./123&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql-proxy代理层节点，配置mysql_users表，将刚才的两个用户添加到该表中。 10.128.1.44</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -P6032 -h127.0.0.1</span></span><br><span class="line">·········</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into mysql_users(username,password,default_hostgroup) values(<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;Zxc,./123&#x27;</span>,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into mysql_users(username,password,default_hostgroup) values(<span class="string">&#x27;sqlsender&#x27;</span>,<span class="string">&#x27;Zxc,./123&#x27;</span>,10);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改后，加载到RUNTIME，并保存到disk</span></span><br><span class="line">mysql&gt; load mysql <span class="built_in">users</span> to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; save mysql <span class="built_in">users</span> to disk;</span><br><span class="line">Query OK, 0 rows affected (0.14 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>mysql_users表有不少字段，最主要的三个字段为username、password和default_hostgroup：</p><ul><li> username：前端连接ProxySQL，以及ProxySQL将SQL语句路由给MySQL所使用的用户名。</li><li>password：用户名对应的密码。可以是明文密码，也可以是hash密码。如果想使用hash密码，可以先在某个MySQL节点上执行<br> select password(PASSWORD)，然后将加密结果复制到该字段。</li><li>default_hostgroup：该用户名默认的路由目标。例如，指定root用户的该字段值为10时，则使用root用户发送的SQL语句默认<br> 情况下将路由到hostgroup_id=10组中的某个节点。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询用户  只有active=1的用户才是有效的用户。</span></span><br><span class="line">transaction_persistent字段，当它的值为1时，表示事务持久化：当某连接使用该用户开启了一个事务后，</span><br><span class="line">那么在事务提交/回滚之前，所有的语句都路由到同一个组中，避免语句分散到不同组。</span><br><span class="line">在以前的版本中，默认值为0，不知道从哪个版本开始，它的默认值为1。</span><br><span class="line">我们期望的值为1，所以在继续下面的步骤之前，先查看下这个值，如果为0，则执行下面的语句修改为1。</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from mysql_users \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">              username: root</span><br><span class="line">              password: Zxc,./123</span><br><span class="line">                active: 1</span><br><span class="line">               use_ssl: 0</span><br><span class="line">     default_hostgroup: 10</span><br><span class="line">        default_schema: NULL</span><br><span class="line">         schema_locked: 0</span><br><span class="line">transaction_persistent: 1</span><br><span class="line">          fast_forward: 0</span><br><span class="line">               backend: 1</span><br><span class="line">              frontend: 1</span><br><span class="line">       max_connections: 10000</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">              username: sqlsender</span><br><span class="line">              password: Zxc,./123</span><br><span class="line">                active: 1</span><br><span class="line">               use_ssl: 0</span><br><span class="line">     default_hostgroup: 10</span><br><span class="line">        default_schema: NULL</span><br><span class="line">         schema_locked: 0</span><br><span class="line">transaction_persistent: 1</span><br><span class="line">          fast_forward: 0</span><br><span class="line">               backend: 1</span><br><span class="line">              frontend: 1</span><br><span class="line">       max_connections: 10000</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当transaction_persistent不为1时，可修改对应用户。</span></span><br><span class="line">mysql&gt; update mysql_users <span class="built_in">set</span> transaction_persistent=1 <span class="built_in">where</span> username=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.000 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt; update mysql_users <span class="built_in">set</span> transaction_persistent=1 <span class="built_in">where</span> username=<span class="string">&#x27;sqlsender&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.000 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt; load mysql <span class="built_in">users</span> to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.001 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt; save mysql <span class="built_in">users</span> to disk;</span><br><span class="line">Query OK, 0 rows affected (0.123 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用roothe和sqlsender用户测试是否能路由到默认的hostgroup_id=10，读写数据。<br>通过转发端口6033链接，链接是真正的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试root用户</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -p&#x27;Zxc,./123&#x27; -P6033 -h127.0.0.1 -e &quot;select @@server_id&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+-------------+</span><br><span class="line">| @@server_id |</span><br><span class="line">+-------------+</span><br><span class="line">|          51 |</span><br><span class="line">+-------------+</span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -p&#x27;Zxc,./123&#x27; -P6033 -h127.0.0.1 -e &quot;create database proxy_test&quot;</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -p&#x27;Zxc,./123&#x27; -P6033 -h127.0.0.1 -e &quot;show databases;&quot;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| kevin              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| proxy_test         |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测似乎sqlsender用户</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -usqlsender -p&#x27;Zxc,./123&#x27; -P6033 -h127.0.0.1 -e &#x27;drop database proxy_test;&#x27;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -usqlsender -p&#x27;Zxc,./123&#x27; -P6033 -h127.0.0.1 -e &#x27;show databases;&#x27;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| kevin              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="读写分离：配置路由规则"><a href="#读写分离：配置路由规则" class="headerlink" title="读写分离：配置路由规则"></a>读写分离：配置路由规则</h2><p><strong>在配置路由规则的情况下，mysql_query_rules的规则较mysql_replication_hostgroups优先级更高。</strong><br>查询规则有关的表有两个:mysql_query_rules和mysql_query_rules_fast_routing，后者是前者的扩展表。<br>本实验：插入两个规则，目的是将select语句分离到hostgroup_id=20的读组，但由于select语句中有一个特殊语句SELECT…FOR UPDATE它会申请写锁，所以应该路由到hostgroup_id=10的写组.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在proxysql服务器上执行</span></span><br><span class="line"><span class="comment"># select ... for update规则的rule_id必须要小于普通的select规则的rule_id，因为ProxySQL是根据rule_id的顺序进行规则匹配的。</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -P6032 -h127.0.0.1</span></span><br><span class="line">······</span><br><span class="line">mysql&gt; insert into mysql_query_rules(rule_id,active,match_digest,destination_hostgroup,apply) VALUES (1,1,<span class="string">&#x27;^SELECT.*FOR UPDATE$&#x27;</span>,10,1), (2,1,<span class="string">&#x27;^SELECT&#x27;</span>,20,1);</span><br><span class="line">Query OK, 2 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; load mysql query rules to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; save mysql query rules to disk;</span><br><span class="line">Query OK, 0 rows affected (0.20 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试下，读操作是否路由给了hostgroup_id=20的读组, 如下发现server_id为52和53的节点 (即slave从节点)在读组内</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -pZxc,./123 -P6033 -h127.0.0.1 -e &#x27;select @@server_id&#x27;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+-------------+</span><br><span class="line">| @@server_id |</span><br><span class="line">+-------------+</span><br><span class="line">|          53 |</span><br><span class="line">+-------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读操作已经路由给读组，再看看写操作。这里以事务持久化进行测试。</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -pZxc,./123 -P6033 -h127.0.0.1 -e &#x27;start transaction;select @@server_id;commit;select @@server_id;&#x27;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+-------------+</span><br><span class="line">| @@server_id |</span><br><span class="line">+-------------+</span><br><span class="line">|          51 |</span><br><span class="line">+-------------+</span><br><span class="line">+-------------+</span><br><span class="line">| @@server_id |</span><br><span class="line">+-------------+</span><br><span class="line">|          53 |</span><br><span class="line">+-------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里已经能够根据路由来分配执行的库。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果想查看路由的信息，可查询stats库中的stats_mysql_query_digest表</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -P6032 -h127.0.0.1</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; SELECT hostgroup hg, sum_time, count_star, digest_text FROM stats_mysql_query_digest ORDER BY sum_time DESC;</span><br><span class="line">+----+----------+------------+----------------------------------+</span><br><span class="line">| hg | sum_time | count_star | digest_text                      |</span><br><span class="line">+----+----------+------------+----------------------------------+</span><br><span class="line">| 10 | 48464    | 1          | create database proxy_test       |</span><br><span class="line">| 10 | 36289    | 1          | drop database proxy_test         |</span><br><span class="line">| 20 | 29303    | 12         | select @@server_id               |</span><br><span class="line">| 10 | 8506     | 2          | select @@server_id               |</span><br><span class="line">| 10 | 5571     | 1          | start transaction                |</span><br><span class="line">| 10 | 3305     | 1          | show databases                   |</span><br><span class="line">| 10 | 2682     | 1          | show databases                   |</span><br><span class="line">| 10 | 1645     | 1          | commit                           |</span><br><span class="line">| 10 | 1437     | 1          | SELECT DATABASE()                |</span><br><span class="line">| 10 | 0        | 15         | select @@version_comment <span class="built_in">limit</span> ? |</span><br><span class="line">| 10 | 0        | 2          | select @@version_comment <span class="built_in">limit</span> ? |</span><br><span class="line">+----+----------+------------+----------------------------------+</span><br></pre></td></tr></table></figure><h2 id="测试读写分离"><a href="#测试读写分离" class="headerlink" title="测试读写分离"></a>测试读写分离</h2><p>由于读写操作都记录在proxysql的stats_mysql_query_digest表内。<br>为了测试读写分离的效果，可以先清空此表中之前的记录 (即之前在实现读写分配路由配置之前的记录)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个命令是专门清空stats_mysql_query_digest表的  (使用&quot;delete from stats_mysql_query_digest&quot;  清空不掉!)</span></span><br><span class="line">mysql&gt; SELECT 1 FROM stats_mysql_query_digest_reset LIMIT 1;</span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM stats_mysql_query_digest_reset;</span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在mysql-proxy代理层节点，通过proxysql进行数据写入，并查看</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -pZxc,./123 -P6033 -h127.0.0.1 -e &#x27;select * from kevin.haha;&#x27;</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+----+----------+</span><br><span class="line">| <span class="built_in">id</span> | name     |</span><br><span class="line">+----+----------+</span><br><span class="line">|  1 | congcong |</span><br><span class="line">|  2 | huihui   |</span><br><span class="line">|  3 | grace    |</span><br><span class="line">|  4 | qiufuqi  |</span><br><span class="line">+----+----------+</span><br><span class="line"></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -pZxc,./123 -P6033 -h127.0.0.1 -e &#x27;delete from kevin.haha where id &gt; 3;&#x27;</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -pZxc,./123 -P6033 -h127.0.0.1 -e &#x27;insert into kevin.haha values(21,&quot;zhongguo&quot;),(22,&quot;xianggang&quot;),(23,&quot;taiwan&quot;);&#x27;</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -pZxc,./123 -P6033 -h127.0.0.1 -e &#x27;update kevin.haha set name=&quot;hangzhou&quot; where id=22 ;&#x27;                </span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uroot -pZxc,./123 -P6033 -h127.0.0.1 -e &#x27;select * from kevin.haha;&#x27;    </span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+----+----------+</span><br><span class="line">| <span class="built_in">id</span> | name     |</span><br><span class="line">+----+----------+</span><br><span class="line">|  1 | congcong |</span><br><span class="line">|  2 | huihui   |</span><br><span class="line">|  3 | grace    |</span><br><span class="line">| 21 | zhongguo |</span><br><span class="line">| 22 | hangzhou |</span><br><span class="line">| 23 | taiwan   |</span><br><span class="line">+----+----------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 经过查验，发现数据已经写到mysql-master主数据库上，并同步到mysql-slave1和mysql-slave2两个从数据库上了！</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在proxysql管理端查看读写分离</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment">#  mysql -uadmin -padmin -h127.0.0.1 -P6032</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; select hostgroup,username,digest_text,count_star from stats_mysql_query_digest;</span><br><span class="line">+-----------+----------+------------------------------------------------+------------+</span><br><span class="line">| hostgroup | username | digest_text                                    | count_star |</span><br><span class="line">+-----------+----------+------------------------------------------------+------------+</span><br><span class="line">| 10        | root     | insert into kevin.haha values(?,?),(?,?),(?,?) | 1          |</span><br><span class="line">| 10        | root     | delete from kevin.haha <span class="built_in">where</span> <span class="built_in">id</span> &gt; ?            | 1          |</span><br><span class="line">| 10        | root     | update kevin.haha <span class="built_in">set</span> name=? <span class="built_in">where</span> <span class="built_in">id</span>=?        | 1          |</span><br><span class="line">| 20        | root     | select * from kevin.haha                       | 3          |</span><br><span class="line">| 10        | root     | select @@version_comment <span class="built_in">limit</span> ?               | 6          |</span><br><span class="line">+-----------+----------+------------------------------------------------+------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读写分离配置是成功的，读请求是转发到group 20的读组内，写请求转发到group 10的写组内!!</span></span><br></pre></td></tr></table></figure><h2 id="ProxySQL的Web统计功能"><a href="#ProxySQL的Web统计功能" class="headerlink" title="ProxySQL的Web统计功能"></a>ProxySQL的Web统计功能</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开web功能</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -h127.0.0.1 -P6032</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; update global_variables <span class="built_in">set</span> variable_value=<span class="string">&#x27;true&#x27;</span> <span class="built_in">where</span> variable_name=<span class="string">&#x27;admin-web_enabled&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; load admin variables to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; save admin variables to disk;</span><br><span class="line">Query OK, 31 rows affected (0.11 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口和登录web界面的用户名和密码，用户名和密码与stat账户一致</span></span><br><span class="line">mysql&gt; select * from global_variables <span class="built_in">where</span> variable_name LIKE <span class="string">&#x27;admin-web%&#x27;</span> or variable_name LIKE <span class="string">&#x27;admin-stats%&#x27;</span>;</span><br><span class="line">+-----------------------------------+------------------+</span><br><span class="line">| variable_name                     | variable_value   |</span><br><span class="line">+-----------------------------------+------------------+</span><br><span class="line">| admin-stats_credentials           | statsuser:123456 |</span><br><span class="line">| admin-stats_mysql_connections     | 60               |</span><br><span class="line">| admin-stats_mysql_connection_pool | 60               |</span><br><span class="line">| admin-stats_mysql_query_cache     | 60               |</span><br><span class="line">| admin-stats_system_cpu            | 60               |</span><br><span class="line">| admin-stats_system_memory         | 60               |</span><br><span class="line">| admin-web_enabled                 | <span class="literal">true</span>             |</span><br><span class="line">| admin-web_port                    | 6080             |</span><br><span class="line">+-----------------------------------+------------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p>开放6080端口，浏览器访问<a href="http://10.128.1.44:6080/">http://10.128.1.44:6080</a> 并使用statsuser:123456登录即可查看一些统计信息。<br><img src="https://qiufuqi.github.io/img/hexo/20220908154944.png" alt="图片"></p><h2 id="scheduler定时任务"><a href="#scheduler定时任务" class="headerlink" title="scheduler定时任务"></a>scheduler定时任务</h2><p>打印proxysql状态到日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@proxy-sql ~]<span class="comment"># mkdir -p /opt/proxysql/log</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># vi /opt/proxysql/log/status.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">DATE=`<span class="built_in">date</span> <span class="string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&#123;\&quot;dateTime\&quot;:\&quot;<span class="variable">$DATE</span>\&quot;,\&quot;status\&quot;:\&quot;running\&quot;&#125;&quot;</span> &gt;&gt; /opt/proxysql/log/status_log</span><br><span class="line"></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># chmod 777 /opt/proxysql/log/status.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在proxysql插入一条scheduler (定义每分钟打印一次，即60000毫秒)</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -h127.0.0.1 -P6032</span></span><br><span class="line">·········</span><br><span class="line">mysql&gt; insert into scheduler(active,interval_ms,filename) values (1,60000,<span class="string">&#x27;/opt/proxysql/log/status.sh&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; LOAD SCHEDULER TO RUNTIME;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SAVE SCHEDULER TO DISK;</span><br><span class="line">Query OK, 0 rows affected (0.13 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志就可以看到proxysql 的运行结果了</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># tail -f /opt/proxysql/log/status_log</span></span><br><span class="line">&#123;<span class="string">&quot;dateTime&quot;</span>:<span class="string">&quot;2022-09-08 15:54:57&quot;</span>,<span class="string">&quot;status&quot;</span>:<span class="string">&quot;running&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;dateTime&quot;</span>:<span class="string">&quot;2022-09-08 15:55:57&quot;</span>,<span class="string">&quot;status&quot;</span>:<span class="string">&quot;running&quot;</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 数据库 </category>
          
          <category> ProxySQL </category>
          
          <category> 主从同步 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
            <tag> ProxySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/1/"/>
      <url>/1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Win11菜单切换</title>
      <link href="/win11_caidan/"/>
      <url>/win11_caidan/</url>
      
        <content type="html"><![CDATA[<p>安装WSL虚拟机</p><h2 id="寻找可提供的源"><a href="#寻找可提供的源" class="headerlink" title="寻找可提供的源"></a>寻找可提供的源</h2><p>输入wsl –list –online 或者执行wsl -l -o<br>管理员模式下运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Austines&gt; wsl -l -o</span><br><span class="line">以下是可安装的有效分发的列表。</span><br><span class="line">请使用“wsl --install -d &lt;分发&gt;”安装。</span><br><span class="line"></span><br><span class="line">NAME            FRIENDLY NAME</span><br><span class="line">Ubuntu          Ubuntu</span><br><span class="line">Debian          Debian GNU/Linux</span><br><span class="line">kali-linux      Kali Linux Rolling</span><br><span class="line">openSUSE-42     openSUSE Leap 42</span><br><span class="line">SLES-12         SUSE Linux Enterprise Server v12</span><br><span class="line">Ubuntu-16.04    Ubuntu 16.04 LTS</span><br><span class="line">Ubuntu-18.04    Ubuntu 18.04 LTS</span><br><span class="line">Ubuntu-20.04    Ubuntu 20.04 LTS</span><br></pre></td></tr></table></figure><h2 id="安装指定源"><a href="#安装指定源" class="headerlink" title="安装指定源"></a>安装指定源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Austines&gt; wsl --install -d Ubuntu-20.04</span><br><span class="line">正在下载: Ubuntu 20.04 LTS</span><br><span class="line">[==========================99.3%========================== ]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windown </category>
          
          <category> win11菜单 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windown </tag>
            
            <tag> win11菜单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win11菜单切换</title>
      <link href="/win11_caidan/"/>
      <url>/win11_caidan/</url>
      
        <content type="html"><![CDATA[<p>恢复Win10右键菜单的方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.Win+R运行CMD</span><br><span class="line">2.输入：reg add HKCU\Software\Classes\CLSID\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;\InprocServer32 /f /ve</span><br><span class="line">3.重启电脑​</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windown </category>
          
          <category> win11菜单 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windown </tag>
            
            <tag> win11菜单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>winserver密钥</title>
      <link href="/winserver_miyao/"/>
      <url>/winserver_miyao/</url>
      
        <content type="html"><![CDATA[<h1 id="Winserver产品密钥"><a href="#Winserver产品密钥" class="headerlink" title="Winserver产品密钥"></a>Winserver产品密钥</h1><p>win2012、win2016、win2019 安装密钥，win10企业版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># win2012</span></span><br><span class="line">BH9T4-4N7CW-67J3M-64J36-WW98Y</span><br><span class="line">78NJB-CB3WX-GWPCM-VMKG7-94QWW</span><br><span class="line"></span><br><span class="line"><span class="comment"># win2016</span></span><br><span class="line">WC2BQ-8NRM3-FDDYY-2BFGV-KHKQY</span><br><span class="line"></span><br><span class="line"><span class="comment"># win2019</span></span><br><span class="line">WMDGN-G9PQG-XVVXX-R3X43-63DFG</span><br><span class="line"></span><br><span class="line"><span class="comment"># WIN10企业版  </span></span><br><span class="line">NPPR9-FWDCX-D2C8J-H872K-2YT43</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windown </category>
          
          <category> winserver密钥 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密钥 </tag>
            
            <tag> Windown </tag>
            
            <tag> winserver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProxySQL Cluster高可用</title>
      <link href="/ProxySQL_Cluster/"/>
      <url>/ProxySQL_Cluster/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/kevingrace/p/10411457.html">https://www.cnblogs.com/kevingrace/p/10411457.html</a></p><p><a href="https://www.cnblogs.com/kevingrace/p/10384691.html">https://www.cnblogs.com/kevingrace/p/10384691.html</a></p><p>keepalived高可用<br><a href="https://www.cnblogs.com/kevingrace/p/6710136.html">https://www.cnblogs.com/kevingrace/p/6710136.html</a></p><p><a href="https://www.cnblogs.com/sawyer95/p/14203952.html">https://www.cnblogs.com/sawyer95/p/14203952.html</a></p><p><a href="https://www.cnblogs.com/kevingrace/p/10384691.html">https://www.cnblogs.com/kevingrace/p/10384691.html</a><br><a href="https://www.cnblogs.com/kevingrace/p/10329714.html">https://www.cnblogs.com/kevingrace/p/10329714.html</a> –参考</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 数据库 </category>
          
          <category> ProxySQL </category>
          
          <category> 高可用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
            <tag> ProxySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProxySQL中间件</title>
      <link href="/ProxySQL/"/>
      <url>/ProxySQL/</url>
      
        <content type="html"><![CDATA[<p>Mysql中间件–ProxySQL</p><h1 id="ProxySQL简介"><a href="#ProxySQL简介" class="headerlink" title="ProxySQL简介"></a>ProxySQL简介</h1><p>ProxySQL是基于 MySQL 的一款开源的中间件的产品，是一个灵活强大的MySQL代理层, 是一个能实实在在用在生产环境的MySQL中间件，可以实现读写分离，支持 Query 路由功能，支持动态指定某个 SQL 进行 cache，支持动态加载配置、故障切换和一些 SQL的过滤功能。<br><a href="https://www.proxysql.com/">介绍</a> <a href="https://github.com/sysown/proxysql/wiki">git地址</a></p><h1 id="ProxySQL运行机制"><a href="#ProxySQL运行机制" class="headerlink" title="ProxySQL运行机制"></a>ProxySQL运行机制</h1><p>runtime：运行中使用的配置文件<br>memory：提供用户动态修改配置文件<br>disk：将修改的配置保存到磁盘SQLit表中（即：proxysql.db）<br>config：一般不使用它（即：proxysql.cnf）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">一般，修改的配置都是在memory层。可以load到runtime，使配置在不用重启proxysql的情况下也可以生效，也可以save到disk，将对配置的修改持久化！</span><br><span class="line">+-------------------------+</span><br><span class="line">|         RUNTIME         |</span><br><span class="line">+-------------------------+</span><br><span class="line">      /|\          |</span><br><span class="line">       |           |</span><br><span class="line">  [1]  |       [2] |</span><br><span class="line">       |          \|/</span><br><span class="line">+-------------------------+</span><br><span class="line">|         MEMORY          |</span><br><span class="line">+-------------------------+ </span><br><span class="line">      /|\          |      |\</span><br><span class="line">       |           |        \</span><br><span class="line">   [3] |       [4] |         \ [5]</span><br><span class="line">       |          \|/         \</span><br><span class="line">+-------------------------+  +---------------+</span><br><span class="line">|          DISK           |  |  CONFIG FILE  |</span><br><span class="line">+-------------------------+  +---------------+</span><br><span class="line">RUNTIME层 代表的是ProxySQL当前生效的配置，包括 global_variables, mysql_servers, mysql_users, mysql_query_rules。无法直接修改这里的配置，必须要从下一层load进来。</span><br><span class="line">MEMORY层 是平时在mysql命令行修改的 main 里头配置，可以认为是SQLite数据库在内存的镜像。我们通过Set修改配置也是先修改此层的内容。</span><br><span class="line">DISK层 持久存储的那份配置，一般在$(DATADIR)/proxysql.db，在重启的时候会从硬盘里加载。 /etc/proxysql.cnf文件只在第一次初始化的时候用到，完了后，如果要修改监听端口等，还是需要在管理命令行里修改，再save到硬盘。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置往上层是 LOAD，往下层是 SAVE</span></span><br><span class="line"><span class="comment">#以下命令可用于加载或保存 users (mysql_users):</span></span><br><span class="line">[1]: LOAD MYSQL USERS TO RUNTIME / LOAD MYSQL USERS FROM MEMORY   <span class="comment">#常用。将修改后的配置(在memory层)用到实际生产</span></span><br><span class="line">[2]: SAVE MYSQL USERS TO MEMORY / SAVE MYSQL USERS FROM RUNTIME        <span class="comment">#将生产配置拉一份到memory中</span></span><br><span class="line">[3]: LOAD MYSQL USERS TO MEMORY / LOAD MYSQL USERS FROM DISK           <span class="comment">#将磁盘中持久化的配置拉一份到memory中来</span></span><br><span class="line">[4]: SAVE MYSQL USERS TO DISK /  SAVE MYSQL USERS FROM MEMORY     <span class="comment">#常用。将memoery中的配置保存到磁盘中去</span></span><br><span class="line">[5]: LOAD MYSQL USERS FROM CONFIG                                      <span class="comment">#将配置文件中的配置加载到memeory中</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下命令加载或保存servers (mysql_servers):</span></span><br><span class="line">[1]: LOAD MYSQL SERVERS TO RUNTIME  <span class="comment">#常用，让修改的配置生效</span></span><br><span class="line">[2]: SAVE MYSQL SERVERS TO MEMORY</span><br><span class="line">[3]: LOAD MYSQL SERVERS TO MEMORY</span><br><span class="line">[4]: SAVE MYSQL SERVERS TO DISK     <span class="comment">#常用，将修改的配置持久化</span></span><br><span class="line">[5]: LOAD MYSQL SERVERS FROM CONFIG</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下命令加载或保存query rules (mysql_query_rules):</span></span><br><span class="line">[1]: load mysql query rules to run    <span class="comment">#常用</span></span><br><span class="line">[2]: save mysql query rules to mem</span><br><span class="line">[3]: load mysql query rules to mem</span><br><span class="line">[4]: save mysql query rules to disk   <span class="comment">#常用</span></span><br><span class="line">[5]: load mysql query rules from config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下命令加载或保存 mysql variables (global_variables):</span></span><br><span class="line">[1]: load mysql variables to runtime</span><br><span class="line">[2]: save mysql variables to memory</span><br><span class="line">[3]: load mysql variables to memory</span><br><span class="line">[4]: save mysql variables to disk</span><br><span class="line">[5]: load mysql variables from config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下命令加载或保存admin variables (select * from global_variables where variable_name like &#x27;admin-%&#x27;):</span></span><br><span class="line">[1]: load admin variables to runtime</span><br><span class="line">[2]: save admin variables to memory</span><br><span class="line">[3]: load admin variables to memory</span><br><span class="line">[4]: save admin variables to disk</span><br><span class="line">[5]: load admin variables from config</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="ProxySQL启动加载配置"><a href="#ProxySQL启动加载配置" class="headerlink" title="ProxySQL启动加载配置"></a>ProxySQL启动加载配置</h1><p>当proxysql启动时，首先读取配置文件CONFIG FILE(/etc/proxysql.cnf)，然后从该配置文件中获取datadir，datadir中配置的是sqlite的数据目录。如果该目录存在，且sqlite数据文件存在，那么正常启动，将sqlite中的配置项读进内存，并且加载进RUNTIME，用于初始化proxysql的运行。如果datadir目录下没有sqlite的数据文件，proxysql就会使用config file中的配置来初始化proxysql，并且将这些配置保存至数据库。sqlite数据文件可以不存在，/etc/proxysql.cnf文件也可以为空，但/etc/proxysql.cnf配置文件必须存在，否则，proxysql无法启动。</p><h1 id="ProxySQL安装"><a href="#ProxySQL安装" class="headerlink" title="ProxySQL安装"></a>ProxySQL安装</h1><h2 id="YUM方式安装"><a href="#YUM方式安装" class="headerlink" title="YUM方式安装"></a>YUM方式安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为了实验方便，关闭所有节点防火墙</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl stop firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭selinux</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/sysconfig/selinux</span></span><br><span class="line">SELINUX=disabled</span><br><span class="line">[root@localhost ~]<span class="comment"># setenforce 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改名称</span></span><br><span class="line">[root@localhost ~]<span class="comment"># hostnamectl set-hostname proxy-sql</span></span><br><span class="line">[root@localhost ~]<span class="comment"># hostname -f</span></span><br><span class="line"></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># vi /etc/yum.repos.d/proxysql.repo</span></span><br><span class="line">[proxysql_repo]</span><br><span class="line">name= ProxySQL YUM repository</span><br><span class="line">baseurl=http://repo.proxysql.com/ProxySQL/proxysql-1.4.x/centos/\<span class="variable">$releasever</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://repo.proxysql.com/ProxySQL/repo_pub_key</span><br><span class="line"></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># yum clean all</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># yum makecache</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># yum -y install proxysql</span></span><br><span class="line"></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># proxysql --version</span></span><br><span class="line">ProxySQL version 1.4.16-23-gf954ef3, codename Truls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动ProxySQL   不能用systemctl enable proxysql 非本地应用</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># chkconfig proxysql on</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># systemctl start proxysql</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># systemctl status proxysql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动后会监听两个端口，</span></span><br><span class="line"><span class="comment"># 默认为6032和6033。6032端口是ProxySQL的管理端口，6033是ProxySQL对外提供服务的端口 (即连接到转发后端的真正数据库的转发端口)。</span></span><br><span class="line"><span class="comment"># admin管理接口，默认端口为6032。该端口用于查看、配置ProxySQL</span></span><br><span class="line"><span class="comment"># 接收SQL语句的接口，默认端口为6033，这个接口类似于MySQL的3306端口</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># netstat -tunlp</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:6032            0.0.0.0:*               LISTEN      4859/proxysql       </span><br><span class="line">tcp        0      0 0.0.0.0:6033            0.0.0.0:*               LISTEN      4859/proxysql</span><br></pre></td></tr></table></figure><h2 id="RPM包方式安装"><a href="#RPM包方式安装" class="headerlink" title="RPM包方式安装"></a>RPM包方式安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@proxy-sql ~]<span class="comment"># wget https://github.com/sysown/proxysql/releases/download/v1.4.8/proxysql-1.4.8-1-centos7.x86_64.rpm</span></span><br><span class="line">[root@mysql-proxy ~]<span class="comment"># rpm -ivh proxysql-1.4.8-1-centos7.x86_64.rpm --force</span></span><br><span class="line">[root@mysql-proxy ~]<span class="comment"># /etc/init.d/proxysql start</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口6033是启动了四个线程</span></span><br><span class="line">[root@mysql-proxy ~]<span class="comment"># ss -lntup|grep proxy</span></span><br><span class="line">tcp    LISTEN     0      128       *:6032                  *:*                   <span class="built_in">users</span>:((<span class="string">&quot;proxysql&quot;</span>,pid=4859,fd=23))</span><br><span class="line">tcp    LISTEN     0      128       *:6033                  *:*                   <span class="built_in">users</span>:((<span class="string">&quot;proxysql&quot;</span>,pid=4859,fd=22))</span><br><span class="line">tcp    LISTEN     0      128       *:6033                  *:*                   <span class="built_in">users</span>:((<span class="string">&quot;proxysql&quot;</span>,pid=4859,fd=21))</span><br><span class="line">tcp    LISTEN     0      128       *:6033                  *:*                   <span class="built_in">users</span>:((<span class="string">&quot;proxysql&quot;</span>,pid=4859,fd=20))</span><br><span class="line">tcp    LISTEN     0      128       *:6033                  *:*                   <span class="built_in">users</span>:((<span class="string">&quot;proxysql&quot;</span>,pid=4859,fd=19))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="ProxySQL配置"><a href="#ProxySQL配置" class="headerlink" title="ProxySQL配置"></a>ProxySQL配置</h1><p>ProxySQL配置<br>ProxySQL有配置文件/etc/proxysql.cnf和配置数据库文件/var/lib/proxysql/proxysql.db。<br>这里需要特别注意：如果存在如果存在”proxysql.db”文件(在/var/lib/proxysql目录下)，则ProxySQL服务只有在第一次启动时才会去读取proxysql.cnf文件并解析；后面启动会就不会读取proxysql.cnf文件了！<br>如果想要让proxysql.cnf文件里的配置在重启proxysql服务后生效(即想要让proxysql重启时读取并解析proxysql.cnf配置文件)，则需要先删除/var/lib/proxysql/proxysql.db数据库文件，然后再重启proxysql服务。这样就相当于初始化启动proxysql服务了，会再次生产一个纯净的proxysql.db数据库文件(如果之前配置了proxysql相关路由规则等，则就会被抹掉)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[root@proxy-sql ~]<span class="comment"># egrep -v &quot;^#|^$&quot; /etc/proxysql.cnf</span></span><br><span class="line">datadir=<span class="string">&quot;/var/lib/proxysql&quot;</span>             <span class="comment">#数据目录</span></span><br><span class="line">admin_variables=</span><br><span class="line">&#123;</span><br><span class="line">admin_credentials=<span class="string">&quot;admin:admin&quot;</span>       <span class="comment">#连接管理端的用户名与密码</span></span><br><span class="line">mysql_ifaces=<span class="string">&quot;0.0.0.0:6032&quot;</span>           <span class="comment">#管理端口，用来连接proxysql的管理数据库  不限定ip</span></span><br><span class="line">&#125;</span><br><span class="line">mysql_variables=</span><br><span class="line">&#123;</span><br><span class="line">threads=4                              <span class="comment">#指定转发端口开启的线程数量</span></span><br><span class="line">max_connections=2048</span><br><span class="line">default_query_delay=0</span><br><span class="line">default_query_timeout=36000000</span><br><span class="line">have_compress=<span class="literal">true</span></span><br><span class="line">poll_timeout=2000</span><br><span class="line">interfaces=<span class="string">&quot;0.0.0.0:6033&quot;</span>              <span class="comment">#指定转发端口，用于连接后端mysql数据库的，相当于代理作用</span></span><br><span class="line">default_schema=<span class="string">&quot;information_schema&quot;</span></span><br><span class="line">stacksize=1048576</span><br><span class="line">server_version=<span class="string">&quot;5.5.30&quot;</span>                <span class="comment">#指定后端mysql的版本</span></span><br><span class="line">connect_timeout_server=3000</span><br><span class="line">monitor_username=<span class="string">&quot;monitor&quot;</span></span><br><span class="line">monitor_password=<span class="string">&quot;monitor&quot;</span></span><br><span class="line">monitor_history=600000</span><br><span class="line">monitor_connect_interval=60000</span><br><span class="line">monitor_ping_interval=10000</span><br><span class="line">monitor_read_only_interval=1500</span><br><span class="line">monitor_read_only_timeout=500</span><br><span class="line">ping_interval_server_msec=120000</span><br><span class="line">ping_timeout_server=500</span><br><span class="line">commands_stats=<span class="literal">true</span></span><br><span class="line">sessions_sort=<span class="literal">true</span></span><br><span class="line">connect_retries_on_failure=10</span><br><span class="line">&#125;</span><br><span class="line">mysql_servers =</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line">mysql_users:</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line">mysql_query_rules:</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line">scheduler=</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line">mysql_replication_hostgroups=</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># proxysql的数据目录</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># ll /var/lib/proxysql/</span></span><br><span class="line">total 1768</span><br><span class="line">-rw-------. 1 root root  122880 Aug 27 16:02 proxysql.db</span><br><span class="line">-rw-------. 1 root root    1916 Aug 27 16:02 proxysql.log</span><br><span class="line">-rw-r--r--. 1 root root       5 Aug 27 16:02 proxysql.pid</span><br><span class="line">-rw-------. 1 root root 1679360 Sep  6 16:30 proxysql_stats.db</span><br></pre></td></tr></table></figure><h1 id="ProxySQL-Admin管理接口"><a href="#ProxySQL-Admin管理接口" class="headerlink" title="ProxySQL Admin管理接口"></a>ProxySQL Admin管理接口</h1><p>当Proxysql启动后，将监听两个端口：<br>admin管理接口，默认端口为6032。该端口用于查看、配置ProxySQL<br>接收SQL语句的接口，默认端口为6033，这个接口类似于MySQL的3306端口<br><img src="https://qiufuqi.github.io/img/hexo/20231205133859.png"></p><p>提前在服务器上安装Mysql <a href="/centos_mysql5.7">Mysql安装参考</a><br>本地使用admin管理ProxySQL(admin默认管理用户，只允许本地登录)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -uadmin -padmin -h127.0.0.1 -P6032</span></span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+-----+---------------+-------------------------------------+</span><br><span class="line">| <span class="built_in">seq</span> | name          | file                                |</span><br><span class="line">+-----+---------------+-------------------------------------+</span><br><span class="line">| 0   | main          |                                     |</span><br><span class="line">| 2   | disk          | /var/lib/proxysql/proxysql.db       |</span><br><span class="line">| 3   | stats         |                                     |</span><br><span class="line">| 4   | monitor       |                                     |</span><br><span class="line">| 5   | stats_history | /var/lib/proxysql/proxysql_stats.db |</span><br><span class="line">+-----+---------------+-------------------------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">-  main 内存配置数据库，表里存放后端db实例、用户验证、路由规则等信息。表名以 runtime_开头的表示proxysql当前运行的配置内容，</span><br><span class="line">不能通过dml语句修改，只能修改对应的不以 runtime_ 开头的（在内存）里的表，然后 LOAD 使其生效， SAVE 使其存到硬盘以供下次重启加载。</span><br><span class="line">-  disk 是持久化到硬盘的配置，sqlite数据文件。</span><br><span class="line">-  stats 是proxysql运行抓取的统计信息，包括到后端各命令的执行次数、流量、processlist、查询种类汇总/执行时间等等。</span><br><span class="line">-  monitor 库存储 monitor 模块收集的信息，主要是对后端db的健康/延迟检查。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于 ProxySQL 的配置全部保存在几个自带的库中，所以通过管理接口，可以非常方便地通过发送一些SQL命令去修改 ProxySQL 的配置。 ProxySQL 会解析通过该接口发送的某些对ProxySQL 有效的特定命令，并将其合理转换后发送给内嵌的 SQLite3 数据库引擎去运行</p><p>ProxySQL 的配置几乎都是通过管理接口来操作的，通过 Admin 管理接口，可以在线修改几乎所有的配置并使其生效。只有两个变量的配置是必须重启 ProxySQL 才能生效的，它们是：<br>mysql-threads 和 mysql-stacksize</p><h2 id="更改ProxySQL的ip和port"><a href="#更改ProxySQL的ip和port" class="headerlink" title="更改ProxySQL的ip和port"></a>更改ProxySQL的ip和port</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select @@admin-mysql_ifaces;</span><br><span class="line">+----------------------+</span><br><span class="line">| @@admin-mysql_ifaces |</span><br><span class="line">+----------------------+</span><br><span class="line">| 0.0.0.0:6032         |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改默认管理端口</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> admin-mysql_ifaces=<span class="string">&#x27;0.0.0.0:1995&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.001 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 载入到runtime层，立即生效；保存到disk层，下午重启服务也能生效。</span></span><br><span class="line">mysql&gt; load admin variables to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.002 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; save admin variables to disk;</span><br><span class="line">Query OK, 35 rows affected (0.004 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口随之改变</span></span><br><span class="line">[root@localhost proxysql]<span class="comment"># ss -antl</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果ip配置为0.0.0.0表示不限制ip，但是出于安全考虑，admin用户无论怎么设置都只能在本机登录!!!</p><h2 id="ProxySQL新增管理用户"><a href="#ProxySQL新增管理用户" class="headerlink" title="ProxySQL新增管理用户"></a>ProxySQL新增管理用户</h2><p>admin-admin_credentials 变量控制的是admin管理接口的管理员账户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询用户</span></span><br><span class="line">mysql&gt; select @@admin-admin_credentials;</span><br><span class="line">+---------------------------+</span><br><span class="line">| @@admin-admin_credentials |</span><br><span class="line">+---------------------------+</span><br><span class="line">| admin:admin               |</span><br><span class="line">+---------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增用户</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> admin-admin_credentials=<span class="string">&quot;admin:admin;testuser:123456&quot;</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">mysql&gt; update global_variables <span class="built_in">set</span> variable_value = <span class="string">&#x27;admin:admin;testuser:123456&#x27;</span> <span class="built_in">where</span> variable_name = <span class="string">&#x27;admin-admin_credentials&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.002 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select @@admin-admin_credentials;</span><br><span class="line">+-----------------------------+</span><br><span class="line">| @@admin-admin_credentials   |</span><br><span class="line">+-----------------------------+</span><br><span class="line">| admin:admin;testuser:123456 |</span><br><span class="line">+-----------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 载入到runtime层，立即生效；保存到disk层，下午重启服务也能生效。</span></span><br><span class="line">mysql&gt; load admin variables to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; save admin variables to disk;</span><br><span class="line">Query OK, 31 rows affected (0.09 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证登录 成功登录</span></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -utestuser -p123456 -h127.0.0.1 -P6032</span></span><br></pre></td></tr></table></figure><h2 id="ProxySQL新增普通用户"><a href="#ProxySQL新增普通用户" class="headerlink" title="ProxySQL新增普通用户"></a>ProxySQL新增普通用户</h2><p>admin-stats_credentials变量控制admin管理接口的普通用户，这个变量中的用户没有超级管理员权限，只能查看monitor库和main库中关于统计的数据，其它库都是不可见的，且没有任何写权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql&gt; select @@admin-state_credentials;</span><br><span class="line">Empty <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加新的普通用户</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> admin-stats_credentials=<span class="string">&#x27;statsuser:123456&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">mysql&gt; update global_variables <span class="built_in">set</span> variable_value = <span class="string">&#x27;statsuser:123456&#x27;</span> <span class="built_in">where</span> variable_name = <span class="string">&#x27;admin-stats_credentials&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.002 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新配置文件</span></span><br><span class="line">mysql&gt; load admin variables to runtime;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; save admin variables to disk;</span><br><span class="line">Query OK, 31 rows affected (0.07 sec)</span><br><span class="line"></span><br><span class="line">[root@proxy-sql ~]<span class="comment"># mysql -ustatsuser -p123456 -h127.0.0.1 -P6032</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+-----+---------------+-------------------------------------+</span><br><span class="line">| <span class="built_in">seq</span> | name          | file                                |</span><br><span class="line">+-----+---------------+-------------------------------------+</span><br><span class="line">| 0   | main          |                                     |</span><br><span class="line">| 2   | monitor       |                                     |</span><br><span class="line">| 3   | stats_history | /var/lib/proxysql/proxysql_stats.db |</span><br><span class="line">+-----+---------------+-------------------------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 数据库 </category>
          
          <category> ProxySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
            <tag> ProxySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KVM虚拟化系统克隆</title>
      <link href="/kvm_system_clone/"/>
      <url>/kvm_system_clone/</url>
      
        <content type="html"><![CDATA[<p>本次克隆虚拟机：<br>配置文件：/etc/libvirt/qemu/qiufuqi.xml<br>镜像文件：/home/qiufuqi.qcow2</p><p>KVM虚拟化系统克隆分为2种方式：</p><h2 id="本机虚拟机直接克隆"><a href="#本机虚拟机直接克隆" class="headerlink" title="本机虚拟机直接克隆"></a>本机虚拟机直接克隆</h2><h3 id="关闭虚拟机"><a href="#关闭虚拟机" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh shutdown qiufuqi</span></span><br></pre></td></tr></table></figure><h3 id="开始克隆"><a href="#开始克隆" class="headerlink" title="开始克隆"></a>开始克隆</h3><p>以qiufuqi做为源，克隆qiufuqi虚拟机，并创建名称为qiufuqi1虚拟机，使用磁盘文件/home/qiufuqi1.qcow2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-clone -o qiufuqi -n qiufuqi1 -f /home/qiufuqi1.qcow2</span><br></pre></td></tr></table></figure><h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><p>启动虚拟机并配置主机名，IP地址等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入虚拟机，修改ip (不能和原来的冲突)</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/sysconfig/network-scripts/ifcfg-ens3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启网络</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><h2 id="复制配置文件与磁盘文件"><a href="#复制配置文件与磁盘文件" class="headerlink" title="复制配置文件与磁盘文件"></a>复制配置文件与磁盘文件</h2><p>本克隆方式适用于异机的静态迁移</p><h3 id="关闭虚拟机-1"><a href="#关闭虚拟机-1" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh shutdown qiufuqi</span></span><br></pre></td></tr></table></figure><h3 id="导出配置文件"><a href="#导出配置文件" class="headerlink" title="导出配置文件"></a>导出配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh dumpxml qiufuqi &gt; /etc/libvirt/qemu/qiufuqi2.xml</span></span><br></pre></td></tr></table></figure><h3 id="克隆虚拟机磁盘文件"><a href="#克隆虚拟机磁盘文件" class="headerlink" title="克隆虚拟机磁盘文件"></a>克隆虚拟机磁盘文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 home]<span class="comment"># cp /home/qiufuqi.qcow2 /home/qiufuqi2.qcow2</span></span><br></pre></td></tr></table></figure><h3 id="编辑修改配置文件"><a href="#编辑修改配置文件" class="headerlink" title="编辑修改配置文件"></a>编辑修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改name,uuid,disk位置,vnc端口</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># vi qiufuqi2.xml</span></span><br></pre></td></tr></table></figure><h3 id="定义虚拟机配置文件"><a href="#定义虚拟机配置文件" class="headerlink" title="定义虚拟机配置文件"></a>定义虚拟机配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh define qiufuqi2.xml</span></span><br></pre></td></tr></table></figure><h3 id="启动虚拟机-1"><a href="#启动虚拟机-1" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><p>启动虚拟机并配置主机名，IP地址等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入虚拟机，修改ip (不能和原来的冲突)</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/sysconfig/network-scripts/ifcfg-ens3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启网络</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart network</span></span><br></pre></td></tr></table></figure><h2 id="克隆完毕"><a href="#克隆完毕" class="headerlink" title="克隆完毕"></a>克隆完毕</h2><p>至此，通过两种方式进行KVM虚拟机克隆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh list --all</span></span><br><span class="line"> Id    名称                         状态</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> 20    qiufuqi1                       running</span><br><span class="line"> 21    qiufuqi2                       running</span><br><span class="line"> -     qiufuqi                        关闭</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 虚拟化 </category>
          
          <category> 克隆 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KVM </tag>
            
            <tag> System </tag>
            
            <tag> 克隆 </tag>
            
            <tag> clone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KVM虚拟化安装系统</title>
      <link href="/kvm_system_install/"/>
      <url>/kvm_system_install/</url>
      
        <content type="html"><![CDATA[<p>Linux环境部署KVM虚拟化平台，系统版本centos7.6，GUI桌面以及虚拟化支持（安装时）。</p><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>一般来说，KVM安装虚拟机有多种方式。</p><h2 id="操作页面安装"><a href="#操作页面安装" class="headerlink" title="操作页面安装"></a>操作页面安装</h2><h3 id="打开管理工具"><a href="#打开管理工具" class="headerlink" title="打开管理工具"></a>打开管理工具</h3><p>在host机的终端，执行 # virt-manager 命令。稍等一会儿，会打开kvm，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># virt-manager</span></span><br><span class="line">[root@node1 ~]<span class="comment"># libGL error: No matching fbConfigs or visuals found</span></span><br><span class="line">libGL error: failed to load driver: swrast</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20231205141742.png"></p><h3 id="点击新建虚拟机"><a href="#点击新建虚拟机" class="headerlink" title="点击新建虚拟机"></a>点击新建虚拟机</h3><p>点击 文件 =&gt; 新建虚拟机 =&gt; 选择本地安装介质 =&gt; 使用ISO镜像 =&gt; 点击浏览<br><img src="https://qiufuqi.github.io/img/hexo/20231205141814.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231205141703.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220818110828.png"></p><h3 id="选择镜像"><a href="#选择镜像" class="headerlink" title="选择镜像"></a>选择镜像</h3><p>可以提前创建文件夹并上传镜像 =&gt; 设置虚拟机配置 =&gt; 设置虚拟机存放位置 =&gt; 点击管理 =&gt; 创建虚拟磁盘<br><img src="https://qiufuqi.github.io/img/hexo/20220818111100.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220818111241.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220818111445.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220818111628.png"></p><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><p>创建虚拟机 =&gt; 名称 &amp;&amp; 网络（网桥单独介绍） 自定义配置要选择 =&gt; 更改协议如图 =&gt; 开始安装<br><img src="https://qiufuqi.github.io/img/hexo/20220818111804.png"><br><img src="https://qiufuqi.github.io/img/hexo/20220818112017.png"></p><h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><p>系统安装流程参考之前文档</p><h3 id="安装问题"><a href="#安装问题" class="headerlink" title="安装问题"></a>安装问题</h3><h4 id="鼠标无法捕捉"><a href="#鼠标无法捕捉" class="headerlink" title="鼠标无法捕捉"></a>鼠标无法捕捉</h4><p>可点击灯泡，选择重新引导安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1、关闭kvm虚拟机</span><br><span class="line"></span><br><span class="line">2、在/etc/libvirt/qemu下找到对应的xml配置文件</span><br><span class="line">在&lt;devices&gt;标签下添加</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">&#x27;tablet&#x27;</span> bus=<span class="string">&#x27;usb&#x27;</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存文件后 执行下面的命令</span></span><br><span class="line">virsh define /etc/libvirt/qemu/xx.xml <span class="comment"># xx为你的配置文件名称</span></span><br><span class="line"></span><br><span class="line">3、启动kvm虚拟机</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="键盘无法输入"><a href="#键盘无法输入" class="headerlink" title="键盘无法输入"></a>键盘无法输入</h4><p>在detail中找到display vnc, keymap选择 en-us 后重启虚拟机，虚拟机启动后再次输入<br><img src="https://qiufuqi.github.io/img/hexo/20231205141316.png"></p><h4 id="切换vlan"><a href="#切换vlan" class="headerlink" title="切换vlan"></a>切换vlan</h4><p>点击灯泡，切换不通vlan<br><img src="https://qiufuqi.github.io/img/hexo/20220818151059.png"></p><h2 id="命令行安装"><a href="#命令行安装" class="headerlink" title="命令行安装"></a>命令行安装</h2><h2 id="克隆方式安装"><a href="#克隆方式安装" class="headerlink" title="克隆方式安装"></a>克隆方式安装</h2><p><a href="/kvm_system_clone">克隆方式请参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 虚拟化 </category>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KVM </tag>
            
            <tag> System </tag>
            
            <tag> Clone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KVM虚拟化网桥搭建</title>
      <link href="/kvm_bridge/"/>
      <url>/kvm_bridge/</url>
      
        <content type="html"><![CDATA[<p>Linux环境部署KVM虚拟化平台，系统版本centos7.6，GUI桌面以及虚拟化支持（安装时）。</p><h2 id="Bridge基本原理"><a href="#Bridge基本原理" class="headerlink" title="Bridge基本原理"></a>Bridge基本原理</h2><p>一般来说，KVM客户机有两种网络连接方式：NAT与Bridge。<br>NAT方式：让虚拟机访问主机、互联网或本地网络上的资源的简单方法，但是不能从网络或其他的客户机访问客户机，性能上也需要大的调整。<br>Virtual Bridge：这种方式要比用户网络复杂一些，但是设置好后客户机与互联网，客户机与主机之间的通信都很容易。客户机和子网里面的机器能够互相通信。可以使虚拟机成为网络中具有独立IP的主机。<br>桥接网络（也叫物理设备共享）被用作把一个物理设备复制到一台虚拟机。</p><p>网络虚拟化是虚拟化技术中最复杂的部分，也是非常重要的资源。</p><h2 id="单Vlan-Bridge创建步骤"><a href="#单Vlan-Bridge创建步骤" class="headerlink" title="单Vlan Bridge创建步骤"></a>单Vlan Bridge创建步骤</h2><p>在eno3上搭建一座Bridge=breno3，此桥的所有流量均从eno3发送，KVM虚拟机网络挂载到breno3上即可进行网络访问，breno3所在vlan和eno3所在vlan一致。<br>原理图:<br><img src="https://qiufuqi.github.io/img/hexo/20231205142943.png"></p><p>试验使用ifcfg-eno3网口, 进入网络配置目录：cd /etc/sysconfig/network-scripts<br>文件可直接创建 或者使用命令创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1 创建网桥</span><br><span class="line">[root@node1 network-scripts]<span class="comment"># brctl addbr breno3</span></span><br><span class="line">2 将br0与你的物理网卡进行绑定</span><br><span class="line">[root@node1 network-scripts]<span class="comment"># brctl addif breno3 eno3</span></span><br><span class="line">3 如果要打开STP协议：</span><br><span class="line">[root@node1 network-scripts]<span class="comment"># brctl stp breno3 on</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># brctl 其他命令</span></span><br><span class="line">brctl delif breno3 eno3    <span class="comment">#解除绑定</span></span><br><span class="line">ifconfig breno3 down     <span class="comment">#关闭breno3,不关闭删不掉</span></span><br><span class="line">brctl delbr breno3       <span class="comment">#删除breno3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#brctl show 查看网桥连接</span></span><br><span class="line">addbr 添加网桥</span><br><span class="line">delbr 删除网桥</span><br><span class="line">addif 添加接口</span><br><span class="line">delif 删除接口</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="修改物理端口"><a href="#修改物理端口" class="headerlink" title="修改物理端口"></a>修改物理端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># vi ifcfg-eno3</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=<span class="built_in">yes</span></span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=<span class="built_in">yes</span></span><br><span class="line">IPV6_AUTOCONF=<span class="built_in">yes</span></span><br><span class="line">IPV6_DEFROUTE=<span class="built_in">yes</span></span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=eno3</span><br><span class="line">UUID=2f5fa659-68ca-4bee-86c9-2d9d51a4f681</span><br><span class="line">DEVICE=eno3</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line"><span class="comment">#IPADDR=10.128.1.10</span></span><br><span class="line"><span class="comment">#PREFIX=24</span></span><br><span class="line"><span class="comment">#GATEWAY=10.128.1.1</span></span><br><span class="line"><span class="comment">#DNS1=192.168.0.168</span></span><br><span class="line">IPV6_PRIVACY=no</span><br><span class="line"></span><br><span class="line"><span class="comment">#在eno3上搭建一座Bridge,此桥的所有流量均从eno3发送</span></span><br><span class="line">BRIDGE=breno3</span><br></pre></td></tr></table></figure><h3 id="添加对应Birdge"><a href="#添加对应Birdge" class="headerlink" title="添加对应Birdge"></a>添加对应Birdge</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># vi ifcfg-breno3 </span></span><br><span class="line">TYPE=Bridge</span><br><span class="line">DEVICE=breno3</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">BOOTPROTO=static</span><br><span class="line">NAME=breno3</span><br><span class="line">IPADDR=10.128.1.10</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=10.128.1.1</span><br><span class="line">DNS1=192.168.0.168</span><br></pre></td></tr></table></figure><h3 id="重启网络，查看"><a href="#重启网络，查看" class="headerlink" title="重启网络，查看"></a>重启网络，查看</h3><p>经过检测，KVM虚拟机可正常访问网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用brctl show查看  vnet0为kvm虚拟机网卡</span></span><br><span class="line">[root@node1 network-scripts]<span class="comment"># ifconfig</span></span><br><span class="line">[root@node1 network-scripts]<span class="comment"># brctl show</span></span><br><span class="line">bridge namebridge <span class="built_in">id</span>STP enabledinterfaces</span><br><span class="line">breno38000.6cae8b406513noeno3</span><br><span class="line">vnet0</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="多Vlan-Bridge创建步骤"><a href="#多Vlan-Bridge创建步骤" class="headerlink" title="多Vlan Bridge创建步骤"></a>多Vlan Bridge创建步骤</h2><p>一个Vlan为一个网段，同一台机器上的虚拟机可能归属不同的vlan，此时需要在宿主机创建多个vlan，将各个虚拟机划分到不同的vlan下，虚机产生的流量将带上不同vlan标识。<br>注意：eno5在交换机端更改为trunk口，宿主机用软件实现了一个交换机<br>原理图:<br><img src="https://qiufuqi.github.io/img/hexo/20231205142721.png"></p><h3 id="创建端口vlan"><a href="#创建端口vlan" class="headerlink" title="创建端口vlan"></a>创建端口vlan</h3><p>创建vlan10 同理可创建vlan12</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># vi ifcfg-eno5.10</span></span><br><span class="line">DEVICE=<span class="string">&quot;eno5.10&quot;</span></span><br><span class="line">VLAN=<span class="string">&quot;yes&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">BRIDGE=brvlan-10</span><br></pre></td></tr></table></figure><h3 id="创建brvlan-10"><a href="#创建brvlan-10" class="headerlink" title="创建brvlan-10"></a>创建brvlan-10</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># cat ifcfg-brvlan-10</span></span><br><span class="line">TYPE=bridge</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">NAME=brvlan-10</span><br><span class="line">DEVICE=brvlan-10</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h3 id="重启网络，查看-1"><a href="#重启网络，查看-1" class="headerlink" title="重启网络，查看"></a>重启网络，查看</h3><p>经过检测，KVM虚拟机挂载到对应vlan下，可正常访问网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure><h2 id="网卡绑定bond"><a href="#网卡绑定bond" class="headerlink" title="网卡绑定bond"></a>网卡绑定bond</h2><p>网卡bond（绑定），也称作网卡捆绑。就是将两个或者更多的物理网卡绑定成一个虚拟网卡。<br>网卡绑定的目的：<br>1.提高网卡的吞吐量。<br>2.增强网络的高可用，同时也能实现负载均衡。</p><p>网卡配置 bond （绑定）bond模式：<br>（1）Mode=0(balance-rr) 表示负载分担round-robin，平衡轮询策略，具有负载平衡和容错功能bond的网卡MAC为当前活动的网卡的MAC地址，需要交换机设置聚合模式，将多个网卡绑定为一条链路。<br>（2）Mode=1(active-backup) 表示主备模式，具有容错功能，只有一块网卡是active,另外一块是备的standby，这时如果交换机配的是捆绑，将不能正常工作，因为交换机往两块网卡发包，有一半包是丢弃的。<br>（3）Mode=2(balance-xor) 表示XOR Hash负载分担（异或平衡策略），具有负载平衡和容错功能每个slave接口传输每个数据包和交换机的聚合强制不协商方式配合。（需要xmit_hash_policy）。<br>（4）Mode=3(broadcast) 表示所有包从所有interface发出，广播策略，具有容错能力，这个不均衡，只有冗余机制…和交换机的聚合强制不协商方式配合。<br>（5）Mode=4(802.3ad) 表示支持802.3ad协议（IEEE802.3ad 动态链接聚合） 和交换机的聚合LACP方式配合（需要xmit_hash_policy）。<br>（6）Mode=5(balance-tlb) 适配器传输负载均衡，并行发送，无法并行接收，解决了数据发送的瓶颈。 是根据每个slave的负载情况选择slave进行发送，接收时使用当前轮到的slave。<br>（7）Mode=6(balance-alb) 在5的tlb基础上增加了rlb。适配器负载均衡模式并行发送，并行接收数据包。</p><p>5和6不需要交换机端的设置，网卡能自动聚合。4需要支持802.3ad。0，2和3理论上需要静态聚合方式，但实测中0可以通过mac地址欺骗的方式在交换机不设置的情况下不太均衡地进行接收。</p><p>常用的有三种<br>mode=0：平衡负载模式，有自动备援，但需要”Switch”支援及设定。<br>mode=1：自动备援模式，其中一条线若断线，其他线路将会自动备援。<br>mode=6：平衡负载模式，有自动备援，不必”Switch”支援及设定。</p><p>原理图：<br><img src="https://qiufuqi.github.io/img/hexo/20231205143019.png"></p><h3 id="更改端口配置"><a href="#更改端口配置" class="headerlink" title="更改端口配置"></a>更改端口配置</h3><p>首先更改eno4配置,绑定到bond6; 同理,其他端口可同样操作（对应交换机为trunk,否则vlan之间无法通信）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># vi ifcfg-eno4</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">NAME=eno4</span><br><span class="line">DEVICE=eno4</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">MASTER=bond6</span><br><span class="line">SLAVE=YES</span><br><span class="line">[root@node1 network-scripts]<span class="comment"># vi ifcfg-eno5</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">NAME=eno5</span><br><span class="line">DEVICE=eno5</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">MASTER=bond6</span><br><span class="line">SLAVE=YES</span><br></pre></td></tr></table></figure><h3 id="创建master-bond0"><a href="#创建master-bond0" class="headerlink" title="创建master=bond0"></a>创建master=bond0</h3><p>网卡绑定模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># vi ifcfg-bond6 </span></span><br><span class="line">DEVICE=bond6</span><br><span class="line">TYPE=Bond</span><br><span class="line">NAME=bond6</span><br><span class="line">BONDING_MASTER=<span class="built_in">yes</span></span><br><span class="line">BOOTPROTO=static</span><br><span class="line">USERCTL=no</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">BONDING_OPTS=<span class="string">&quot;mode=6 miimon=100&quot;</span></span><br><span class="line">BRIDGE=br6</span><br></pre></td></tr></table></figure><h3 id="搭建桥br6"><a href="#搭建桥br6" class="headerlink" title="搭建桥br6"></a>搭建桥br6</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># cat ifcfg-br6</span></span><br><span class="line">TYPE=Bridge</span><br><span class="line">DEVICE=br6</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">BOOTPROTO=static</span><br><span class="line">NAME=br6</span><br></pre></td></tr></table></figure><h3 id="查看bond状态"><a href="#查看bond状态" class="headerlink" title="查看bond状态"></a>查看bond状态</h3><p>可查看当前所使用端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># cat /proc/net/bonding/bond6 </span></span><br><span class="line">Ethernet Channel Bonding Driver: v3.7.1 (April 27, 2011)</span><br><span class="line"></span><br><span class="line">Bonding Mode: adaptive load balancing</span><br><span class="line">Primary Slave: None</span><br><span class="line">Currently Active Slave: eno4</span><br><span class="line">MII Status: up</span><br><span class="line">MII Polling Interval (ms): 100</span><br><span class="line">Up Delay (ms): 0</span><br><span class="line">Down Delay (ms): 0</span><br><span class="line"></span><br><span class="line">Slave Interface: eno5</span><br><span class="line">MII Status: up</span><br><span class="line">Speed: 1000 Mbps</span><br><span class="line">Duplex: full</span><br><span class="line">Link Failure Count: 1</span><br><span class="line">Permanent HW addr: 6c:ae:8b:40:65:15</span><br><span class="line">Slave queue ID: 0</span><br><span class="line"></span><br><span class="line">Slave Interface: eno4</span><br><span class="line">MII Status: up</span><br><span class="line">Speed: 1000 Mbps</span><br><span class="line">Duplex: full</span><br><span class="line">Link Failure Count: 0</span><br><span class="line">Permanent HW addr: 6c:ae:8b:40:65:14</span><br><span class="line">Slave queue ID: 0</span><br></pre></td></tr></table></figure><h3 id="链路绑定完成"><a href="#链路绑定完成" class="headerlink" title="链路绑定完成"></a>链路绑定完成</h3><p>创建不同vlan10 同理创建vlan12</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># vi ifcfg-br6.10</span></span><br><span class="line">DEVICE=<span class="string">&quot;br6.10&quot;</span></span><br><span class="line">VLAN=<span class="string">&quot;yes&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;none&quot;</span></span><br><span class="line">BRIDGE=brvlan6-10</span><br><span class="line"></span><br><span class="line">[root@node1 network-scripts]<span class="comment"># vi ifcfg-brvlan6-10</span></span><br><span class="line">TYPE=bridge</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">NAME=brvlan6-10</span><br><span class="line">DEVICE=brvlan6-10</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h3 id="重启网络，并查看状态"><a href="#重启网络，并查看状态" class="headerlink" title="重启网络，并查看状态"></a>重启网络，并查看状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 network-scripts]<span class="comment"># systemctl restart network</span></span><br><span class="line">[root@node1 network-scripts]<span class="comment"># brctl show</span></span><br><span class="line"> </span><br><span class="line">[root@node1 network-scripts]<span class="comment"># brctl show</span></span><br><span class="line">bridge namebridge <span class="built_in">id</span>STP enabledinterfaces</span><br><span class="line">br68000.6cae8b406515nobond6</span><br><span class="line">breno38000.6cae8b406513noeno3</span><br><span class="line">vnet0</span><br><span class="line">brvlan6-108000.6cae8b406515nobr6.10</span><br><span class="line">brvlan6-118000.6cae8b406515nobr6.11</span><br><span class="line">vnet1</span><br><span class="line">brvlan6-128000.6cae8b406515nobr6.12</span><br><span class="line">virbr08000.525400de92ad<span class="built_in">yes</span>virbr0-nic</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="虚机的挂在vlan"><a href="#虚机的挂在vlan" class="headerlink" title="虚机的挂在vlan"></a>虚机的挂在vlan</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brctl addif brvlan-10 vnet0</span><br><span class="line">brctl addif brvlan-12 vnet1</span><br><span class="line">brctl show</span><br><span class="line"> </span><br><span class="line"><span class="comment">#vnet0 为vlan10下的ip 10.128.0.96</span></span><br><span class="line"><span class="comment">#vnet1 为vlan12下的ip 10.128.2.10</span></span><br></pre></td></tr></table></figure><p>至此，环境搭建完毕,链路聚合，并且划分了不同的vlan</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 虚拟化 </category>
          
          <category> 网桥 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KVM </tag>
            
            <tag> Birdge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KVM虚拟化基本命令</title>
      <link href="/kvm_bash/"/>
      <url>/kvm_bash/</url>
      
        <content type="html"><![CDATA[<p>KVM虚拟化常用命令</p><h2 id="KVM的基本管理"><a href="#KVM的基本管理" class="headerlink" title="KVM的基本管理"></a>KVM的基本管理</h2><h3 id="查看KVM虚拟机配置文件"><a href="#查看KVM虚拟机配置文件" class="headerlink" title="查看KVM虚拟机配置文件"></a>查看KVM虚拟机配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Kvm虚拟机默认配置文件位置</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># pwd</span></span><br><span class="line">/etc/libvirt/qemu</span><br><span class="line">[root@node1 qemu]<span class="comment"># ll</span></span><br><span class="line">总用量 16</span><br><span class="line">drwxr-xr-x. 2 root root   42 5月   2 15:42 autostart</span><br><span class="line">drwx------. 3 root root   42 4月  28 2021 networks</span><br><span class="line">-rw-------. 1 root root 4259 4月  27 16:54 test11.xml</span><br><span class="line">-rw-------. 1 root root 4259 4月  27 14:14 test12.xml</span><br></pre></td></tr></table></figure><h3 id="启动与关闭"><a href="#启动与关闭" class="headerlink" title="启动与关闭"></a>启动与关闭</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#显示正在运行的虚拟机</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh list</span></span><br><span class="line"> Id    名称                         状态</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> 1     test11                         running</span><br><span class="line"> 2     test12                         running</span><br><span class="line"><span class="comment">#显示所有虚拟机</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh list --all</span></span><br><span class="line"> Id    名称                         状态</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> 1     test11                         running</span><br><span class="line"> 2     test12                         running</span><br></pre></td></tr></table></figure><h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh start test11</span></span><br></pre></td></tr></table></figure><h3 id="关闭虚拟机"><a href="#关闭虚拟机" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh shutdown test11</span></span><br><span class="line"><span class="comment">#或者对应id</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh shutdown 1</span></span><br></pre></td></tr></table></figure><h3 id="强制关闭虚拟机"><a href="#强制关闭虚拟机" class="headerlink" title="强制关闭虚拟机"></a>强制关闭虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh destroy test11</span></span><br></pre></td></tr></table></figure><h3 id="移除虚拟机"><a href="#移除虚拟机" class="headerlink" title="移除虚拟机"></a>移除虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh undefine test11</span></span><br></pre></td></tr></table></figure><h3 id="设置虚拟机开机启动"><a href="#设置虚拟机开机启动" class="headerlink" title="设置虚拟机开机启动"></a>设置虚拟机开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh autostart test11</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh autostart --disable test11</span></span><br></pre></td></tr></table></figure><p>默认情况下virsh工具不能对linux虚拟机进行关机操作<br>linux操作系统需要开启与启动acpid服务。在安装KVM linux虚拟机必须配置此服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install acpid</span></span><br><span class="line"><span class="comment"># /etc/init.d/acpid start</span></span><br></pre></td></tr></table></figure><h3 id="通过配置文件启动虚拟机"><a href="#通过配置文件启动虚拟机" class="headerlink" title="通过配置文件启动虚拟机"></a>通过配置文件启动虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 qemu]<span class="comment"># virsh create /etc/libvirt/qemu/test11.xml</span></span><br></pre></td></tr></table></figure><h3 id="挂起，恢复-virsh命令"><a href="#挂起，恢复-virsh命令" class="headerlink" title="挂起，恢复 virsh命令"></a>挂起，恢复 virsh命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#挂起服务器</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh suspend test11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复服务器</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh resume test11</span></span><br></pre></td></tr></table></figure><h3 id="重命名虚拟机"><a href="#重命名虚拟机" class="headerlink" title="重命名虚拟机"></a>重命名虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#停止虚拟机</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh shutdown test11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#导出虚拟机的配置文件</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># pwd</span></span><br><span class="line">/etc/libvirt/qemu</span><br><span class="line">[root@node1 qemu-img]<span class="comment"># virsh dumpxml test11 &gt; test-test11.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#更改配置文件</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># sed -i &#x27;s/test11/test-test11/g&#x27; test-test11.xml</span></span><br><span class="line"><span class="comment">#注 可以不用更改镜像名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#移除原有的虚拟机</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh undefine test11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#加载新建的虚拟机</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh define test-test11.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动虚拟机</span></span><br><span class="line">[root@node1 qemu]<span class="comment"># virsh start test-test11</span></span><br></pre></td></tr></table></figure><h2 id="虚拟机快照操作"><a href="#虚拟机快照操作" class="headerlink" title="虚拟机快照操作"></a>虚拟机快照操作</h2><h3 id="转换磁盘镜像文件格式为qcow2"><a href="#转换磁盘镜像文件格式为qcow2" class="headerlink" title="转换磁盘镜像文件格式为qcow2"></a>转换磁盘镜像文件格式为qcow2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># virsh shutdown test-test11</span></span><br><span class="line">[root@node1 qemu-img]<span class="comment"># qemu-img convert -f raw test11.raw -O qcow2 test11.raw.qcow2</span></span><br><span class="line"><span class="comment">#快照一定需要qcow2格式才行 </span></span><br><span class="line"><span class="comment">#我这边从新建立一个虚拟机以qcow2</span></span><br></pre></td></tr></table></figure><h3 id="创建快照"><a href="#创建快照" class="headerlink" title="创建快照"></a>创建快照</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm qemu-img]<span class="comment"># virsh snapshot-create test11</span></span><br></pre></td></tr></table></figure><h3 id="查看快照"><a href="#查看快照" class="headerlink" title="查看快照"></a>查看快照</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm qemu-img]<span class="comment"># virsh snapshot-list test11</span></span><br><span class="line"> Name                 Creation Time             State</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"> 1660579077           2022-08-15 23:57:57 +0800 shutoff</span><br></pre></td></tr></table></figure><h3 id="恢复快照"><a href="#恢复快照" class="headerlink" title="恢复快照"></a>恢复快照</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm qemu-img]<span class="comment"># virsh snapshot-revert test11  1660579077</span></span><br></pre></td></tr></table></figure><h3 id="删除快照"><a href="#删除快照" class="headerlink" title="删除快照"></a>删除快照</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm qemu-img]<span class="comment"># virsh snapshot-delete test11 1660579077</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 虚拟化 </category>
          
          <category> 命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KVM </tag>
            
            <tag> Bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KVM虚拟化搭建</title>
      <link href="/kvm_install/"/>
      <url>/kvm_install/</url>
      
        <content type="html"><![CDATA[<p>Linux环境部署KVM虚拟化平台，系统版本centos7.6，GUI桌面以及虚拟化支持（安装时）。</p><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="查看CPU是否支持VT"><a href="#查看CPU是否支持VT" class="headerlink" title="查看CPU是否支持VT"></a>查看CPU是否支持VT</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#重要，安装时需要慎重</span></span><br><span class="line">egrep <span class="string">&#x27;(vmx|svm)&#x27;</span> --color=always /proc/cpuinfo</span><br></pre></td></tr></table></figure><h3 id="检查内核模块是否加载"><a href="#检查内核模块是否加载" class="headerlink" title="检查内核模块是否加载"></a>检查内核模块是否加载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep kvm</span><br></pre></td></tr></table></figure><h3 id="查看Selinux状态"><a href="#查看Selinux状态" class="headerlink" title="查看Selinux状态"></a>查看Selinux状态</h3><p>如果是启动状态，需要将其关闭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sestatus</span><br><span class="line">getenforce</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改SELINUX=disabled ，然后重启reboot</span></span><br><span class="line">sudo vim /etc/sysconfig/selinux</span><br></pre></td></tr></table></figure><h3 id="安装KVM"><a href="#安装KVM" class="headerlink" title="安装KVM"></a>安装KVM</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install  kvm libvirt python-virtinst qemu-kvm virt-viewer tunctl bridge-utils avahi dmidecode qemu-kvm-tools virt-manager qemu-img virt-install net-tools libguestfs-tools</span><br></pre></td></tr></table></figure><h3 id="启动libvirt服务"><a href="#启动libvirt服务" class="headerlink" title="启动libvirt服务"></a>启动libvirt服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start libvirtd</span><br></pre></td></tr></table></figure><h3 id="设计开机自启"><a href="#设计开机自启" class="headerlink" title="设计开机自启"></a>设计开机自启</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> libvirtd</span><br></pre></td></tr></table></figure><p>挂载U盾<br><a href="https://www.cnblogs.com/kevingrace/p/8016734.html">https://www.cnblogs.com/kevingrace/p/8016734.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 虚拟化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装Mysql5.7</title>
      <link href="/centos_mysql5.7/"/>
      <url>/centos_mysql5.7/</url>
      
        <content type="html"><![CDATA[<p>Linux环境中安装Mysql5.7，系统版本centos7.6。</p><p><strong>Mysql5.7安装</strong><br>本文总共包含4种安装方式，均通过验证，推荐使用yum安装（最新版本），rpm可安装指定版本，安装包可安装指定版本。<br>安装方式如下：</p><ul><li>YUM安装</li><li>RPM安装</li><li>安装包安装</li><li><a href="/docker_mysql">docker安装</a></li></ul><h2 id="YUM安装"><a href="#YUM安装" class="headerlink" title="YUM安装"></a>YUM安装</h2><p>Mysql5.7 YUM<a href="https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/">下载地址</a></p><h3 id="卸载之前版本"><a href="#卸载之前版本" class="headerlink" title="卸载之前版本"></a>卸载之前版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -e +安装包 或  yum remove +安装包</span></span><br><span class="line"><span class="comment"># rpm -ev --nodeps  +安装包  强制删除</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># rpm -qa|grep mariadb</span></span><br><span class="line">mariadb-libs-5.5.68-1.el7.x86_64</span><br><span class="line">[root@localhost ~]<span class="comment"># rpm -e --nodeps mariadb-libs-5.5.68-1.el7.x86_64</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum remove mysql-*</span></span><br></pre></td></tr></table></figure><h3 id="下载rpm文件"><a href="#下载rpm文件" class="headerlink" title="下载rpm文件"></a>下载rpm文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装发行文件</span></span><br><span class="line">yum -y localinstall mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">或</span><br><span class="line">rpm -ivh mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看mysql版本 </span></span><br><span class="line">yum whatprovides mysql-community-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原因是Mysql的GPG升级了，需要重新获取</span></span><br><span class="line">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装mysql 会有报错</span></span><br><span class="line">yum -y install mysql-community-server </span><br></pre></td></tr></table></figure><h3 id="启动Mysql"><a href="#启动Mysql" class="headerlink" title="启动Mysql"></a>启动Mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure><h3 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看临时密码</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /var/log/mysqld.log |grep password</span></span><br><span class="line">2022-08-25T08:25:32.680447Z 1 [Note] A temporary password is generated <span class="keyword">for</span> root@localhost: XcrEJlRho0_b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入mysql  降低密码要求 可不做</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line"><span class="built_in">set</span> global validate_password_length=1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">&#x27;root&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="开放远程连接"><a href="#开放远程连接" class="headerlink" title="开放远程连接"></a>开放远程连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user <span class="built_in">set</span> user.Host=<span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user.User=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="RPM安装"><a href="#RPM安装" class="headerlink" title="RPM安装"></a>RPM安装</h2><p>Mysql5.7 RPM<a href="https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/">下载地址</a></p><h3 id="卸载之前版本-1"><a href="#卸载之前版本-1" class="headerlink" title="卸载之前版本"></a>卸载之前版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -e +安装包 或  yum remove +安装包</span></span><br><span class="line"><span class="comment"># rpm -ev --nodeps  +安装包  强制删除</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># rpm -qa|grep mariadb</span></span><br><span class="line">mariadb-libs-5.5.60-1.el7_5.x86_64</span><br><span class="line">[root@localhost ~]<span class="comment"># rpm -e --nodeps mariadb-libs-5.5.60-1.el7_5.x86_64</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum remove mysql-*</span></span><br></pre></td></tr></table></figure><h3 id="下载rpm文件-1"><a href="#下载rpm文件-1" class="headerlink" title="下载rpm文件"></a>下载rpm文件</h3><p>mysql-community-libs-compat 能解决缺失libmysqlclient.so.18问题，<a href="https://blog.csdn.net/LT_Future/article/details/103648662">处理参考</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-common-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-libs-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-client-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-server-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-libs-compat-5.7.31-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="安装Mysql-1"><a href="#安装Mysql-1" class="headerlink" title="安装Mysql"></a>安装Mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install -y perl numactl</span><br><span class="line"></span><br><span class="line">rpm -ivh mysql-community-common-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-client-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-server-5.7.31-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-compat-5.7.31-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><p>通过在命令行中指定可选的–prefix或–relocate参数来指定安装路径或目录。</p><p>（1）指定安装路径：如果我们要将软件包安装到路径/usr/local/newdir/下，我们可以通过执行以下命令来实现：rpm -ivh package.rpm –prefix /usr/local/newdir/。<br>（2）指定安装目录：如果我们要将RPM软件包中的某一组件安装到路径/usr/lib/newlib/下，我们可以通过执行以下命令来实现：rpm -ivh package.rpm -–relocate ‘/usr/lib=/usr/lib/newlib/’。</p><p>在安装RPM时，指定安装路径或目录可以更好地对软件进行定制化安装，提高软件的应用效率。在使用时，我们需要根据具体需要来指定正确的安装目录和路径，同时，为了避免软件安装过程中出现意外情况，我们也需要进行备份等工作。</p><p>RPM其他命令-卸载rpm包<br>卸载包命令：rpm -e yum-utils-1.1.31-54.el7_8<br>卸载包命令：rpm -e –nodeps yum-utils-1.1.31-54.el7_8<br>功能：卸载rpm包，-e是erase简写，就是清除卸载包；–nodeps，是代表不确认包的依赖。</p><p>RPM其他命令-查看已安装的包<br>查询已安装的rpm包列表：rpm -qa<br>已安装包中的查询包含关键字的包：rpm -qa | grep yum-utils</p><p>RPM其他命令-查看已安装包的信息<br>命令：rpm -qi yum-utils</p><h3 id="启动Mysql-1"><a href="#启动Mysql-1" class="headerlink" title="启动Mysql"></a>启动Mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure><h3 id="重置密码-1"><a href="#重置密码-1" class="headerlink" title="重置密码"></a>重置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看临时密码</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /var/log/mysqld.log |grep password</span></span><br><span class="line">2022-08-25T08:25:32.680447Z 1 [Note] A temporary password is generated <span class="keyword">for</span> root@localhost: IqYx0nr/VEk7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入mysql  降低密码要求 可不做</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line"><span class="built_in">set</span> global validate_password_length=1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">&#x27;root&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="开放远程连接-1"><a href="#开放远程连接-1" class="headerlink" title="开放远程连接"></a>开放远程连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user <span class="built_in">set</span> user.Host=<span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user.User=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="开启日志"><a href="#开启日志" class="headerlink" title="开启日志"></a>开启日志</h3><p>编辑my.cnf文件，添加如下代码，并重启mysqld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vi /etc/my.cnf</span></span><br><span class="line"><span class="comment"># 开启binlog功能，可不加</span></span><br><span class="line">log-bin=mysql-bin     <span class="comment">#binlog文件名</span></span><br><span class="line">binlog_format=Mixed     <span class="comment">#选择row模式</span></span><br><span class="line">server_id=1           <span class="comment"># 为当前服务取一个唯一的 id（MySQL5.7 之后需要配置）</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><h2 id="安装包安装"><a href="#安装包安装" class="headerlink" title="安装包安装"></a>安装包安装</h2><p>Mysql5.7安装包<a href="https://downloads.mysql.com/archives/community/">下载地址</a></p><h3 id="卸载之前版本-2"><a href="#卸载之前版本-2" class="headerlink" title="卸载之前版本"></a>卸载之前版本</h3><p><strong>卸载mariadb 和 mysql</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -e +安装包 或  yum remove +安装包</span></span><br><span class="line"><span class="comment"># rpm -ev --nodeps  +安装包  强制删除</span></span><br><span class="line"><span class="comment"># 卸载mariadb 和 mysql</span></span><br><span class="line">[root@localhost ~]<span class="comment"># rpm -qa|grep mariadb</span></span><br><span class="line">mariadb-libs-5.5.68-1.el7.x86_64</span><br><span class="line">[root@localhost ~]<span class="comment"># rpm -e --nodeps mariadb-libs-5.5.68-1.el7.x86_64</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum remove mysql-*</span></span><br></pre></td></tr></table></figure><h3 id="创建MySQL用户组"><a href="#创建MySQL用户组" class="headerlink" title="创建MySQL用户组"></a>创建MySQL用户组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查mysql 用户组是否存在</span></span><br><span class="line"><span class="built_in">cat</span> /etc/group | grep mysql</span><br><span class="line"><span class="built_in">cat</span> /etc/passwd |grep mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建mysql 用户组和用户</span></span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql mysql</span><br></pre></td></tr></table></figure><h3 id="获取安装包"><a href="#获取安装包" class="headerlink" title="获取安装包"></a>获取安装包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="解压mysql"><a href="#解压mysql" class="headerlink" title="解压mysql"></a>解压mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf mysql-5.7.34-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"><span class="built_in">mv</span> mysql-5.7.34-linux-glibc2.12-x86_64 /usr/local/mysql/</span><br></pre></td></tr></table></figure><h3 id="创建数据和⽇志⽬录"><a href="#创建数据和⽇志⽬录" class="headerlink" title="创建数据和⽇志⽬录"></a>创建数据和⽇志⽬录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R mysql:mysql /usr/local/mysql</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /usr/local/mysql</span><br></pre></td></tr></table></figure><h3 id="初始化mysqld"><a href="#初始化mysqld" class="headerlink" title="初始化mysqld"></a>初始化mysqld</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#务必记住数据库管理员临时密码  可指定文件夹</span></span><br><span class="line">/usr/local/mysql/bin/mysqld --initialize --user=mysql --datadir=/usr/local/mysql/data --basedir=/usr/local/mysql</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20231205135440.png"></p><h3 id="编写配置文件my-cnf"><a href="#编写配置文件my-cnf" class="headerlink" title="编写配置文件my.cnf"></a>编写配置文件my.cnf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vi /etc/my.cnf </span></span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/usr/local/mysql/data</span><br><span class="line">port = 3306</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">symbolic-links=0</span><br><span class="line">max_connections=400</span><br><span class="line">innodb_file_per_table=1</span><br><span class="line"><span class="comment"># 表名大小写不明感</span></span><br><span class="line">lower_case_table_names=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#开启binlog功能，可不加</span></span><br><span class="line">log-bin=mysql-bin     <span class="comment">#binlog文件名</span></span><br><span class="line">binlog_format=Mixed     <span class="comment">#选择row模式</span></span><br><span class="line">server_id=1           <span class="comment"># 为当前服务取一个唯一的 id（MySQL5.7 之后需要配置）</span></span><br><span class="line"></span><br><span class="line">binlog 有三种格式：</span><br><span class="line">Statement（Statement-Based Replication,SBR）：每一条会修改数据的 SQL 都会记录在 binlog 中。</span><br><span class="line">Row（Row-Based Replication,RBR）：不记录 SQL 语句上下文信息，仅保存哪条记录被修改。</span><br><span class="line">Mixed（Mixed-Based Replication,MBR）：Statement 和 Row 的混合体。</span><br></pre></td></tr></table></figure><h3 id="启动mysql"><a href="#启动mysql" class="headerlink" title="启动mysql"></a>启动mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启mysql服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start mysqld.service</span><br></pre></td></tr></table></figure><h3 id="登录mysql"><a href="#登录mysql" class="headerlink" title="登录mysql"></a>登录mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果安装目录不是/usr/local/mysql 而是指定目录，比如/home/mysql 则需要做一个软连接，否则报错</span></span><br><span class="line"><span class="built_in">ln</span> -s /home/mysql /usr/local/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#密码就是初始化时生成的临时密码</span></span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">&#x27;root&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="开放远程连接-2"><a href="#开放远程连接-2" class="headerlink" title="开放远程连接"></a>开放远程连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user <span class="built_in">set</span> user.Host=<span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user.User=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h3><h4 id="第一种启动"><a href="#第一种启动" class="headerlink" title="第一种启动"></a>第一种启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#赋予可执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/init.d/mysqld</span><br><span class="line"><span class="comment">#添加服务</span></span><br><span class="line">chkconfig --add mysqld</span><br><span class="line"><span class="comment">#显示服务列表</span></span><br><span class="line">chkconfig --list</span><br></pre></td></tr></table></figure><h4 id="第二种启动"><a href="#第二种启动" class="headerlink" title="第二种启动"></a>第二种启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果不能自动启动， 可以编写脚本启动</span></span><br><span class="line">[root@sx-db init.d]<span class="comment"># vi /etc/init.d/mysql.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----启动mysql----&quot;</span>$(<span class="built_in">date</span> +%y年%m月%d日%H:%M:%s);</span><br><span class="line"><span class="built_in">export</span> LANG=zh-cn.UTF8</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start mysqld.service</span><br><span class="line"></span><br><span class="line">[root@sx-db init.d]<span class="comment"># chmod +x mysql.sh </span></span><br><span class="line"><span class="comment"># 在rc.local最后添加</span></span><br><span class="line">[root@sx-db init.d]<span class="comment"># chmod +x /etc/rc.d/rc.local</span></span><br><span class="line">[root@sx-db init.d]<span class="comment"># vi /etc/rc.d/rc.local</span></span><br><span class="line">/etc/init.d/mysql.sh</span><br></pre></td></tr></table></figure><h4 id="第三种启动"><a href="#第三种启动" class="headerlink" title="第三种启动"></a>第三种启动</h4><p>使用systemd，自己写个服务</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 数据库 </category>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U盘安装CentOS7</title>
      <link href="/centos_u/"/>
      <url>/centos_u/</url>
      
        <content type="html"><![CDATA[<p>CentOS7.6 物理机安装（服务器单独部署CentOS环境）<br>前置条件：服务器 &amp;&amp; U盘启动盘（提前导入CentOS7系统）</p><h2 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h2><p>1.把U盘插到电脑上</p><p>2.设置开机U盘启动 ps：机器不一样设置也不一样具体请百度，我的是按F12可选择U盘。</p><p>3.选择U盘后跳转到下图界面<br><img src="https://qiufuqi.github.io/img/hexo/20231205135345.png"></p><p>4.按下键盘TAB键将以下信息修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vmlinuz initrd=initrd.img inst.stage2=hd:LABEL=CentOS\x207\x20x86_64 rd.live.check quiet</span><br><span class="line"><span class="comment"># 修改为</span></span><br><span class="line">vmlinuz initrd=initrd.img linux <span class="built_in">dd</span> quiet</span><br></pre></td></tr></table></figure><p><img src="https://qiufuqi.github.io/img/hexo/20231205133550.png"><br><img src="https://qiufuqi.github.io/img/hexo/20231205115020.png"></p><p>5.查看U盘启动盘的名称比如：sda，sdb，sdc  ps：label一列会显示Centos7等字样的<br><img src="https://qiufuqi.github.io/img/hexo/20231205133641.png"><br>6.重启后到第三步界面按下TAB键</p><p>7.根据第5步查询到的启动盘名称进行修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vmlinuz initrd=initrd.img inst.stage2=hd:LABEL=CentOS\x207\x20x86_64 rd.live.check quiet </span><br><span class="line"><span class="comment"># 修改为  ps：sdb4就是你看到的启动盘名称</span></span><br><span class="line">vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdb4 quiet   </span><br></pre></td></tr></table></figure><p>8.之后等待安装到图形界面</p><p>后续安装可参考<a href="/centos_install">CentOS系统安装</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS防火墙管理</title>
      <link href="/centos_firewalld/"/>
      <url>/centos_firewalld/</url>
      
        <content type="html"><![CDATA[<p>Linux环境中防火墙管理，系统版本centos7.6。</p><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="启动防火墙"><a href="#启动防火墙" class="headerlink" title="启动防火墙"></a>启动防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld.service</span><br></pre></td></tr></table></figure><h3 id="开机自启-amp-amp-关闭"><a href="#开机自启-amp-amp-关闭" class="headerlink" title="开机自启 &amp;&amp; 关闭"></a>开机自启 &amp;&amp; 关闭</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><h3 id="防火墙属性"><a href="#防火墙属性" class="headerlink" title="防火墙属性"></a>防火墙属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><h3 id="查看所有端口"><a href="#查看所有端口" class="headerlink" title="查看所有端口"></a>查看所有端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><h3 id="查看指定端口"><a href="#查看指定端口" class="headerlink" title="查看指定端口"></a>查看指定端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --query-port=80/tcp</span><br></pre></td></tr></table></figure><h3 id="添加端口"><a href="#添加端口" class="headerlink" title="添加端口"></a>添加端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent </span><br></pre></td></tr></table></figure><h3 id="删除端口"><a href="#删除端口" class="headerlink" title="删除端口"></a>删除端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><h3 id="拒绝指定IP"><a href="#拒绝指定IP" class="headerlink" title="拒绝指定IP"></a>拒绝指定IP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拒绝网段或单个IP访问</span></span><br><span class="line">firewall-cmd --permanent --zone=block --add-source=172.34.0.0/24</span><br><span class="line">firewall-cmd --permanent --zone=block --add-source=172.34.4.207</span><br><span class="line">firewall-cmd --permanent --zone=block --add-service=http</span><br><span class="line">firewall-cmd --permanent --zone=block --add-service=ftp</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --zone=block --remove-source=172.34.4.207</span><br></pre></td></tr></table></figure><h3 id="keepalived放行"><a href="#keepalived放行" class="headerlink" title="keepalived放行"></a>keepalived放行</h3><p>可在destination 前添加 –in-interface ens192</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</span><br><span class="line">firewall-cmd --direct --permanent --add-rule ipv4 filter OUTPUT 0 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="重新加载防火墙"><a href="#重新加载防火墙" class="headerlink" title="重新加载防火墙"></a>重新加载防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl reload firewalld.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 防火墙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS中软件自启动三种方式</title>
      <link href="/centos_autostart/"/>
      <url>/centos_autostart/</url>
      
        <content type="html"><![CDATA[<p>Linux环境中软件自启动的三种方式，系统版本CentOS 7.6。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>1、systemd服务<br>2、使用 /etc/rc.d/rc.local<br>3、使用crontab定时计划中的@reboot</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="systemd服务"><a href="#systemd服务" class="headerlink" title="systemd服务"></a>systemd服务</h3><p>参考示例：</p><h4 id="创建自启动文件"><a href="#创建自启动文件" class="headerlink" title="创建自启动文件"></a>创建自启动文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/alertmanager.service</span><br></pre></td></tr></table></figure><h4 id="编辑写入启动配置"><a href="#编辑写入启动配置" class="headerlink" title="编辑写入启动配置"></a>编辑写入启动配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=https://prometheus.io</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/alertmanager/alertmanager --config.file=/usr/local/alertmanager/alertmanager.yml</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="设置服务生效-amp-amp-自启动"><a href="#设置服务生效-amp-amp-自启动" class="headerlink" title="设置服务生效 &amp;&amp; 自启动"></a>设置服务生效 &amp;&amp; 自启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start alertmanager.service</span><br><span class="line">systemctl <span class="built_in">enable</span> alertmanager.service</span><br></pre></td></tr></table></figure><h4 id="取消自启动"><a href="#取消自启动" class="headerlink" title="取消自启动"></a>取消自启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> alertmanager.service</span><br><span class="line"></span><br><span class="line">systemctl is-enable alertmanager   <span class="comment">#是否开机启动</span></span><br><span class="line">systemctl is-active alertmanager   <span class="comment">#是否启动状态</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="rc-local方式"><a href="#rc-local方式" class="headerlink" title="rc.local方式"></a>rc.local方式</h3><h4 id="打开rc-local"><a href="#打开rc-local" class="headerlink" title="打开rc.local"></a>打开rc.local</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><h4 id="添加执行内容"><a href="#添加执行内容" class="headerlink" title="添加执行内容"></a>添加执行内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/shell/init.sh</span><br></pre></td></tr></table></figure><h4 id="修改rc-local权限"><a href="#修改rc-local权限" class="headerlink" title="修改rc.local权限"></a>修改rc.local权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure><h4 id="取消方式"><a href="#取消方式" class="headerlink" title="取消方式"></a>取消方式</h4><p>打开/etc/rc.d/rc.local文件，删除执行内容</p><h3 id="crontab定时计划中的-reboot"><a href="#crontab定时计划中的-reboot" class="headerlink" title="crontab定时计划中的@reboot"></a>crontab定时计划中的@reboot</h3><h4 id="打开定时脚本"><a href="#打开定时脚本" class="headerlink" title="打开定时脚本"></a>打开定时脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><h4 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@reboot /home/test.sh</span><br></pre></td></tr></table></figure><h4 id="取消方法"><a href="#取消方法" class="headerlink" title="取消方法"></a>取消方法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">删除定时任务</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 自启动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> 自启动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus监控+altermanager+钉钉告警</title>
      <link href="/prometheus/"/>
      <url>/prometheus/</url>
      
        <content type="html"><![CDATA[<p>Prometheus 是一个开源的服务监控系统和时序数据库，其提供了通用的数据模型和快捷数据采集、存储和查询接口。它的核心组件Prometheus server会定期从静态配置的监控目标或者基于服务发现自动配置的自标中进行拉取数据，当新拉取到的数据大于配置的内存缓存区时，数据就会持久化到存储设备当中。<br>Prometheus 的数据走向，如下：<br><img src="https://qiufuqi.github.io/img/hexo/20231205114030.png"></p><table><thead><tr><th align="left">Align <code>left</code></th><th align="center">center align</th><th align="right">Align right</th></tr></thead><tbody><tr><td align="left"><code>left</code>-aligned</td><td align="center">centered</td><td align="right">right-aligned</td></tr><tr><td align="left"><code>左</code>对齐</td><td align="center">中对齐</td><td align="right">右对齐</td></tr></tbody></table><table><thead><tr><th align="left">对象类型</th><th align="left">具体对象</th><th align="left">采集器</th></tr></thead><tbody><tr><td align="left">网络协议</td><td align="left">HTTP、HTTPS、DNS、TCP、ICMP 和 gRPC等</td><td align="left">Blackbox Exporter</td></tr><tr><td align="left">网络设备</td><td align="left">路由器、交换机等</td><td align="left">SNMP Exporter</td></tr><tr><td align="left">主机节点</td><td align="left">虚拟主机、物理主机等</td><td align="left">Node Exporter、Windows Exporter</td></tr><tr><td align="left">应用</td><td align="left">延迟、错误、QPS、内部状态等</td><td align="left">Prometheus Client libraries</td></tr><tr><td align="left">中间件</td><td align="left">资源用量、服务状态等</td><td align="left">Prometheus Client libraries</td></tr><tr><td align="left">容器</td><td align="left">资源用量、状态等</td><td align="left">cAdvisor</td></tr><tr><td align="left">编排工具</td><td align="left">集群资源用量、调度等</td><td align="left">Kubernetes Components</td></tr><tr><td align="left">数据库</td><td align="left">常用数据库：MySQL、Redis、MongoDB、SQL Server</td><td align="left">MySQL Exporter, Redis Exporter, MongoDB Exporter, MSSQL Exporter</td></tr><tr><td align="left">硬件</td><td align="left">APC UPS，IoT，物理服务器状态IPMI</td><td align="left">Apcupsd Exporter，IoT Edison Exporter， IPMI Exporter</td></tr><tr><td align="left">消息队列</td><td align="left">常见的消息队列中间件</td><td align="left">Beanstalkd Exporter，Kafka Exporter, NSQ Exporter, RabbitMQ Exporter</td></tr><tr><td align="left">存储</td><td align="left">Ceph、Gluster、HDFS、ScaleIO</td><td align="left">Ceph Exporter, Gluster Exporter, HDFS Exporter, ScaleIO Exporter</td></tr><tr><td align="left">HTTP服务</td><td align="left">Apache、Nginx、HAProxy</td><td align="left">Apache Exporter, HAProxy Exporter, Nginx Exporter</td></tr><tr><td align="left">API服务</td><td align="left">AWS ECS、Docker Cloud、Docker Hub、GitHub</td><td align="left">AWS ECS Exporter， Docker Cloud Exporter, Docker Hub Exporter, GitHub Exporter</td></tr><tr><td align="left">日志</td><td align="left">Fluentd、Grok</td><td align="left">Fluentd Exporter, Grok Exporter</td></tr><tr><td align="left">监控系统</td><td align="left">Graphite、InfluxDB、Nagios、Collectd</td><td align="left">Collectd Exporter, Graphite Exporter, InfluxDB Exporter, Nagios Exporter</td></tr><tr><td align="left">其它</td><td align="left">JIRA、Jenkins、Confluence</td><td align="left">JIRA Exporter, Jenkins Exporter， Confluence Exporter</td></tr></tbody></table><h2 id="系统环境准备"><a href="#系统环境准备" class="headerlink" title="系统环境准备"></a>系统环境准备</h2><p>准备一台centos7.6系统，ip：10.11.7.95（根据自己实际情况）</p><h3 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/selinux</span><br><span class="line">    SELINUX=disabled</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><h3 id="关闭防火墙或者开放对应端口"><a href="#关闭防火墙或者开放对应端口" class="headerlink" title="关闭防火墙或者开放对应端口"></a>关闭防火墙或者开放对应端口</h3><p>所需端口：prometheus/9090/tcp grafana/3000/tcp alertmanager/9093/tcp prometheus-ding/8060/tcp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl start firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放端口</span></span><br><span class="line">firewall-cmd --zone=public --list-ports 查看端口</span><br><span class="line">firewall-cmd --zone=public --query-port=80/tcp    查看端口</span><br><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent        添加端口</span><br><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent    删除端口</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl reload firewalld.service</span><br></pre></td></tr></table></figure><h2 id="安装Prometheus平台"><a href="#安装Prometheus平台" class="headerlink" title="安装Prometheus平台"></a>安装Prometheus平台</h2><p>从<a href="https://prometheus.io/download/">官网1</a>,<a href="https://github.com/orgs/prometheus/repositories?type=all">官网2</a>下载相应版本并安装，数据缓存在data目录中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/ &amp;&amp; <span class="built_in">mkdir</span> package &amp;&amp; <span class="built_in">cd</span> package</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 下载对应安装包：</span></span><br><span class="line">wget https://github.com/prometheus/prometheus/releases/download/v2.37.0/prometheus-2.37.0.linux-amd64.tar.gz</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 解压至指定文件夹</span></span><br><span class="line">tar -zxvf /home/package/prometheus-2.37.0.linux-amd64.tar.gz -C /usr/local/</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建软链</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/prometheus-2.37.0.linux-amd64/ /usr/local/prometheus</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 配置prometheus开机自启</span></span><br><span class="line">vi /usr/lib/systemd/system/prometheus.service</span><br><span class="line"><span class="comment"># 写入以下信息：</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=https://prometheus.io</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/prometheus/prometheus --config.file=/usr/local/prometheus/prometheus.yml --storage.tsdb.path=/usr/local/prometheus/data --web.enable-lifecycle</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"> </span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start prometheus</span><br><span class="line">systemctl status prometheus</span><br><span class="line">systemctl <span class="built_in">enable</span> prometheus</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://10.11.7.95:9090/">http://10.11.7.95:9090/</a> 可查看对应的数据源</p><h3 id="热启动"><a href="#热启动" class="headerlink" title="热启动"></a>热启动</h3><p>prometheus启动后修改配置文件就需要再重启生效，可以通过以下方式 热加载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST http://localhost:9090/-/reload</span><br></pre></td></tr></table></figure><p>请求接口后返回 Lifecycle API is not enabled. 那么就是启动的时候没有开启热更新配置，需要在启动的命令行增加参数： –web.enable-lifecycle</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/prometheus.service</span><br><span class="line">···</span><br><span class="line">ExecStart=/usr/local/prometheus/prometheus --config.file=/usr/local/prometheus/prometheus.yml --storage.tsdb.path=/usr/local/prometheus/data --web.enable-lifecycle</span><br><span class="line">···</span><br><span class="line"><span class="comment"># 然后执行命令</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart prometheus</span><br><span class="line"></span><br><span class="line"><span class="comment">#后面每次修改了prometheus配置文件后，可以调用接口进行配置的热加载：</span></span><br><span class="line">curl -X POST http://localhost:9090/-/reload</span><br></pre></td></tr></table></figure><h2 id="安装windows-exporter"><a href="#安装windows-exporter" class="headerlink" title="安装windows_exporter"></a>安装windows_exporter</h2><p>从<a href="https://github.com/prometheus-community/windows_exporter/releases">官网</a>下载相应版本并安装<br>下载msi版本，双击安装，会开机自动启动<br><img src="https://qiufuqi.github.io/img/hexo/20221012103257.png"><br>访问地址：http://目标ip:9182/metrics 可查看对应的数据源</p><h2 id="安装node-exporter"><a href="#安装node-exporter" class="headerlink" title="安装node_exporter"></a>安装node_exporter</h2><p>从<a href="https://prometheus.io/download/">官网</a>下载相应版本并安装</p><h3 id="在各个节点服务器上安装监控"><a href="#在各个节点服务器上安装监控" class="headerlink" title="在各个节点服务器上安装监控"></a>在各个节点服务器上安装监控</h3><p>安装node_exporter，采集机器运行数据信息，默认端口9100 （可更改为指定端口）,按照步骤执行以下命令或者拷贝脚本运行</p><h4 id="脚本安装node"><a href="#脚本安装node" class="headerlink" title="脚本安装node"></a>脚本安装node</h4><p>node_exporter.sh一键监控安装脚本，提前下载好安装文件或者<a href="https://github.com/prometheus/blackbox_exporter/releases">在线下载</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Date: 2023/12/13</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;download node_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">wget -N -P /root/ https://github.com/prometheus/node_exporter/releases/download/v1.4.0-rc.0/node_exporter-1.4.0-rc.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;tar node_exporter&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">tar -zxvf /root/node_exporter-1.4.0-rc.0.linux-amd64.tar.gz -C /opt/ &amp;&amp; <span class="built_in">mv</span> /opt/node_exporter-1.4.0-rc.0.linux-amd64 /usr/local/node_exporter</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;delete node_exporter***tar.gz&quot;</span></span><br><span class="line"><span class="built_in">rm</span> -rf /root/node_exporter-1.4.0-rc.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;firewall node_exporter port 9100 &quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">firewall-cmd --zone=public --add-port=9100/tcp --permanent &amp;&amp; firewall-cmd --reload </span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;add node_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/node_exporter.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=node_exporter</span></span><br><span class="line"><span class="string">After=network.target </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/node_exporter/node_exporter --web.listen-address=:9100</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;start node_exporter.service&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl start node_exporter &amp;&amp; systemctl <span class="built_in">enable</span> --now node_exporter</span><br></pre></td></tr></table></figure><h4 id="逐步安装node"><a href="#逐步安装node" class="headerlink" title="逐步安装node"></a>逐步安装node</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/ &amp;&amp; <span class="built_in">mkdir</span> package &amp;&amp; <span class="built_in">cd</span> package</span><br><span class="line"> </span><br><span class="line">下载对应安装包：</span><br><span class="line">wget https://github.com/prometheus/node_exporter/releases/download/v1.4.0-rc.0/node_exporter-1.4.0-rc.0.linux-amd64.tar.gz</span><br><span class="line"> </span><br><span class="line">解压至指定文件夹</span><br><span class="line">tar -zxvf /home/package/node_exporter-1.4.0-rc.0.linux-amd64.tar.gz -C /usr/local/</span><br><span class="line"> </span><br><span class="line">创建软链</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/node_exporter-1.4.0-rc.0.linux-amd64/ /usr/local/node_exporter</span><br><span class="line"> </span><br><span class="line">配置node_exporter开机自启</span><br><span class="line">vi /usr/lib/systemd/system/node_exporter.service</span><br><span class="line">写入以下信息：</span><br><span class="line">[Unit]</span><br><span class="line">Description=node_exporter</span><br><span class="line">After=network.target </span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/node_exporter/node_exporter --web.listen-address=:9100</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start node_exporter</span><br><span class="line">systemctl status node_exporter</span><br><span class="line">systemctl <span class="built_in">enable</span> node_exporter</span><br></pre></td></tr></table></figure><p>访问地址：http://目标ip:9100/metrics 可查看对应的数据源</p><h2 id="加入prometheus监控"><a href="#加入prometheus监控" class="headerlink" title="加入prometheus监控"></a>加入prometheus监控</h2><h3 id="静态部署"><a href="#静态部署" class="headerlink" title="静态部署"></a>静态部署</h3><p>使用static_configs实现静态部署，当有新增节点时需要重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/prometheus/</span><br><span class="line"><span class="built_in">cp</span> /usr/local/prometheus/prometheus.yml /usr/local/prometheus/prometheus.yml.bak</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 添加对应的需监控信息</span></span><br><span class="line">vi /usr/local/prometheus/prometheus.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例1：</span></span><br><span class="line">- job_name: <span class="string">&#x27;Doris&#x27;</span></span><br><span class="line">    scrape_interval:     10s</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&#x27;10.12.79.40:9100&#x27;</span>,<span class="string">&#x27;10.12.79.41:9100&#x27;</span>,<span class="string">&#x27;10.12.79.42:9100&#x27;</span>,<span class="string">&#x27;10.12.79.43:9100&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例2： 仅不同写法</span></span><br><span class="line">- job_name: <span class="string">&#x27;Doris&#x27;</span></span><br><span class="line">    scrape_interval:     10s</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">         - 10.12.79.40:9100</span><br><span class="line">         - 10.12.79.41:9100</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测填写是否正确</span></span><br><span class="line">./promtool check config prometheus.yml</span><br><span class="line"> Checking prometheus.yml</span><br><span class="line"> SUCCESS: prometheus.yml is valid prometheus config file syntax</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重启prometheus</span></span><br><span class="line">systemctl restart prometheus</span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">curl  -X POST localhost:9090/-/reload</span><br></pre></td></tr></table></figure><h3 id="文件部署"><a href="#文件部署" class="headerlink" title="文件部署"></a>文件部署</h3><p>当有新的节点时，只需要修改对应的yml或者json文件即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加对应的需监控信息</span></span><br><span class="line">vi /usr/local/prometheus/prometheus.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件发现服务</span></span><br><span class="line">- job_name: <span class="string">&#x27;Doris&#x27;</span></span><br><span class="line">  scrape_interval:     10s</span><br><span class="line">  file_sd_configs: <span class="comment"># 基于文件服务发现</span></span><br><span class="line">    - files:</span><br><span class="line">      - <span class="string">&quot;./device/doris_device.yml&quot;</span>    <span class="comment"># - &quot;./device/doris_device.json&quot;  yml和json格式选择一个即可</span></span><br><span class="line">      refresh_interval: 5s</span><br><span class="line"></span><br><span class="line"> vi /usr/local/prometheus/device/doris_device.yml</span><br><span class="line"> <span class="comment"># 或者单独列</span></span><br><span class="line">- labels:</span><br><span class="line">    desc: Doris     <span class="comment"># 无实际意义</span></span><br><span class="line">  targets:</span><br><span class="line">    - <span class="string">&#x27;10.12.79.40:9100&#x27;</span></span><br><span class="line">    - <span class="string">&#x27;10.12.79.41:9100&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一起</span></span><br><span class="line">- labels:</span><br><span class="line">    desc: Doris     <span class="comment"># 无实际意义</span></span><br><span class="line">  targets: [<span class="string">&#x27;10.12.79.40:9100&#x27;</span>,<span class="string">&#x27;10.12.79.41:9100&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># json模式  file_sd_configs中同步修改</span></span><br><span class="line"> vi /usr/local/prometheus/device/doris_device.json</span><br><span class="line">[&#123;</span><br><span class="line"><span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;desc&quot;</span>: <span class="string">&quot;Doris&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;targets&quot;</span>: [</span><br><span class="line"><span class="string">&quot;10.12.79.40:9100&quot;</span>,</span><br><span class="line"><span class="string">&quot;10.12.79.41:9100&quot;</span></span><br><span class="line">]</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测填写是否正确</span></span><br><span class="line">./promtool check config prometheus.yml</span><br><span class="line"><span class="comment"># 重启prometheus</span></span><br><span class="line">systemctl restart prometheus</span><br><span class="line"><span class="comment"># 保持热加载</span></span><br><span class="line">curl  -X POST localhost:9090/-/reload</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://10.11.7.95:9090/targets">http://10.11.7.95:9090/targets</a> 可查看是否捕捉到信息</p><h2 id="搭建grafana平台"><a href="#搭建grafana平台" class="headerlink" title="搭建grafana平台"></a>搭建grafana平台</h2><p>从<a href="https://grafana.com/grafana/download">官网</a>下载对应版本安装<br>从<a href="https://grafana.com/grafana/dashboards/">grafana模板</a>导入对应模板id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.grafana.com/enterprise/release/grafana-enterprise-9.0.2-1.x86_64.rpm</span><br><span class="line">yum -y install grafana-enterprise-9.0.2-1.x86_64.rpm</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 启动-并开机自启</span></span><br><span class="line">systemctl start grafana-server</span><br><span class="line">systemctl <span class="built_in">enable</span> grafana-server</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://10.11.7.95:3000/login">http://10.11.7.95:3000/login</a> admin/admin登陆后修改密码<br>Data sources添加Prometheus数据源：<a href="http://10.11.7.95:9090/">http://10.11.7.95:9090</a></p><p>导入<a href="https://github.com/starsliao/Prometheus">Linux模板</a>，本次选择模板id：16098<br>导入Window模板，模板id：10467</p><h2 id="安装alertmanager报警"><a href="#安装alertmanager报警" class="headerlink" title="安装alertmanager报警"></a>安装alertmanager报警</h2><h3 id="下载对应安装包并解压"><a href="#下载对应安装包并解压" class="headerlink" title="下载对应安装包并解压"></a>下载对应安装包并解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/package</span><br><span class="line">wget https://github.com/prometheus/alertmanager/releases/download/v0.21.0/alertmanager-0.21.0.linux-amd64.tar.gz</span><br><span class="line"> </span><br><span class="line">解压至指定文件夹</span><br><span class="line">tar -zxvf /home/package/alertmanager-0.21.0.linux-amd64.tar.gz -C /usr/local/</span><br><span class="line">软连接</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/alertmanager-0.21.0.linux-amd64/ /usr/local/alertmanager</span><br></pre></td></tr></table></figure><h3 id="配置alertmanager开机自启动"><a href="#配置alertmanager开机自启动" class="headerlink" title="配置alertmanager开机自启动"></a>配置alertmanager开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/alertmanager.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=https://prometheus.io</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Restart=on-failure</span><br><span class="line">ExecStart=/usr/local/alertmanager/alertmanager --config.file=/usr/local/alertmanager/alertmanager.yml</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"> </span><br><span class="line">启动 &amp;&amp; 自启动</span><br><span class="line">systemctl start alertmanager</span><br><span class="line">systemctl <span class="built_in">enable</span> alertmanager</span><br><span class="line"> </span><br><span class="line">访问地址http://10.11.7.95:9093/<span class="comment">#/alerts</span></span><br></pre></td></tr></table></figure><h3 id="配置altermanager报警属性"><a href="#配置altermanager报警属性" class="headerlink" title="配置altermanager报警属性"></a>配置altermanager报警属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/alertmanager &amp;&amp; <span class="built_in">cp</span> alertmanager.yml alertmanager.yml.bak</span><br><span class="line">vi alertmanager.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#参考示例</span></span><br><span class="line"><span class="comment">################开始###############</span></span><br><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line">  smtp_smarthost: <span class="string">&#x27;smtp.126.com:25&#x27;</span>      <span class="comment"># smtp地址</span></span><br><span class="line">  smtp_from: <span class="string">&#x27;XXXXXXXX@126.com&#x27;</span>          <span class="comment"># 谁发邮件</span></span><br><span class="line">  smtp_auth_username: <span class="string">&#x27;XXXXXXXX@126.com&#x27;</span> <span class="comment"># 邮箱用户</span></span><br><span class="line">  smtp_auth_password: <span class="string">&#x27;XXXXXXXXXXXXXXXX&#x27;</span> <span class="comment"># 邮箱客户端授权密码</span></span><br><span class="line">  smtp_require_tls: <span class="literal">false</span></span><br><span class="line"> </span><br><span class="line">templates:                               <span class="comment"># 指定邮件模板的路径，可以使用相对路径，template/*.tmp的方式</span></span><br><span class="line">  - <span class="string">&#x27;/usr/local/alertmanager/template/*.tmp&#x27;</span></span><br><span class="line"> </span><br><span class="line">route:                                   <span class="comment"># route用来设置报警的分发策略</span></span><br><span class="line">  group_by: [<span class="string">&quot;alertname&quot;</span>]                <span class="comment"># 分组名</span></span><br><span class="line">  group_wait: 30s                        <span class="comment"># 当收到告警的时候，等待三十秒看是否还有告警，如果有就一起发出去</span></span><br><span class="line">  group_interval: 30s                    <span class="comment"># 发送警告间隔时间</span></span><br><span class="line">  repeat_interval: 20m                   <span class="comment"># 重复报警的间隔时间</span></span><br><span class="line">  receiver: Node_warning                 <span class="comment"># 设置默认接收人，如果想分组接收，把下面这段的注释去掉</span></span><br><span class="line"> </span><br><span class="line">receivers:                               <span class="comment"># 定义接收者，将告警发送给谁</span></span><br><span class="line">- name: <span class="string">&#x27;Node_warning&#x27;</span></span><br><span class="line">  email_configs:</span><br><span class="line">  - send_resolved: <span class="literal">true</span></span><br><span class="line">    to: <span class="string">&#x27;******@163.com&#x27;</span></span><br><span class="line">    html: <span class="string">&#x27;&#123;&#123; template &quot;email.html&quot; . &#125;&#125;&#x27;</span> <span class="comment"># 指定使用模板，如果不指定，还是会加载默认的模板的</span></span><br><span class="line">    headers: &#123; Subject: <span class="string">&quot;[WARN]告警&quot;</span> &#125;    <span class="comment"># 配置邮件主题</span></span><br><span class="line"> </span><br><span class="line">  webhook_configs:                        <span class="comment"># 钉钉消息</span></span><br><span class="line">  - url: http://127.0.0.1:8060/dingtalk/webhook/send       </span><br><span class="line">    <span class="comment">#警报被解决之后是否通知 消息模板/usr/local/prometheus-webhook-dingtalk/config.yml</span></span><br><span class="line">    send_resolved: <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">################结束###############</span></span><br><span class="line">检测配置是否正确 并 重启</span><br><span class="line">./amtool check-config alertmanager.yml</span><br><span class="line">systemctl restart alertmanager</span><br></pre></td></tr></table></figure><p>在grafana的alert-admin中添加alertmanager地址<br>在grafana的alert-Concat point中添加Alertmanager预警<br>在grafana的alert-Policies中使用Alertmanager预警</p><h3 id="配置altermanager消息模板"><a href="#配置altermanager消息模板" class="headerlink" title="配置altermanager消息模板"></a>配置altermanager消息模板</h3><h4 id="邮件消息"><a href="#邮件消息" class="headerlink" title="邮件消息"></a>邮件消息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> template &amp;&amp; vi template/email.tmp</span><br><span class="line"><span class="comment">################开始###############</span></span><br><span class="line">&#123;&#123; define <span class="string">&quot;email.html&quot;</span> &#125;&#125;</span><br><span class="line">    &#123;&#123; range .Alerts &#125;&#125;</span><br><span class="line">&lt;pre&gt;</span><br><span class="line">    ========start==========</span><br><span class="line">    告警程序: prometheus_alert </span><br><span class="line">    告警级别: &#123;&#123; .Labels.severity &#125;&#125; </span><br><span class="line">    告警类型: &#123;&#123; .Labels.alertname &#125;&#125; </span><br><span class="line">    故障主机: &#123;&#123; .Labels.instance &#125;&#125; </span><br><span class="line">    告警主题: &#123;&#123; .Annotations.summary &#125;&#125;</span><br><span class="line">    告警详情: &#123;&#123; .Annotations.description &#125;&#125;</span><br><span class="line">    触发时间: &#123;&#123; (.StartsAt.Add 28800e9).Format <span class="string">&quot;2006-01-02 15:04:05&quot;</span> &#125;&#125;</span><br><span class="line">    ========end==========</span><br><span class="line">&lt;/pre&gt;</span><br><span class="line">    &#123;&#123; end &#125;&#125;</span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br><span class="line"><span class="comment">################结束###############</span></span><br></pre></td></tr></table></figure><h4 id="钉钉预警信息"><a href="#钉钉预警信息" class="headerlink" title="钉钉预警信息"></a>钉钉预警信息</h4><h2 id="安装钉钉预警插件"><a href="#安装钉钉预警插件" class="headerlink" title="安装钉钉预警插件"></a>安装钉钉预警插件</h2><h3 id="下载对应安装包并解压-1"><a href="#下载对应安装包并解压-1" class="headerlink" title="下载对应安装包并解压"></a>下载对应安装包并解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/package</span><br><span class="line"> </span><br><span class="line">wget https://github.com/timonwong/prometheus-webhook-dingtalk/releases/download/v1.4.0/prometheus-webhook-dingtalk-1.4.0.linux-amd64.tar.gz</span><br><span class="line"> </span><br><span class="line">tar -zxvf prometheus-webhook-dingtalk-1.4.0.linux-amd64.tar.gz -C /usr/local/</span><br><span class="line"> </span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/prometheus-webhook-dingtalk-1.4.0.linux-amd64/ /usr/local/prometheus-webhook-dingtalk</span><br></pre></td></tr></table></figure><h3 id="配置-钉钉预警-开机自启"><a href="#配置-钉钉预警-开机自启" class="headerlink" title="配置-钉钉预警-开机自启"></a>配置-钉钉预警-开机自启</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/prometheus-webhook-dingtalk.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Node Exporter</span><br><span class="line">Wants=network-online.target</span><br><span class="line">After=network-online.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/prometheus-webhook-dingtalk/prometheus-webhook-dingtalk  --config.file=/usr/local/prometheus-webhook-dingtalk/config.yml</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=default.target</span><br><span class="line"> </span><br><span class="line">启动 &amp;&amp; 开机自启动</span><br><span class="line">systemctl start prometheus-webhook-dingtalk</span><br><span class="line">systemctl <span class="built_in">enable</span> prometheus-webhook-dingtalk</span><br></pre></td></tr></table></figure><h3 id="配置-钉钉预警-报警属性"><a href="#配置-钉钉预警-报警属性" class="headerlink" title="配置-钉钉预警-报警属性"></a>配置-钉钉预警-报警属性</h3><p>修改相关配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/prometheus-webhook-dingtalk &amp;&amp; vi config.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">##################开始###################</span></span><br><span class="line"><span class="comment"># Request timeout</span></span><br><span class="line"> <span class="built_in">timeout</span>: 5s</span><br><span class="line"> </span><br><span class="line"><span class="comment">## Customizable templates path</span></span><br><span class="line"><span class="comment"># templates:</span></span><br><span class="line"><span class="comment">#   - contrib/templates/legacy/template.tmpl</span></span><br><span class="line"><span class="comment">#模板文件</span></span><br><span class="line"> templates:</span><br><span class="line">    - /usr/local/prometheus-webhook-dingtalk/template/*.tmp</span><br><span class="line"><span class="comment">## You can also override default template using `default_message`</span></span><br><span class="line"><span class="comment">## The following example to use the &#x27;legacy&#x27; template from v0.3.0</span></span><br><span class="line"><span class="comment"># default_message:</span></span><br><span class="line"><span class="comment">#   title: &#x27;&#123;&#123; template &quot;legacy.title&quot; . &#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment">#   text: &#x27;&#123;&#123; template &quot;legacy.content&quot; . &#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment">## Targets, previously was known as &quot;profiles&quot;</span></span><br><span class="line"><span class="comment"># 钉钉群自己创建机器人</span></span><br><span class="line"> targets:</span><br><span class="line">   webhook:</span><br><span class="line">     url: https://oapi.dingtalk.com/robot/send?access_token=**************</span><br><span class="line">     message:</span><br><span class="line">       <span class="comment"># Use legacy template</span></span><br><span class="line">       title: <span class="string">&#x27;&#123;&#123; template &quot;ding.link.title&quot; . &#125;&#125;&#x27;</span></span><br><span class="line">       text: <span class="string">&#x27;&#123;&#123; template &quot;ding.link.content&quot; . &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###############结束#############</span></span><br></pre></td></tr></table></figure><h3 id="配置-钉钉预警-消息模板"><a href="#配置-钉钉预警-消息模板" class="headerlink" title="配置-钉钉预警-消息模板"></a>配置-钉钉预警-消息模板</h3><p>创建模板文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> template &amp;&amp; vi template/template.tmp</span><br><span class="line"> </span><br><span class="line">&#123;&#123; define <span class="string">&quot;__subject&quot;</span> &#125;&#125;[Linux 基础监控告警:&#123;&#123; .Alerts.Firing | len &#125;&#125;] &#123;&#123; end &#125;&#125;</span><br><span class="line"> </span><br><span class="line">&#123;&#123; define <span class="string">&quot;__text_list&quot;</span> &#125;&#125;&#123;&#123; range . &#125;&#125;</span><br><span class="line"> </span><br><span class="line">&#123;&#123; range .Labels.SortedPairs &#125;&#125;</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> eq .Name <span class="string">&quot;instance&quot;</span> &#125;&#125;&gt; 实例: &#123;&#123; .Value | html &#125;&#125;&#123;&#123; end &#125;&#125;</span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br><span class="line"> </span><br><span class="line">&#123;&#123; range .Labels.SortedPairs &#125;&#125;</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> eq .Name <span class="string">&quot;serverity&quot;</span> &#125;&#125;&gt; 告警级别: &#123;&#123; .Value | html &#125;&#125;&#123;&#123; end &#125;&#125;</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> eq .Name <span class="string">&quot;hostname&quot;</span> &#125;&#125;&gt; 主机名称: &#123;&#123; .Value | html &#125;&#125;&#123;&#123; end &#125;&#125;</span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br><span class="line"> </span><br><span class="line">&#123;&#123; range .Annotations.SortedPairs &#125;&#125;</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> eq .Name <span class="string">&quot;description&quot;</span> &#125;&#125;&gt; 告警详情: &#123;&#123; .Value | html &#125;&#125;&#123;&#123; end &#125;&#125;</span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br><span class="line">触发时间: &#123;&#123; (.StartsAt.Add 28800e9).Format <span class="string">&quot;2006-01-02 15:04:05&quot;</span> &#125;&#125;</span><br><span class="line"> </span><br><span class="line">&#123;&#123;<span class="string">&quot;============================&quot;</span>&#125;&#125;</span><br><span class="line">&#123;&#123; end &#125;&#125;&#123;&#123; end &#125;&#125;</span><br><span class="line"> </span><br><span class="line">&#123;&#123; define <span class="string">&quot;ding.link.title&quot;</span> &#125;&#125;&#123;&#123; template <span class="string">&quot;__subject&quot;</span> . &#125;&#125;&#123;&#123; end &#125;&#125;</span><br><span class="line">&#123;&#123; define <span class="string">&quot;ding.link.content&quot;</span> &#125;&#125;</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> gt (len .Alerts.Firing) 0 &#125;&#125;<span class="comment">#### [&#123;&#123; .Alerts.Firing | len &#125;&#125;]【Linux 报警触发】</span></span><br><span class="line">&#123;&#123; template <span class="string">&quot;__text_list&quot;</span> .Alerts.Firing &#125;&#125;&#123;&#123; end &#125;&#125;</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> gt (len .Alerts.Resolved) 0 &#125;&#125;<span class="comment">#### [&#123;&#123; .Alerts.Resolved | len &#125;&#125;]【Linux 报警恢复】</span></span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="编写告警规则"><a href="#编写告警规则" class="headerlink" title="编写告警规则"></a>编写告警规则</h2><p>告警规则<a href="https://www.bbsmax.com/A/1O5EQv7G57/">参考</a></p><h3 id="采集规则文件"><a href="#采集规则文件" class="headerlink" title="采集规则文件"></a>采集规则文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/prometheus &amp;&amp; <span class="built_in">mkdir</span> rules &amp;&amp; <span class="built_in">cd</span> rules</span><br><span class="line"></span><br><span class="line">修改对应位置</span><br><span class="line">vi prometheus.yml</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">    - static_configs:</span><br><span class="line">        - targets:</span><br><span class="line">           - 127.0.0.1:9093       <span class="comment"># 9093为altermanager预警接口，产生预警则向指定端口发送</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span></span><br><span class="line">rule_files:</span><br><span class="line">   - <span class="string">&quot;rules/*.yml&quot;</span></span><br><span class="line">  <span class="comment"># - &quot;first_rules.yml&quot;</span></span><br><span class="line">  <span class="comment"># - &quot;second_rules.yml&quot;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="编写告警规则-1"><a href="#编写告警规则-1" class="headerlink" title="编写告警规则"></a>编写告警规则</h3><h4 id="编写记录规则-参考：k8s-record-rules-yml"><a href="#编写记录规则-参考：k8s-record-rules-yml" class="headerlink" title="编写记录规则 参考：k8s-record-rules.yml"></a>编写记录规则 参考：k8s-record-rules.yml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">  - name: k8s-record</span><br><span class="line">    rules:</span><br><span class="line">    - <span class="built_in">expr</span>: node_uname_info&#123;job=~<span class="string">&quot;k8s&quot;</span>&#125;</span><br><span class="line">      record: k8s:node_uname_info</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点信息&quot;</span></span><br><span class="line">        unit: <span class="string">&quot; &quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line">    - <span class="built_in">expr</span>: up&#123;job=~<span class="string">&quot;k8s&quot;</span>&#125;</span><br><span class="line">      record: k8s:up</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点是否在线, 在线1,不在线0&quot;</span></span><br><span class="line">        unit: <span class="string">&quot; &quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line">    - <span class="built_in">expr</span>: time() - node_boot_time_seconds&#123;job=~<span class="string">&quot;k8s&quot;</span>&#125;</span><br><span class="line">      record: k8s:node_uptime</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的运行时间&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;s&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"><span class="comment">##############################################################################################</span></span><br><span class="line"><span class="comment">#                              cpu                                                           #</span></span><br><span class="line">    - <span class="built_in">expr</span>: (1 - avg by (environment,instance) (irate(node_cpu_seconds_total&#123;job=<span class="string">&quot;k8s&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125;[5m])))  * 100</span><br><span class="line">      record: k8s:cpu:total:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的cpu总消耗百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: (avg by (environment,instance) (irate(node_cpu_seconds_total&#123;job=<span class="string">&quot;k8s&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125;[5m])))  * 100</span><br><span class="line">      record: k8s:cpu:idle:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的cpu idle百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: (avg by (environment,instance) (irate(node_cpu_seconds_total&#123;job=<span class="string">&quot;k8s&quot;</span>,mode=<span class="string">&quot;iowait&quot;</span>&#125;[5m])))  * 100</span><br><span class="line">      record: k8s:cpu:iowait:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的cpu iowait百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: (avg by (environment,instance) (irate(node_cpu_seconds_total&#123;job=<span class="string">&quot;k8s&quot;</span>,mode=<span class="string">&quot;system&quot;</span>&#125;[5m])))  * 100</span><br><span class="line">      record: k8s:cpu:system:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的cpu system百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: (avg by (environment,instance) (irate(node_cpu_seconds_total&#123;job=<span class="string">&quot;k8s&quot;</span>,mode=<span class="string">&quot;user&quot;</span>&#125;[5m])))  * 100</span><br><span class="line">      record: k8s:cpu:user:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的cpu user百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: (avg by (environment,instance) (irate(node_cpu_seconds_total&#123;job=<span class="string">&quot;k8s&quot;</span>,mode=~<span class="string">&quot;softirq|nice|irq|steal&quot;</span>&#125;[5m])))  * 100</span><br><span class="line">      record: k8s:cpu:other:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的cpu 其他的百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"><span class="comment">##############################################################################################</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">##############################################################################################</span></span><br><span class="line"><span class="comment">#                                    memory                                                  #</span></span><br><span class="line">    - <span class="built_in">expr</span>: node_memory_MemTotal_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;</span><br><span class="line">      record: k8s:memory:total</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的内存总量&quot;</span></span><br><span class="line">        unit: byte</span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: node_memory_MemFree_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;</span><br><span class="line">      record: k8s:memory:free</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的剩余内存量&quot;</span></span><br><span class="line">        unit: byte</span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: node_memory_MemTotal_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125; - node_memory_MemFree_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;</span><br><span class="line">      record: k8s:memory:used</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的已使用内存量&quot;</span></span><br><span class="line">        unit: byte</span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: node_memory_MemTotal_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125; - node_memory_MemAvailable_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;</span><br><span class="line">      record: k8s:memory:actualused</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点用户实际使用的内存量&quot;</span></span><br><span class="line">        unit: byte</span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: ((node_memory_MemTotal_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125; - node_memory_MemFree_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125; - node_memory_Buffers_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125; - node_memory_Cached_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;) / (node_memory_MemTotal_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125; )) * 100 </span><br><span class="line">      record: k8s:memory:used:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的内存使用百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: ((node_memory_MemAvailable_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125; / (node_memory_MemTotal_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;)))* 100</span><br><span class="line">      record: k8s:memory:free:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的内存剩余百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"><span class="comment">##############################################################################################</span></span><br><span class="line"><span class="comment">#                                   load                                                     #</span></span><br><span class="line">    - <span class="built_in">expr</span>: <span class="built_in">sum</span> by (instance) (node_load1&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;)</span><br><span class="line">      record: k8s:load:load1</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;系统1分钟负载&quot;</span></span><br><span class="line">        unit: <span class="string">&quot; &quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: <span class="built_in">sum</span> by (instance) (node_load5&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;)</span><br><span class="line">      record: k8s:load:load5</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;系统5分钟负载&quot;</span></span><br><span class="line">        unit: <span class="string">&quot; &quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: <span class="built_in">sum</span> by (instance) (node_load15&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;)</span><br><span class="line">      record: k8s:load:load15</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;系统15分钟负载&quot;</span></span><br><span class="line">        unit: <span class="string">&quot; &quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">##############################################################################################</span></span><br><span class="line"><span class="comment">#                                 disk                                                       #</span></span><br><span class="line">    - <span class="built_in">expr</span>: node_filesystem_size_bytes&#123;job=<span class="string">&quot;k8s&quot;</span> ,fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125;</span><br><span class="line">      record: k8s:disk:usage:total</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的磁盘总量&quot;</span></span><br><span class="line">        unit: byte</span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: node_filesystem_avail_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>,fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125;</span><br><span class="line">      record: k8s:disk:usage:free</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的磁盘剩余空间&quot;</span></span><br><span class="line">        unit: byte</span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: node_filesystem_size_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>,fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125; - node_filesystem_avail_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>,fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125;</span><br><span class="line">      record: k8s:disk:usage:used</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的磁盘使用的空间&quot;</span></span><br><span class="line">        unit: byte</span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>:  (1 - node_filesystem_avail_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>,fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125; / node_filesystem_size_bytes&#123;job=<span class="string">&quot;k8s&quot;</span>,fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125;) * 100</span><br><span class="line">      record: k8s:disk:used:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的磁盘的使用百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: irate(node_disk_reads_completed_total&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;[1m])</span><br><span class="line">      record: k8s:disk:<span class="built_in">read</span>:count:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的磁盘读取速率&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;次/秒&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: irate(node_disk_writes_completed_total&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;[1m])</span><br><span class="line">      record: k8s:disk:write:count:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的磁盘写入速率&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;次/秒&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: (irate(node_disk_written_bytes_total&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;[1m]))/1024/1024</span><br><span class="line">      record: k8s:disk:<span class="built_in">read</span>:mb:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的设备读取MB速率&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;MB/s&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: (irate(node_disk_read_bytes_total&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;[1m]))/1024/1024</span><br><span class="line">      record: k8s:disk:write:mb:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的设备写入MB速率&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;MB/s&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">##############################################################################################</span></span><br><span class="line"><span class="comment">#                                filesystem                                                  #</span></span><br><span class="line">    - <span class="built_in">expr</span>:   (1 -node_filesystem_files_free&#123;job=<span class="string">&quot;k8s&quot;</span>,fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125; / node_filesystem_files&#123;job=<span class="string">&quot;k8s&quot;</span>,fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125;) * 100</span><br><span class="line">      record: k8s:filesystem:used:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的inode的剩余可用的百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"><span class="comment">#############################################################################################</span></span><br><span class="line"><span class="comment">#                                filefd                                                     #</span></span><br><span class="line">    - <span class="built_in">expr</span>: node_filefd_allocated&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;</span><br><span class="line">      record: k8s:filefd_allocated:count</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的文件描述符打开个数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: node_filefd_allocated&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;/node_filefd_maximum&#123;job=<span class="string">&quot;k8s&quot;</span>&#125; * 100</span><br><span class="line">      record: k8s:filefd_allocated:percent</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的文件描述符打开百分比&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;%&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#############################################################################################</span></span><br><span class="line"><span class="comment">#                                network                                                    #</span></span><br><span class="line">    - <span class="built_in">expr</span>: avg by (environment,instance,device) (irate(node_network_receive_bytes_total&#123;device=~<span class="string">&quot;eth0|eth1|ens33|ens37&quot;</span>&#125;[1m]))</span><br><span class="line">      record: k8s:network:netin:bit:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点网卡eth0每秒接收的比特数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;bit/s&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: avg by (environment,instance,device) (irate(node_network_transmit_bytes_total&#123;device=~<span class="string">&quot;eth0|eth1|ens33|ens37&quot;</span>&#125;[1m]))</span><br><span class="line">      record: k8s:network:netout:bit:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点网卡eth0每秒发送的比特数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;bit/s&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: avg by (environment,instance,device) (irate(node_network_receive_packets_total&#123;device=~<span class="string">&quot;eth0|eth1|ens33|ens37&quot;</span>&#125;[1m]))</span><br><span class="line">      record: k8s:network:netin:packet:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点网卡每秒接收的数据包个数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;个/秒&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: avg by (environment,instance,device) (irate(node_network_transmit_packets_total&#123;device=~<span class="string">&quot;eth0|eth1|ens33|ens37&quot;</span>&#125;[1m]))</span><br><span class="line">      record: k8s:network:netout:packet:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点网卡发送的数据包个数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;个/秒&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: avg by (environment,instance,device) (irate(node_network_receive_errs_total&#123;device=~<span class="string">&quot;eth0|eth1|ens33|ens37&quot;</span>&#125;[1m]))</span><br><span class="line">      record: k8s:network:netin:error:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点设备驱动器检测到的接收错误包的数量&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;个/秒&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: avg by (environment,instance,device) (irate(node_network_transmit_errs_total&#123;device=~<span class="string">&quot;eth0|eth1|ens33|ens37&quot;</span>&#125;[1m]))</span><br><span class="line">      record: k8s:network:netout:error:rate</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点设备驱动器检测到的发送错误包的数量&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;个/秒&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: node_tcp_connection_states&#123;job=<span class="string">&quot;k8s&quot;</span>, state=<span class="string">&quot;established&quot;</span>&#125;</span><br><span class="line">      record: k8s:network:tcp:established:count</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点当前established的个数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;个&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: node_tcp_connection_states&#123;job=<span class="string">&quot;k8s&quot;</span>, state=<span class="string">&quot;time_wait&quot;</span>&#125;</span><br><span class="line">      record: k8s:network:tcp:timewait:count</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点timewait的连接数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;个&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: <span class="built_in">sum</span> by (environment,instance) (node_tcp_connection_states&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;)</span><br><span class="line">      record: k8s:network:tcp:total:count</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点tcp连接总数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;个&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#############################################################################################</span></span><br><span class="line"><span class="comment">#                                process                                                    #</span></span><br><span class="line">    - <span class="built_in">expr</span>: node_processes_state&#123;state=<span class="string">&quot;Z&quot;</span>&#125;</span><br><span class="line">      record: k8s:process:zoom:total:count</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点当前状态为zoom的个数&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;个&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"><span class="comment">#############################################################################################</span></span><br><span class="line"><span class="comment">#                                other                                                    #</span></span><br><span class="line">    - <span class="built_in">expr</span>: abs(node_timex_offset_seconds&#123;job=<span class="string">&quot;k8s&quot;</span>&#125;)</span><br><span class="line">      record: k8s:time:offset</span><br><span class="line">      labels:</span><br><span class="line">        desc: <span class="string">&quot;节点的时间偏差&quot;</span></span><br><span class="line">        unit: <span class="string">&quot;s&quot;</span></span><br><span class="line">        job: <span class="string">&quot;k8s&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#############################################################################################</span></span><br><span class="line"> </span><br><span class="line">    - <span class="built_in">expr</span>: count by (instance) ( count by (instance,cpu) (node_cpu_seconds_total&#123; mode=<span class="string">&#x27;system&#x27;</span>&#125;) )</span><br><span class="line">      record: k8s:cpu:count</span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h4 id="编写告警规则-参考：k8s-alert-rules-yml"><a href="#编写告警规则-参考：k8s-alert-rules-yml" class="headerlink" title="编写告警规则 参考：k8s-alert-rules.yml"></a>编写告警规则 参考：k8s-alert-rules.yml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">  - name: k8s-alert</span><br><span class="line">    rules:</span><br><span class="line">    - alert: k8s-down</span><br><span class="line">      <span class="built_in">expr</span>: k8s:up == 0</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 宕机了&quot;</span></span><br><span class="line">        description: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; \n- job: &#123;&#123; <span class="variable">$labels</span>.job &#125;&#125; 宕机了， 时间已经超过1分钟了。&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-cpu-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:cpu:total:percent &gt; 80</span><br><span class="line">      <span class="keyword">for</span>: 3m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; cpu 使用率高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; cpu使用率超过80%,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;].&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-cpu-iowait-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:cpu:iowait:percent &gt;= 12</span><br><span class="line">      <span class="keyword">for</span>: 3m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; cpu iowait 使用率高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; cpu-iowait使用率超过12%,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]%.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-load-load1-high</span><br><span class="line">      <span class="built_in">expr</span>:  (k8s:load:load1) &gt; (k8s:cpu:count) * 1.2</span><br><span class="line">      <span class="keyword">for</span>: 3m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 系统1分钟负载高于((k8s:cpu:count) * 1.2)&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 系统1分钟负载超过((k8s:cpu:count) * 1.2)%,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]%.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-memory-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:memory:used:percent &gt; 85</span><br><span class="line">      <span class="keyword">for</span>: 3m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 内存使用率高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 内存使用率超过85%,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]%.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-disk-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:disk:used:percent &gt; 88</span><br><span class="line">      <span class="keyword">for</span>: 10m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 磁盘使用率高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 磁盘使用率超过88%,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]%.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-disk-read:count-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:disk:<span class="built_in">read</span>:count:rate &gt; 3000</span><br><span class="line">      <span class="keyword">for</span>: 2m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 磁盘读取速率高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;次/秒&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 磁盘读取速率超过3000次/秒,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]次/秒.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-disk-write-count-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:disk:write:count:rate &gt; 3000</span><br><span class="line">      <span class="keyword">for</span>: 2m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; iops write 磁盘写入速率高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 磁盘写入速率超过3000次/秒,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]次/秒.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-disk-read-mb-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:disk:<span class="built_in">read</span>:mb:rate &gt; 60</span><br><span class="line">      <span class="keyword">for</span>: 2m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 设备读取MB速率高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 设备读取MB速率超过60MB/s,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]MB/s.&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-disk-write-mb-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:disk:write:mb:rate &gt; 60</span><br><span class="line">      <span class="keyword">for</span>: 2m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 设备写入MB速率高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 设备写入MB速率超过60MB/s,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]MB/s.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-filefd-allocated-percent-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:filefd_allocated:percent &gt; 80</span><br><span class="line">      <span class="keyword">for</span>: 10m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 打开文件描述符高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 打开文件描述符超过80%,当前使用率[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]%.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-network-netin-error-rate-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:network:netin:error:rate &gt; 4</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 接收错误包的数量高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 接收错误包的数量超过4个/秒,当前错误包的数量[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]个/秒.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">    - alert: k8s-network-netin-packet-rate-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:network:netin:packet:rate &gt; 35000</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 包进入速率高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 包进入速率超过35000个/秒,当前错误包的数量[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]个/秒.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">    - alert: k8s-network-netout-packet-rate-high</span><br><span class="line">      <span class="built_in">expr</span>:  k8s:network:netout:packet:rate &gt; 35000</span><br><span class="line">      <span class="keyword">for</span>: 1m</span><br><span class="line">      labels:</span><br><span class="line">        severity: info</span><br><span class="line">      annotations:</span><br><span class="line">        summary: <span class="string">&quot;instance: &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 包流出速率 高于 &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        description: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; of &#123;&#123;<span class="variable">$labels</span>.job&#125;&#125; 包流出速率超过35000个/秒,当前错误包的数量[&#123;&#123; <span class="variable">$value</span> &#125;&#125;]个/秒.&quot;</span></span><br><span class="line">        value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">        instance: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;&quot;</span></span><br><span class="line">        grafana: <span class="string">&quot;http://monitor.yurun.com/d/9CWBz0bik/fu-wu-qi-jian-kong-mian-ban?orgId=1&amp;var-job=k8s&quot;</span></span><br><span class="line">        <span class="built_in">id</span>: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.instanceid &#125;&#125;&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="重启服务prometheus"><a href="#重启服务prometheus" class="headerlink" title="重启服务prometheus"></a>重启服务prometheus</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">重启服务</span><br><span class="line">systemctl restart prometheus</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
            <tag> 钉钉告警 </tag>
            
            <tag> Altermanager </tag>
            
            <tag> Grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S监控 Prometheus</title>
      <link href="/k8s_prometheus/"/>
      <url>/k8s_prometheus/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/kevingrace/p/11151649.html">https://www.cnblogs.com/kevingrace/p/11151649.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> K8S </category>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
            <tag> K8S </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
